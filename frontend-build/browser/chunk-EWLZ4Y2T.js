import{_ as x,d as _,e as m,g as S,j as f,k as y,m as b}from"./chunk-77FKYVFO.js";var g={url:"",deserializer:a=>JSON.parse(a.data),serializer:a=>JSON.stringify(a)},W="WebSocketSubject.error must be called with an object with an error code, and an optional reason: { code: number, reason: string }",p=class a extends y{constructor(t,n){if(super(),this._socket=null,t instanceof S)this.destination=n,this.source=t;else{let e=this._config=Object.assign({},g);if(this._output=new f,typeof t=="string")e.url=t;else for(let r in t)t.hasOwnProperty(r)&&(e[r]=t[r]);if(!e.WebSocketCtor&&WebSocket)e.WebSocketCtor=WebSocket;else if(!e.WebSocketCtor)throw new Error("no WebSocket constructor can be found");this.destination=new b}}lift(t){let n=new a(this._config,this.destination);return n.operator=t,n.source=this,n}_resetState(){this._socket=null,this.source||(this.destination=new b),this._output=new f}multiplex(t,n,e){let r=this;return new S(i=>{try{r.next(t())}catch(c){i.error(c)}let o=r.subscribe({next:c=>{try{e(c)&&i.next(c)}catch(s){i.error(s)}},error:c=>i.error(c),complete:()=>i.complete()});return()=>{try{r.next(n())}catch(c){i.error(c)}o.unsubscribe()}})}_connectSocket(){let{WebSocketCtor:t,protocol:n,url:e,binaryType:r}=this._config,i=this._output,o=null;try{o=n?new t(e,n):new t(e),this._socket=o,r&&(this._socket.binaryType=r)}catch(s){i.error(s);return}let c=new _(()=>{this._socket=null,o&&o.readyState===1&&o.close()});o.onopen=s=>{let{_socket:l}=this;if(!l){o.close(),this._resetState();return}let{openObserver:k}=this._config;k&&k.next(s);let d=this.destination;this.destination=m.create(h=>{if(o.readyState===1)try{let{serializer:u}=this._config;o.send(u(h))}catch(u){this.destination.error(u)}},h=>{let{closingObserver:u}=this._config;u&&u.next(void 0),h&&h.code?o.close(h.code,h.reason):i.error(new TypeError(W)),this._resetState()},()=>{let{closingObserver:h}=this._config;h&&h.next(void 0),o.close(),this._resetState()}),d&&d instanceof b&&c.add(d.subscribe(this.destination))},o.onerror=s=>{this._resetState(),i.error(s)},o.onclose=s=>{o===this._socket&&this._resetState();let{closeObserver:l}=this._config;l&&l.next(s),s.wasClean?i.complete():i.error(s)},o.onmessage=s=>{try{let{deserializer:l}=this._config;i.next(l(s))}catch(l){i.error(l)}}}_subscribe(t){let{source:n}=this;return n?n.subscribe(t):(this._socket||this._connectSocket(),this._output.subscribe(t),t.add(()=>{let{_socket:e}=this;this._output.observers.length===0&&(e&&(e.readyState===1||e.readyState===0)&&e.close(),this._resetState())}),t)}unsubscribe(){let{_socket:t}=this;t&&(t.readyState===1||t.readyState===0)&&t.close(),this._resetState(),super.unsubscribe()}};function w(a){return new p(a)}var R=(()=>{let t=class t{constructor(){this.toastMessage=new f,this.connect()}connect(){if(!this.socket$||this.socket$.closed){let e=Math.floor(Math.random()*1e6),r=window.location.protocol==="https:"?"wss:":"ws:",i=window.location.hostname,o=window.location.port?`:${window.location.port}`:"",c=`${r}//${i}${o}/ws/${e}`;this.socket$=w(c),this.websocketSubscription=this.socket$.subscribe({next:s=>{this.toastMessage.next(s)},error:s=>{console.error("WebSocket error:",s)},complete:()=>{console.log("WebSocket connection closed")}})}return this.socket$.asObservable()}showToast(e,r="Success"){this.toastMessage.next({message:e,type:r})}close(){this.websocketSubscription&&this.websocketSubscription.unsubscribe(),this.socket$.complete()}};t.\u0275fac=function(r){return new(r||t)},t.\u0275prov=x({token:t,factory:t.\u0275fac,providedIn:"root"});let a=t;return a})();export{R as a};
