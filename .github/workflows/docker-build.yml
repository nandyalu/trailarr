name: Docker Build

on:
  push:
    branches: [ "main" ]
    # Ignore changes to assets, .devcontainer, .github, or .vscode files
    paths-ignore:
      - '**/assets/**'
      - '**/.vscode/**'
      - '**/.github/**'
      - '**/.devcontainer/**'
      - '**/*.md'
      - '**/docs/**'
      - '**/frontend/**'
      - '**/mkdocs.yml'
  pull_request:
    branches: [ "main" ]
    paths-ignore:
      - '**/assets/**'
      - '**/.vscode/**'
      - '**/.github/**'
      - '**/.devcontainer/**'
      - '**/*.md'
      - '**/docs/**'
      - '**/frontend/**'
      - '**/mkdocs.yml'

jobs:

  build:
    name: Docker Build
    runs-on: ubuntu-latest
    env:
      VER: ${{ github.sha }}-test
    # Explicitly specify permissions
    permissions:
      contents: read
      actions: write

    # steps:
      # Checkout the repository
      # - name: Checkout repository
        # uses: actions/checkout@v4
      
      # # Build the Docker image
      # - name: Build the Docker image
      #   run: docker build . --file Dockerfile --tag trailarr:${{env.VER}} --build-arg APP_VERSION=${{ env.VER }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Buildx
        uses: docker/setup-buildx-action@v3

      - name: Ensure cache directory exists
        run: mkdir -p /tmp/.buildx-cache

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          # Cache key based on pyproject.toml and Dockerfile
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-docker-${{ hashFiles('backend/pyproject.toml', 'Dockerfile') }}
          restore-keys: |
            ${{ runner.os }}-docker-

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          push: false
          cache-from: type=gha
          cache-to: type=gha,mode=max
