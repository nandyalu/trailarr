name: PR Docs Preview

on:
  pull_request:
    types: [opened, synchronize, reopened]
    paths:
      - docs/**
      - mkdocs.yml
permissions:
  contents: write
  pull-requests: write

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Needed for mkdocs-git-revision-date-localized-plugin
      
      - name: Check for docs changes
        id: docs-changes
        run: |
          git fetch origin ${{ github.base_ref }}
          CHANGED=$(git diff --name-only origin/${{ github.base_ref }} ${{ github.sha }} | grep -E '^docs/|\.md$' || true)
          if [ -z "$CHANGED" ]; then
            echo "No docs changes detected."
            exit 78
          fi

      - run: |
          git config user.name github-actions[bot]
          git config user.email 41898282+github-actions[bot]@users.noreply.github.com

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version-file: "backend/pyproject.toml"
          # python-version: '3.13'

      - name: Install uv
        uses: astral-sh/setup-uv@v6

      - name: Copy pyproject to project root
        run: cp backend/pyproject.toml .

      - name: Install dependencies
        run: uv pip install --no-cache --native-tls --system -r pyproject.toml --group docs
        # run: |
        #   python -m pip install --upgrade pip
        #   pip install -r .devcontainer/requirements/docs.txt

      - name: Build documentation
        run: mkdocs build

      - name: Deploy to gh-pages (pr-<PR_NUMBER> folder)
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./site
          destination_dir: pr-${{ github.event.pull_request.number }}
          keep_files: true
          publish_branch: gh-pages

      - name: Check for existing preview comment
        id: check-comment
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          REPO="${{ github.repository }}"
          PR_NUMBER="${{ github.event.pull_request.number }}"
          
          # Check if a preview comment already exists using GitHub API
          EXISTING_COMMENT=$(gh api repos/$REPO/issues/$PR_NUMBER/comments \
            --jq '.[] | select(.user.login == "github-actions[bot]" and (.body | contains("ðŸš€ Docs preview for this PR"))) | .id' \
            | head -n1)
          
          if [ -n "$EXISTING_COMMENT" ]; then
            echo "Found existing preview comment: $EXISTING_COMMENT"
            echo "comment_exists=true" >> $GITHUB_OUTPUT
            echo "comment_id=$EXISTING_COMMENT" >> $GITHUB_OUTPUT
          else
            echo "No existing preview comment found"
            echo "comment_exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Update or create preview comment
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          REPO="${{ github.repository }}"
          PR_NUMBER="${{ github.event.pull_request.number }}"
          DOCS_URL="https://${REPO%/*}.github.io/${REPO#*/}/pr-${PR_NUMBER}/"
          COMMENT_BODY="ðŸš€ Docs preview for this PR: [View Documentation]($DOCS_URL)"
          
          if [ "${{ steps.check-comment.outputs.comment_exists }}" == "true" ]; then
            # Update existing comment
            COMMENT_ID="${{ steps.check-comment.outputs.comment_id }}"
            echo "Updating existing comment: $COMMENT_ID"
            gh api repos/$REPO/issues/comments/$COMMENT_ID \
              --method PATCH \
              --field body="$COMMENT_BODY"
          else
            # Create new comment
            echo "Creating new comment"
            gh pr comment $PR_NUMBER \
              --repo "$REPO" \
              --body "$COMMENT_BODY"
          fi
