{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Trailarr","text":"<p>Trailarr is a Docker application to download and manage trailers for your Radarr, and Sonarr libraries.</p> <p>Github: https://github.com/nandyalu/trailarr/ </p> <p>Docker Hub: https://hub.docker.com/r/nandyalu/trailarr/</p> <p>Documentation: https://nandyalu.github.io/trailarr</p> <p>Reddit: https://www.reddit.com/r/trailarr</p> <p>Discord: https://discord.gg/BAJsv76N</p>"},{"location":"#features","title":"Features","text":"<ul> <li>Manages multiple Radarr and Sonarr instances to find media</li> <li>Runs in background like Radarr/Sonarr.</li> <li>Checks if a trailer already exists for movie/series. Download it if set to monitor.</li> <li>Downloads trailer and organizes it in the media folder.</li> <li>Follows plex naming conventions. Works with Plex, Emby, Jellyfin, etc.</li> <li>Downloads trailers for trailer id's set in Radarr/Sonarr.</li> <li>Searches for a trailer if not set in Radarr/Sonarr.</li> <li>Option to download desired video as trailer for any movie/series.</li> <li>Converts audio, video and subtitles to desired formats.</li> <li>Option to remove SponsorBlocks from videos (if any data is available).</li> <li>Beautiful and responsive UI to manage trailers and view details of movies and series.</li> <li>Built with Angular and FastAPI.</li> </ul>"},{"location":"#installation","title":"Installation","text":"<p>See the Installation guide for detailed instructions on how to install Trailarr.</p>"},{"location":"#setup","title":"Setup","text":"<p>See the Setup guide for detailed instructions on how to setup Trailarr.</p>"},{"location":"#dependencies","title":"Dependencies","text":"<p>Trailarr is built using the following libraries and tools:</p> <ul> <li>Angular</li> <li>Ffmpeg</li> <li>FastAPI</li> <li>Python</li> <li>Yt-dlp</li> </ul>"},{"location":"#support","title":"Support","text":"<p>If you have any questions or need help, please read the FAQ first. If you still need help, please create an issue on the GitHub repository or post a question on Reddit or join our Discord (recommended).</p>"},{"location":"#issues","title":"Issues","text":"<p>Issues are very valuable to this project.</p> <ul> <li>Ideas are a valuable source of contributions others can make</li> <li>Problems show where this project is lacking</li> <li>With a question, you show where contributors can improve the user experience</li> </ul> <p>Thank you for creating them.</p>"},{"location":"#contributing","title":"Contributing","text":"<p>Contributions are welcome! Please see the Contributing guide for more information.</p> <p>Looking for a frontend developer (Angular) to help with the UI, if you are interested, please reach out in the Discussions or Reddit.</p>"},{"location":"#license","title":"License","text":"<p>This project is licensed under the terms of the GPL v3 license. See GPL-3.0 license for more details.</p>"},{"location":"#disclaimer","title":"Disclaimer","text":"<p>THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.</p>"},{"location":"CONTRIBUTING/","title":"Contributing to Trailarr","text":"<p>First off, thank you for considering contributing to Trailarr. It's people like you that make Trailarr such a great tool.</p>"},{"location":"CONTRIBUTING/#getting-started","title":"Getting Started","text":"<ul> <li>Fork the repository on GitHub.</li> <li>Clone the project to your own machine.</li> <li>Open the project in Visual Studio Code.</li> <li> <p>Open <code>.devcontainer &gt; devcontainer.json</code> and change the <code>mounts</code> to your desired folders. <pre><code>\"mounts\": [\n        \"source=/var/appdata/trailarr-dev,target=/data,type=bind,consistency=cached\",\n        \"source=/media/all/Media,target=/media,type=bind,consistency=cached\"\n    ],\n</code></pre></p> <p>Note: Below steps are optional, if you don't want to test any changes that would require connecting to <code>Radarr</code> and/or <code>Sonarr</code>, you can simply remove the <code>mounts</code> section from the <code>devcontainer.json</code> file. 1. <code>source</code> is the path on your host machine. 2. <code>target</code> is the path inside the devcontainer. 3. Change the <code>mount</code> for <code>/data</code> to a folder where you want to store the data. Do not use the same folder as your production data. 4. Change the <code>mount</code> for <code>/media</code> to the your media folder mapping as set in <code>Radarr</code> and/or <code>Sonarr</code>.</p> </li> <li> <p>VS Code will automatically detect the devcontainer configuration. Click on <code>Reopen in Container</code>. This will start the build of the Docker container and place you inside it.</p> </li> <li>Make your changes inside the devcontainer. The devcontainer is a fully configured development environment with all the tools you need.</li> <li>Commit changes to your own branch.</li> <li>Push your work back up to your fork.</li> <li>Submit a Pull Request so that we can review your changes.</li> </ul> <p>NOTE: Be sure to merge the latest from \"upstream\" before making a pull request!</p>"},{"location":"CONTRIBUTING/#code-of-conduct","title":"Code of Conduct","text":"<p>This project and everyone participating in it is governed by the Code of Conduct. By participating, you are expected to uphold this code.</p>"},{"location":"CONTRIBUTING/#issue-process","title":"Issue Process","text":"<p>Issues are very valuable to this project.</p> <ul> <li>Ideas are a valuable source of contributions others can make</li> <li>Problems show where this project is lacking</li> <li>With a question, you show where contributors can improve the user experience</li> </ul> <p>Thank you for creating them.</p>"},{"location":"CONTRIBUTING/#pull-request-process","title":"Pull Request Process","text":"<ul> <li>Ensure any install or build dependencies are removed before the end of the layer when doing a build.</li> <li>Update the README.md with details of changes to the interface, this includes new environment variables, exposed ports, useful file locations and container parameters.</li> <li>Increase the version numbers in any examples files and the README.md to the new version that this Pull Request would represent. The versioning scheme we use is SemVer.</li> <li>You may merge the Pull Request in once you have the sign-off of two other developers, or if you do not have permission to do that, you may request the second reviewer to merge it for you.</li> </ul>"},{"location":"CONTRIBUTING/#code-style","title":"Code Style","text":"<p>To ensure consistency throughout the source code, keep these rules in mind as you are working:</p> <ul> <li>All features or bug fixes must be tested by one or more specs (unit tests).</li> <li>Your code should follow the syntax style of the existing code (PEP-8 for Python code, formatted using black formatter, and the Angular Style Guide for Angular code).</li> </ul>"},{"location":"CONTRIBUTING/#commit-message-guidelines","title":"Commit Message Guidelines","text":"<p>The commit message:</p> <ul> <li>is written in the imperative (e.g., \"Fix ...\", \"Add ...\")</li> <li>is kept short, while concisely explaining what the commit does.</li> <li>is clear about what part of the code is affected -- often by prefixing with the name of the subsystem and a colon, like \"express: ...\" or \"docs: ...\".</li> <li>is a complete sentence, ending with a period.</li> </ul>"},{"location":"CONTRIBUTING/#license","title":"License","text":"<p>By contributing, you agree that your contributions will be licensed under its GPL-3.0 license.</p>"},{"location":"install/","title":"Install","text":""},{"location":"install/#requirements","title":"Requirements","text":"<p>To run this application, you need the following installed on your system:</p> <ul> <li>Docker: https://docs.docker.com/get-docker/</li> <li>Radarr: https://radarr.video/</li> <li>Sonarr: https://sonarr.tv/</li> </ul>"},{"location":"install/#configuration","title":"Configuration","text":""},{"location":"install/#environment-variables","title":"Environment Variables","text":"<p>See Environment Variables for the list of optional environment variables set for the application.</p>"},{"location":"install/#volume-mapping","title":"Volume Mapping","text":"<p>See Volume Mapping for the volume mapping details.</p>"},{"location":"install/#installation","title":"Installation","text":""},{"location":"install/#docker-compose","title":"Docker Compose","text":"<p>See Docker Compose for the Docker Compose installation instructions.</p>"},{"location":"install/#docker-cli","title":"Docker CLI","text":"<p>See Docker CLI for the Docker CLI installation instructions.</p>"},{"location":"install/#help","title":"Help","text":"<p>Use the Docker Config Tool to generate the Docker Compose file/CLI command for setting up Docker Volumes and Path Mappings for Trailarr.</p>"},{"location":"help/common/","title":"Common","text":""},{"location":"help/common/#youtube-cookies","title":"YouTube Cookies","text":"<p>If you are having issues downloading trailers due to age restrictions, bot detection, etc., you can save your YouTube cookies and set the Yt-dlp Cookies Path to cookies.txt file containing YouTube cookies. This will allow the app to use the cookies to bypass restrictions.</p> <p>YouTube rotates cookies frequently on open YouTube browser tabs as a security measure. To export cookies that will remain working with yt-dlp, you will need to export cookies in such a way that they are never rotated.</p> <p>Note</p> <p>This is a hack to bypass YouTube restrictions and it might not always work. There is nothing Trailarr can do in those situations.</p>"},{"location":"help/common/#export-youtube-cookiestxt-file","title":"Export YouTube Cookies.txt file","text":"<p>The suggested way to get the cookies file is:</p> <ol> <li>Open Firefox/Chrome browser.</li> <li>Install a cookies exporter extension like Chrome: Get Cookies.txt locally or Firefox: Get Cookies.txt locally or any other cookies exporter extension.</li> <li>Open an incognito/private browsing window and login to Youtube.</li> <li>Open a new tab and close the YouTube tab.</li> <li>Export the cookies to a file say <code>cookies.txt</code> by setting <code>Export Format</code> to <code>Netscape</code>.</li> <li>Then close the private browsing/incognito window so the session is never opened in the browser again.</li> <li>Save/Copy that cookies file to Trailarr App data folder. For example, if you mapped <code>/var/appdata/trailarr</code> to <code>/config</code> in the container, save the cookies file in <code>/var/appdata/trailarr</code> folder.</li> <li>Now open Trailarr in browser and navigate to <code>Settings &gt; Trailer</code>. Under <code>Advanced</code> settings, set <code>Yt-dlp Cookies Path</code> to <code>/config/cookies.txt</code> (if you saved the file in <code>/var/appdata/trailarr</code> folder).</li> <li>Any new trailers downloaded will use the cookies to bypass restrictions.</li> </ol> <p>See below for more info regarding youtube downloaders and cookies:</p> <ul> <li>Yt-dlp: Exporting YouTube cookies and How do I pass cookies to yt-dlp?.</li> <li>Youtube-dl: How do I pass cookies to youtube-dl?</li> </ul> <p>Warning</p> <p>Make sure to save the cookies file in a secure location and map the volume to the container. Set the path to the cookies file in <code>Yt-dlp Cookies Path</code> setting.</p>"},{"location":"help/faq/","title":"FAQ","text":""},{"location":"help/faq/#does-this-work-with-plex-emby-jellyfin","title":"Does this work with Plex, Emby, Jellyfin?","text":"<p>Yes, this works with Plex, Emby, and Jellyfin. Trailarr downloads trailers for Movies and Series, and saves them in their respective media folder. Plex, Emby, and Jellyfin can pick up these trailers and display them along with the Movie or Series.</p>"},{"location":"help/faq/#how-can-i-watch-the-trailers","title":"How can I watch the trailers?","text":"<p>You can watch the trailers in the Movie or Series details in Plex, Emby, or Jellyfin. Trailers downloaded by Trailarr are saved in the same folder as the Movie or Series, for Plex, Emby, and Jellyfin to recognize and display them along with the Movie or Series.</p>"},{"location":"help/faq/#can-i-use-tailarr-without-radarr-or-sonarr","title":"Can I use Tailarr without Radarr or Sonarr?","text":"<p>No, Trailarr relies on data from Radarr and Sonarr to monitor Movies and Series. You need to have Radarr and/or Sonarr setup and connected to Trailarr to download trailers.</p>"},{"location":"help/faq/#can-i-use-trailarr-with-multiple-radarr-or-sonarr-instances","title":"Can I use Trailarr with multiple Radarr or Sonarr instances?","text":"<p>Yes, you can connect multiple Radarr and Sonarr instances to Trailarr. Trailarr will monitor Movies and Series from all connected Radarr and Sonarr instances and download trailers for them.</p>"},{"location":"help/faq/#trailarr-is-not-downloading-trailers-for-some-movies-or-series-why","title":"Trailarr is not downloading trailers for some Movies or Series. Why?","text":"<p>Trailarr monitors the Movies and Series from connected Radarr and Sonarr instances based on the Monitor Type set. Make sure you have correct Monitor Types set for the Movies and Series you want Trailarr to download trailers for.</p> <p>More info about Monitor Types here.</p>"},{"location":"help/faq/#how-can-i-change-the-monitor-type-for-a-movie-or-series","title":"How can I change the Monitor Type for a Movie or Series?","text":"<p>You can open up a Movie or Series details in Trailarr and click on the <code>Monitor</code> button to change the Monitor Type for that Movie or Series. Trailarr will download a trailer for that in the next schedule.</p>"},{"location":"help/faq/#trailarr-downloaded-an-incorrect-trailer-for-a-movie-or-series-how-can-i-fix-it","title":"Trailarr downloaded an incorrect trailer for a Movie or Series. How can I fix it?","text":"<p>Movies: Radarr provides a youtube trailer link for Movies that it gets from TMDB. Trailarr will attempt to download that trailer first, if that fails or not set, Trailarr downloads trailers based on the Movie title and year. If Trailarr downloaded an incorrect trailer, you can manually search on youtube and update the youtube trailer link in Movie details page in Trailarr.</p> <p>Series: Sonarr does not provide a youtube trailer link for Series. Trailarr will search for the Series trailer based on the Series title and year. If Trailarr downloaded an incorrect trailer, you can manually search on youtube and update the youtube trailer link in Series details page in Trailarr.</p> <p>Info</p> <p>Trailarr will not delete the trailer that was already downloaded. You have to manually click on <code>Delete</code> button to delete the trailer.</p>"},{"location":"help/faq/#trailarr-not-downloading-the-specified-youtube-video-but-downloading-a-different-video-why","title":"Trailarr not downloading the specified youtube video, but downloading a different video. Why?","text":"<p>Trailarr uses yt-dlp to download youtube videos. Some videos have restrictions on downloading, and yt-dlp might not be able to download them. The solution is to supply a cookie file (<code>Yt-dlp Cookies Path</code>) in <code>Settings &gt; Trailer &gt; Advanced</code> to download restricted videos. See Settings for more info.</p>"},{"location":"help/faq/#can-i-download-multiple-trailers-for-a-movie-or-series","title":"Can I download multiple trailers for a Movie or Series?","text":"<p>Trailarr will not download multiple trailers for same Movie or Series automatically. You can manually update the youtube trailer link and click <code>Download</code> to download another trailer. Trailarr will download and save the new trailer in the Movie or Series folder along with the old trailer.</p>"},{"location":"help/faq/#app-is-stuck-on-downloading-status-for-a-long-time-what-should-i-do","title":"App is stuck on \"Downloading\" status for a long time. What should I do?","text":"<p>Trailarr downloads the best available video in the selected resolution, and then use ffmpeg to convert to selected audio and video codecs. This process can take some time based on the video size and your server hardware. </p> <p>The amount of time it takes to convert a 3 minute video usually takes around 1-2 minutes on latest hardware (like i3-12100 or Ryzen 5 5600X).</p> <p>If you are using a Raspberry Pi or a low powered server, it might take longer to convert the video. You can check the logs to see the progress of the conversion process.</p>"},{"location":"help/release-notes/","title":"Release Notes","text":""},{"location":"help/release-notes/#v024-beta-december-06-2024","title":"v0.2.4-beta - December 06, 2024","text":"<p>What's New: \u2728</p> <ul> <li>Added an experimental setting for <code>Trailer Silence Removal</code> that will detect and remove silence at end of video. Related to #75</li> <li>Added a button to download logs in Frontend <code>Logs</code> page, and logs now displays 1000 logs instead of 100.</li> </ul> <p>Bug Fixes: \ud83d\udc1b</p> <ul> <li>Excluded words setting not updating. Fixes #76</li> <li>Remove <code>player_client</code> option in <code>yt-dlp</code> command as that can interfere with cookies when supplied.</li> <li>Fixed a bug with trailer download that is causing an exception when moving trailer to media folder. Issue posted on Reddit</li> <li>Refactored trailer download method to simplify and reduce errors. Also, when a trailer download fails, the notification will now say Error instead of 'Task Finished'. Fixes #56</li> </ul> <p>Other Changes: \u26a1</p> <ul> <li>Completely refactored trailer download to handle Exceptions and logs better.</li> <li>Added a section for <code>YouTube Cookies</code> in Docs with a recommended way to get <code>cookies.txt</code> file.</li> </ul>"},{"location":"help/release-notes/#v023-beta-december-04-2024","title":"v0.2.3-beta - December 04, 2024","text":"<p>What's New: \u2728</p> <ul> <li>Created a Discord Server for Trailarr.</li> <li>Added an option <code>Always Search</code> which when enabled will not use the YouTube trailer id provided by Arrs and searches on YouTube. Related to #6</li> <li>Added an option <code>Search Query</code> to specify the query used to search for trailers on YouTube. Fixes #6</li> <li>Added an option <code>Trailer Volume Level</code> to increase/decrease loudness of the downloaded trailer. Fixes #41</li> <li>Added options to specify the minimun and maximum duration of the trailer to download. Fixes #59</li> <li>Added an option to specify filter words to exclude trailers with those words in the title. Related to #59</li> <li>Browser authentication can now be disabled by setting <code>WEBUI_DISABLE_AUTH=True</code> env variable in docker command. Fixes #67</li> <li>Logs layout has been updated, added a search bar and increased log size to 1MB (more logs will be displayed now).</li> </ul> <p>Bug Fixes: \ud83d\udc1b</p> <ul> <li>Added some exception handling so that when a trailer download fails, it continues with the next download. Closes #70</li> <li>Some other minor bug fixes in trailer downloads.</li> </ul> <p>Other Changes: \u26a1</p> <ul> <li>Updated some logs for trailer downloads. </li> <li>Updated the search service in Frontend so that it displays a message when no results are found.</li> <li>Upgraded npm and python packages to latest available versions. Updated node to v22, Angular to v19, FastAPI to v0.115.6.</li> <li>Created API endpoints for <code>media</code> and marked <code>movie</code> and <code>series</code> endpoints for deprecation. Updated Frontend to use <code>media</code> API.</li> <li>Filtering of media is now done in the backend and sent to browser, should improve loading times.</li> <li>Minor layout changes in Swagger UI.</li> <li>Docs updated with new settings and options.</li> </ul>"},{"location":"help/release-notes/#v022-beta-october-21-2024","title":"v0.2.2-beta - October 21, 2024","text":"<p>What's New: \u2728</p> <ol> <li>Docker Update Check now displays a message in logs and <code>Update Available</code> in Settings &gt; About page.</li> <li>Tasks are now shown in alphabetical order in Settings &gt; Tasks page.</li> <li>App will now detect trailer files by looking for <code>trailer</code> in the filename instead of <code>-trailer.</code>. Fixes #61</li> <li>Default Browser login password can be changed in web UI under <code>Settings &gt; About &gt; Password</code>. Related to #31</li> <li>Password can be reset by setting <code>WEBUI_PASSWORD</code> ENV variable to <code>''</code> (empty) in docker command.</li> <li>Fixed a typo in <code>Settings &gt; About</code> page. Thanks to @rafapirotto for the PR #57.</li> </ol> <p>Bug Fixes: \ud83d\udc1b</p> <ol> <li>Fixed an issue with create <code>Connection</code> with <code>Path Mappings</code> raising an error. Fixes #53</li> </ol> <p>Other Changes: \u26a1</p> <ol> <li>Fixed a typo - renamed file <code>docket_check.py</code> to <code>docker_check.py</code> in <code>/backend/core/updates/</code>.</li> <li>Better handling of <code>light</code> and <code>dark</code> modes in Frontend with <code>prefers-color-scheme</code> media query.</li> <li>Updated <code>APP_VERSION</code> in Dev Container to <code>0.2.1-beta</code>.</li> <li>Updated FAQ to add <code>Trailarr not downloading specified trailer from YouTube</code>.</li> <li>Updated <code>Settings.md</code> to include instructions for getting Youtube cookies file. Fixes #62</li> <li>Web UI Password is now hashed before storing.</li> <li>Updated Docs to add instructions on how to add a Youtube cookies file.</li> <li>Created a Docker Config Tool under Docs for help with setting up Trailarr.</li> </ol>"},{"location":"help/release-notes/#v021-beta-september-27-2024","title":"v0.2.1-beta - September 27, 2024","text":"<p>What's New: \u2728</p> <ol> <li>App will now check for updates and display a message in logs and <code>Update Available</code> in Settings &gt; About page.</li> </ol> <p>Bug Fixes: \ud83d\udc1b</p> <ol> <li>Add default <code>trailer_url</code> in <code>download_trailer</code> function to prevent errors when no trailer is found. Fixes #45</li> <li>Fixed an issue with <code>f</code> keypress not working in Frontend. Fixes #44</li> </ol> <p>Other Changes: \u26a1</p> <ol> <li>Updated Docs to indicate that changing Monitor Interval needs container restart to take effect. Fixes #43</li> <li>Updated FAQ in Docs to include information about Trailers taking longer time to download.</li> </ol>"},{"location":"help/release-notes/#v020-beta-september-22-2024","title":"v0.2.0-beta - September 22, 2024","text":"<p>What's New: \u2728</p> <ol> <li>BREAKING CHANGE: Changed default <code>APP_DATA_DIR</code> (appdata folder) from <code>/data</code> to <code>/config</code>. You need to remap your app data folder in your docker compose / set <code>APP_DATA_DIR</code> Env variable to <code>/data</code> explicitly.</li> <li>Added sort and filtering options in Movies and Series pages. Fixes #16 </li> <li>Link to Docs page updated in About page.</li> <li>Added an option to customize trailer file name. Supports <code>title</code>, <code>year</code>, <code>resolution</code>, <code>vcodec</code> and <code>acodec</code> options.</li> <li>App now skips videos longer than 10 minutes and/or videos that contain <code>review</code> in the title. Should help #36 </li> <li>Added Browser login to Frontend. Default username is <code>admin</code> with password <code>trailarr</code>. These cannot be updated now, will add an option to update them in future update. Fixes #31 </li> <li>Renamed <code>DEBUG</code> to <code>LOG_LEVEL</code> to make it consistent with what it does.</li> <li>Adding/Updating a connection will also run the <code>Arr Data Refresh</code> task for that connection.</li> <li>App will now verify the downloaded trailer has an audio and a video stream, else mark it as failed and retry download. Also, added a task to clean up any existing trailers without audio/video, delete them and start monitoring those for downloading trailers for them in next run.</li> </ol> <p>Bug Fixes: \ud83d\udc1b</p> <ol> <li>Fixed a bug that was preventing the app from setting the right permissions to 'Trailers' folder (if enabled for either Movies/Series).</li> <li>Check downloaded trailer is the expected file and contains audio and video streams. Fixes #37 </li> <li>Fixed a bug that prevented Yt-dlp to use the cookies file even when set. Fixes #29.</li> <li>Fixed an issue with <code>Trailer Subtitle Format</code> option saving to incorrect variable. Fixes #40 </li> <li>Fixed an issue with app not able to delete trailers with <code>.webm</code> extensions.</li> <li>Fixed a bug that was removing all media items from library if path mappings are set for that connection and none of them match the media. </li> </ol> <p>Other Changes: \u26a1</p> <ol> <li>Updated Docs to include <code>Release Notes</code> and some <code>FAQ</code>s.</li> <li>App now displays logs for video conversions after download.</li> <li>Updated npm and python packages.</li> <li>Added <code>monitor status</code> arg to Media object.</li> <li>Added some functionality to always make sure path mappings end with a slash.</li> <li>Added an example in docs for Windows users.</li> </ol>"},{"location":"help/release-notes/#v013-beta-august-29-2024","title":"v0.1.3-beta - August 29, 2024","text":"<p>What's New: \u2728</p> <ul> <li>Add option to supply YouTube cookies to use with yt-dlp. Fixes #29</li> <li>Add support for multiple languages in subtitle download settings. Fixes #25</li> </ul> <p>Bug Fixes: \ud83d\udc1b</p> <ul> <li>None</li> </ul> <p>Other Changes: \u26a1</p> <ul> <li>None</li> </ul>"},{"location":"help/release-notes/#v012-beta-august-29-2024","title":"v0.1.2-beta - August 29, 2024","text":"<p>What's New: \u2728</p> <ul> <li>None</li> </ul> <p>Bug Fixes: \ud83d\udc1b</p> <ul> <li>FIX: wait for media fails if folder doesn't already exist. Fixes #28 and #32</li> <li>FIX: normalize filenames to remove unsupported characters. Fixes #33</li> </ul> <p>Other Changes: \u26a1</p> <ul> <li>None</li> </ul>"},{"location":"help/release-notes/#v011-beta-august-23-2024","title":"v0.1.1-beta - August 23, 2024","text":"<p>What's New: \u2728</p> <ul> <li>Settings page layout to display settings update messages.</li> <li>Search results can now be navigated using Tab key as well as Arrow keys / mouse.</li> <li>Added Docker healthcheck command so that docker can automatically flag container as unhealthy and restart if set.</li> <li>Documentation added with Mkdocs and hosted on Github pages.</li> </ul> <p>Bug Fixes: \ud83d\udc1b</p> <ul> <li>Fixed an issue that caused App version to not show up in Settings &gt; About page.</li> <li>Updated page layout throughout website. Settings page now shows sticky settings bar.</li> </ul> <p>Other Changes: \u26a1</p> <ul> <li>Move Docker scripts into scripts folder</li> <li>Use apt-get in Dockerfile instead of apt as apt is not recommended for non-interactive.</li> <li>Docs build github action to build and deploy docs on changes.</li> </ul>"},{"location":"help/release-notes/#v010-beta-august-19-2024","title":"v0.1.0-beta - August 19, 2024","text":"<p>What's New: \u2728</p> <ul> <li>Merged Movie and Series models in database into Media model. This will help with making Frontend changes to add filters and additional layouts for #16</li> <li>Server Stats in Settings &gt; About page now shows monitored count for Movie and Series separately.</li> <li>PathMappings have been added to Arr Connections. This lets users add path mappings for individual connections if both Radarr and Sonarr have media mapped to same folder internally. Fixes #8</li> <li>Updated Home, Movies and Series pages to display 50 recent items. Related to #16 ... will make additional changes to add filters in a future update.</li> <li>Added web manifest to let app be installed as a web app (works only if served as secure [https])</li> </ul> <p>Bug Fixes: \ud83d\udc1b</p> <ul> <li>Fixed a bug with database backups during container startup.</li> <li>Fix an issue where Media details page gets stuck in loading state when no media files are found on server for the requested media.</li> </ul> <p>Other Changes: \u26a1</p> <ul> <li>Minor updates to alembic (database migrations) configuration.</li> <li>Minor layout changes.</li> </ul>"},{"location":"help/release-notes/#v008-beta-august-10-2024","title":"v0.0.8-beta - August 10, 2024","text":"<p>What's New: \u2728</p> <ul> <li>Default appdata folder can now be changed by setting <code>APP_DATA_DIR</code> ENV variable in docker command. If setting this make sure to use the same path in volume mapping for /data folder as well. See home for more instructions. fixes #21</li> <li>Container will now show app name as ASCII Art, along with the basic configuration.</li> <li>Database backups will be created during app startup, and if a database migration fails, database will be restored from backup and app sleeps forever to prevent restarts.</li> </ul> <p>Bug Fixes: \ud83d\udc1b</p> <ul> <li>None</li> </ul> <p>Other Changes: \u26a1</p> <ul> <li>pip requirement versions upgraded.</li> <li>Update database_url to new path, if <code>APP_DATA_DIR</code> is modified. This won't have any effect on <code>DATABASE_URI</code> if it was modified using ENV variable or directly within the app.</li> </ul>"},{"location":"help/release-notes/#v007-beta-august-8-2024","title":"v0.0.7-beta - August 8, 2024","text":"<p>What's New: \u2728</p> <ul> <li>Added setting to wait for media to be available before downloading trailer</li> </ul> <p>Bug Fixes: \ud83d\udc1b</p> <ul> <li>None</li> </ul> <p>Other Changes: \u26a1</p> <ul> <li>None</li> </ul>"},{"location":"help/release-notes/#v006-beta-august-7-2024","title":"v0.0.6-beta - August 7, 2024","text":"<p>What's New: \u2728</p> <ul> <li>Fixed issue with <code>PUID</code>/<code>PGID</code> when they already exist inside container, updated logic to use existing user/group if already exists. Fixes #17 and #13</li> <li>Fixed Click me link in homepage to go to <code>Settings &gt; Connections</code></li> </ul> <p>Bug Fixes: \ud83d\udc1b</p> <ul> <li>None</li> </ul> <p>Other Changes: \u26a1</p> <ul> <li>Updated CONTRIBUTING.md to add instructions for using devcontainer.</li> <li>Updated Github actions, Dockerfile and README.</li> </ul>"},{"location":"help/release-notes/#v005-beta-august-7-2024","title":"v0.0.5-beta - August 7, 2024","text":"<p>What's New: \u2728</p> <ul> <li>Changed ffmpeg install to check OS architecture and install the correct version. Fixes #9</li> <li>Added new Setting for TESTING so that enabling debug mode does not change database to in-memory database!</li> <li>Visual improvements in Frontend!</li> </ul> <p>Bug Fixes: \ud83d\udc1b</p> <ul> <li>Updated return value on failed downloads so that app will try and download another video. Fixes issues where video is not available in the country, age restricted video, etc..</li> <li>Updated RadarrDataParser to parse movie data without youTubeTrailerId. Fixes #7</li> <li>Updated API calls from Movies page. Fixes #11</li> <li>Updated Dockerfile to create appuser with the <code>PUID</code> and <code>PGID</code> supplied while creating container. Fixes #12</li> </ul> <p>Other Changes: \u26a1</p> <ul> <li>None</li> </ul>"},{"location":"help/release-notes/#v004-beta-august-5-2024","title":"v0.0.4-beta - August 5, 2024","text":"<p>What's New: \u2728</p> <ul> <li>None</li> </ul> <p>Bug Fixes: \ud83d\udc1b</p> <ul> <li>Do not Delete Media when *Arr Connection fails! Fixes #5</li> </ul> <p>Other Changes: \u26a1</p> <ul> <li>None</li> </ul>"},{"location":"help/release-notes/#v003-beta-july-31-2024","title":"v0.0.3-beta - July 31, 2024","text":"<p>What's New: \u2728</p> <ul> <li>None</li> </ul> <p>Bug Fixes: \ud83d\udc1b</p> <ul> <li>None</li> </ul> <p>Other Changes: \u26a1</p> <ul> <li>First Release - <code>v0.0.3-beta</code> with minor changes to publish docker image with <code>latest</code> tag.</li> </ul>"},{"location":"help/release-notes/#v002-beta-july-31-2024","title":"v0.0.2-beta - July 31, 2024","text":"<p>First Release! \ud83c\udf89</p>"},{"location":"install/docker-cli/","title":"Docker Run","text":"<p>To run the application, you need to have Docker installed on your system.</p>"},{"location":"install/docker-cli/#installation","title":"Installation","text":"<p>To run the application using the Docker CLI, run the following command:</p> <pre><code>docker run -d \\\n    --name=trailarr \\\n    -e TZ=America/New_York \\\n    -e PUID=1000 \\\n    -e PGID=1000 \\\n    -p 7889:7889 \\\n    -v &lt;LOCAL_APPDATA_FOLDER&gt;:/config \\\n    -v &lt;LOCAL_MEDIA_FOLDER&gt;:&lt;RADARR_ROOT_FOLDER&gt; \\\n    -v &lt;LOCAL_MEDIA_FOLDER&gt;:&lt;SONARR_ROOT_FOLDER&gt; \\\n    --restart unless-stopped \\\n    nandyalu/trailarr:latest\n</code></pre> <p>Open your browser and navigate to http://localhost:7889 to access the application.</p> <p>Info</p> <p>It is recommended to use <code>docker-compose</code> to run the application, as it makes updating easier. See the Docker Compose guide for more information.</p>"},{"location":"install/docker-cli/#updating","title":"Updating","text":"<p>To update the application, run the following commands:</p> <ol> <li> <p>Pull latest image: <pre><code>docker pull nandyalu/trailarr\n</code></pre></p> </li> <li> <p>Stop and remove the existing container: <pre><code>docker stop trailarr &amp;&amp; docker rm trailarr\n</code></pre></p> </li> <li> <p>Finally, run the updated container using the same <code>docker run</code> command used during installation: <pre><code>docker run -d ...\n</code></pre></p> </li> </ol>"},{"location":"install/docker-compose/","title":"Docker Compose","text":"<p>To run the application, you need to have Docker installed on your system.</p>"},{"location":"install/docker-compose/#installation","title":"Installation","text":"<p>Follow the steps below to install the application using Docker Compose.</p> <ol> <li> <p>Create a new directory for the application: <pre><code>mkdir trailarr &amp;&amp; cd trailarr\n</code></pre></p> </li> <li> <p>Create a <code>docker-compose.yml</code> file with the following content: <pre><code>services:\n    trailarr:\n        image: nandyalu/trailarr:latest\n        container_name: trailarr\n        environment:\n            - TZ=America/New_York\n            - PUID=1000\n            - PGID=1000\n        ports:\n            - 7889:7889\n        volumes:\n            - &lt;LOCAL_APPDATA_FOLDER&gt;:/config\n            - &lt;LOCAL_MEDIA_FOLDER&gt;:&lt;RADARR_ROOT_FOLDER&gt;\n            - &lt;LOCAL_MEDIA_FOLDER&gt;:&lt;SONARR_ROOT_FOLDER&gt;\n        restart: on-failure\n</code></pre></p> </li> <li> <p>Update the env variables and volume mappings in the <code>docker-compose.yml</code> file. See Environment Variables and Volume Mapping for the details.</p> </li> <li> <p>Run the following command to start the application: <pre><code>docker-compose up -d\n</code></pre></p> </li> <li> <p>Open your browser and navigate to http://localhost:7889 to access the application.</p> </li> </ol>"},{"location":"install/docker-compose/#updating","title":"Updating","text":"<p>To update the application, run the following commands:</p> <ol> <li> <p>Pull the latest image: <pre><code>docker-compose pull nandyalu/trailarr\n</code></pre></p> </li> <li> <p>Run the docker compose command to update the existing container: <pre><code>docker-compose up -d\n</code></pre></p> </li> </ol>"},{"location":"install/env-variables/","title":"Environment Variables","text":"<p>Environment variables are OPTIONAL.</p> <p>Here are the optional environment variables you can set:</p>"},{"location":"install/env-variables/#app_data_dir","title":"<code>APP_DATA_DIR</code>","text":"<ul> <li>Default is <code>/config</code>.</li> </ul> <p>This environment variable is used to set the application data directory. If setting this, make sure to map the volume to the same directory.</p> <p>Useful if you want to store the application data in a different directory than the default.</p> <p>For example, if you want to store the application data in <code>/app_config/abc</code>, you can set the <code>APP_DATA_DIR</code> environment variable like this:</p> <pre><code>    environment:\n        - APP_DATA_DIR=/app_config/abc\n    volumes:\n        - /var/appdata/trailarr:/app_config/abc\n</code></pre> <p>Warning</p> <p>If you are setting the <code>APP_DATA_DIR</code> environment variable, make sure to set an absolute path like <code>/data</code> or <code>/config/abc</code>, and map the volume to the same directory.</p> <p>Danger</p> <p>Do not set <code>APP_DATA_DIR</code> to <code>/app</code> or <code>/tmp</code> or any other linux system directory. This could cause the application to not work correctly or data loss.</p>"},{"location":"install/env-variables/#pgid","title":"<code>PGID</code>","text":"<ul> <li>Default is <code>1000</code>.</li> </ul> <p>This environment variable is used to set the group ID for the application.</p> <p>Useful if you have permission issues with the application writing to the volume. You can set the group ID to the group of the volume or a group that has read/write permissions to the volume.</p> <pre><code>    environment:\n        - PGID=1000\n</code></pre>"},{"location":"install/env-variables/#puid","title":"<code>PUID</code>","text":"<ul> <li>Default is <code>1000</code>.</li> </ul> <p>This environment variable is used to set the user ID for the application.</p> <p>Useful if you have permission issues with the application writing to the volume. You can set the user ID to the owner of the volume or a user that has read/write permissions to the volume.</p> <pre><code>    environment:\n        - PUID=1000\n</code></pre>"},{"location":"install/env-variables/#tz","title":"<code>TZ</code>","text":"<ul> <li>Default is <code>America/New_York</code>.</li> </ul> <p>This environment variable is used to set the timezone for the application.</p> <p>For a list of valid timezones, see tz database time zones.</p> <pre><code>    environment:\n        - TZ=America/New_York\n</code></pre>"},{"location":"install/env-variables/#webui_disable_auth","title":"<code>WEBUI_DISABLE_AUTH</code>","text":"<ul> <li>Default is <code>False</code>.</li> </ul> <p>This environment variable is used to disable the authentication for the web interface.</p> <pre><code>    environment:\n        - WEBUI_DISABLE_AUTH=True # This will disable the web UI authentication\n</code></pre>"},{"location":"install/env-variables/#webui_password","title":"<code>WEBUI_PASSWORD</code>","text":"<ul> <li>Default is <code>trailarr</code> (hashed).</li> </ul> <p>Trailarr Web Interface has a browser login to access the app. Default credentials are:</p> <pre><code>Username: admin\nPassword: trailarr\n</code></pre> <p>If you forget your password, set this environment variable to <code>''</code> (empty string) to reset the password for the web interface to default.</p> <pre><code>    environment:\n        - WEBUI_PASSWORD='' # This will reset the password to default\n</code></pre> <p>To change the password, go to <code>Settings &gt; About &gt; Password</code> in web interface. </p> <p>Info</p> <p>If you change your password from the web interface, the password will be hashed and stored internally. There is no way to retrieve the password as only a hashed version is stored, you need to reset it if you forget it.</p> <p>Warning</p> <p>Once you change your password, don't forget to remove the <code>WEBUI_PASSWORD</code> environment variable from the docker-compose file.</p>"},{"location":"install/env-variables/#example","title":"Example","text":"<p>Here is an example of setting the environment variables:</p> <pre><code>    environment:\n        - TZ=America/Los_Angeles\n        - PUID=1000\n        - PGID=1000\n        - APP_DATA_DIR=/data/trailarr\n    volumes:\n        - /var/appdata/trailarr:/data/trailarr\n</code></pre> <p>This sets the environment variables to run the app with following settings:</p> <ul> <li>Timezone: America/Los_Angeles</li> <li>User ID: 1000</li> <li>Group ID: 1000</li> <li>Application data directory: /data/trailarr</li> <li>Volume mapping: /var/appdata/trailarr:/data/trailarr</li> </ul>"},{"location":"install/volume-mapping/","title":"Volume Mapping","text":"<p>Volume mapping is REQUIRED!</p>"},{"location":"install/volume-mapping/#appdata","title":"AppData","text":"<p>Trailarr needs a folder to store the application data. You need to map a local folder to the <code>/config</code> folder in the Trailarr container.</p> <p>Change <code>&lt;LOCAL_APPDATA_FOLDER&gt;</code> to the folder where you want to store the application data.</p> <p>For example, if you want to store the application data in <code>/var/appdata/trailarr</code>, the volume mapping would look like this: <pre><code>    volumes:\n        - /var/appdata/trailarr:/config\n</code></pre></p> <p>Warning</p> <p>If you are setting the <code>APP_DATA_DIR</code> environment variable, make sure to map the volume to the same directory.</p>"},{"location":"install/volume-mapping/#media-folders","title":"Media Folders","text":"<p>Trailarr needs access to the media folders of Radarr and Sonarr to monitor the media files. You need to map the media folders of Radarr and Sonarr to the Trailarr container.</p> <p>There are 2 parts to a volume mapping:</p> <ol> <li>Local Folder: The folder on your system where the media files are stored.</li> <li>Container Folder: The folder inside the Trailarr container where the it can access the media files.</li> </ol> Media Volume Mapping <ol> <li>If you have movies in <code>/mnt/disk1/media/movies</code> on your system, this is the local folder.</li> <li>If you see this folder as <code>/media/movies</code> inside the Radarr container, this is the container folder. So, you need to map it similarly to the Trailarr container as well.</li> <li>The volume mapping will look like: <pre><code>    - /mnt/disk1/media/movies:/media/movies\n</code></pre></li> </ol> <p>Trailarr gets the media folders from the Radarr and Sonarr connections you add. So, you need to map the root folder of Radarr and Sonarr to the Trailarr container in a way that Trailarr can access the media files on the paths provided by Radarr and Sonarr. </p> <p>Some examples are provided below. </p> <p>If you need additional help, there is a Docker Config Tool that will help you generate the docker-compose file with the correct volume mappings and path mappings.</p> <p>If you are still facing issues, you can ask for help in the Discord Server.</p> <p>Tip</p> <p>Make sure the folder paths are correct and the Trailarr has read/write access to the folders.</p> <p>Warning</p> <p>If your folder paths have spaces, you need to escape them with a backslash (<code>\\</code>) or enclose the path in quotes (<code>\"</code>) like <code>/tv\\ shows</code> or <code>/\"tv shows\"</code>.</p>"},{"location":"install/volume-mapping/#radarr","title":"Radarr","text":"<p>If you want to monitor the movies in Radarr, you need to map the root folder of Radarr to the Trailarr container.</p> <p>For example, if you have movies in <code>/mnt/disk1/media/movies</code> on your system, and Radarr has this folder mapped to <code>/media/movies</code> inside the Radarr container, the volume mapping would look like this:</p> <pre><code>    volumes:\n        - /mnt/disk1/media/movies:/media/movies\n</code></pre>"},{"location":"install/volume-mapping/#sonarr","title":"Sonarr","text":"<p>If you want to monitor the TV shows in Sonarr, you need to map the root folder of Sonarr to the Trailarr container.</p> <p>For example, if you have TV shows in <code>/mnt/disk1/media/tv</code> on your system, and Sonarr has this folder mapped to <code>/media/tv</code> inside the Sonarr container, the volume mapping would look like this:</p> <pre><code>    volumes:\n        - /mnt/disk1/media/tv:/media/tv\n</code></pre>"},{"location":"install/volume-mapping/#examples","title":"Examples","text":""},{"location":"install/volume-mapping/#example-1-different-local-container-folders","title":"Example 1 - Different Local &amp; Container folders","text":"<p>Radarr and Sonarr have different local folders mapped to different folders inside their containers.</p> <p>Radarr has <code>/mnt/disk1/movies</code> mapped to <code>/media/movies</code> and Sonarr has <code>/mnt/disk1/tv</code> mapped to <code>/media/tv</code>, you can map them to Trailarr like this:</p> <pre><code>    volumes:\n        - /mnt/disk1/movies:/media/movies\n        - /mnt/disk1/tv:/media/tv\n</code></pre>"},{"location":"install/volume-mapping/#example-2-same-local-folder-parent-different-container-folders","title":"Example 2 - Same Local folder parent, Different Container folders","text":"<p>Both Radarr and Sonarr have different local folders mapped to the different folders inside their containers.</p> <p>Radarr has <code>/mnt/disk1/media/movies</code> mapped to <code>/media/movies</code> and Sonarr has <code>/mnt/disk1/media/tv</code> mapped to <code>/media/tv</code>. However both mapped local folders are in the same parent folder <code>/mnt/disk1/media</code>. So, you can map the parent folder to Trailarr like this:</p> <pre><code>    volumes:\n        - /mnt/disk1/media:/media\n</code></pre> <p>OR, you can map the individual folders to Trailarr like this:</p> <pre><code>    volumes:\n        - /mnt/disk1/media/movies:/media/movies\n        - /mnt/disk1/media/tv:/media/tv\n</code></pre>"},{"location":"install/volume-mapping/#example-3-different-local-folders-same-container-folder","title":"Example 3 - Different Local folders, Same Container folder","text":"<p>If you have both Radarr and Sonarr with different local folders mapped to the same folder inside their containers, you can do custom mapping of local folders and set the appropriate path mapping while adding those connections!</p> <p>For example, if Radarr has <code>/mnt/disk1/media/movies</code> mapped to <code>/media</code> and Sonarr has <code>/mnt/disk1/media/tv</code> mapped to <code>/media</code>, you can do custom mapping like below:</p> <ol> <li> <p>Map <code>/mnt/disk1/media</code> to <code>/media</code> in Trailarr like this: <pre><code>    volumes:\n        - /mnt/disk1/media/movies:/media/movies\n        - /mnt/disk1/media/tv:/media/tv\n</code></pre></p> </li> <li> <p>Set the path mapping for Radarr like: </p> <p>Tip</p> <p>The <code>Path From</code> needs to match root folder inside Radarr (<code>/media</code>), and the <code>Path To</code> needs to match the folder inside Trailarr where the media is mapped (<code>/media/movies</code>).</p> </li> <li> <p>Set the path mapping for Sonarr like: </p> <p>Tip</p> <p>The <code>Path From</code> needs to match root folder inside Sonarr (<code>/media</code>), and the <code>Path To</code> needs to match the folder inside Trailarr where the media is mapped (<code>/media/tv</code>).</p> </li> </ol>"},{"location":"install/volume-mapping/#example-4-windows-path-mapping","title":"Example 4 - Windows Path Mapping","text":"<ol> <li> <p>If you are using Windows, you need to modify the Windows folder path to be compatible with Linux. You can use the following format for the volume mapping:</p> <pre><code>    volumes:\n        /c/Users/username/Movies:/media/movies\n        /c/Users/username/TV:/media/tv\n</code></pre> <ol> <li>This will map <code>C:\\Users\\username\\Movies</code> in your system to <code>/media/movies</code> within the Trailarr container.</li> <li>If you are running Radarr / Sonarr as docker containers, you need to update the <code>/media/movies</code> and <code>/media/tv</code> paths to match the paths set in the Radarr / Sonarr container volume mappings.</li> </ol> <p>Network Shares</p> <p>If you are using network shares, you need to mount the network share to your system as a drive and then map the local folder to the Trailarr container.</p> <p>You could possibly map the network share directly to the Trailarr container, however, Trailarr won't be able to provide support for it at this time.</p> </li> <li> <p>Now, you if you are running Radarr / Sonarr as docker containers, you can skip the next step and proceed to the Environment Variables setup.</p> </li> <li> <p>Otherwise, you need to setup the Path Mapping for Radarr and Sonarr connections, as the media folder paths in Radarr/Sonarr will look like <code>C:\\Users\\username\\Movies\\The Matrix (1999)</code>, which won't be accessible by Trailarr as it's not a valid linux path. So, we need to add a path mapping to tell Trailarr what to replace that path with.</p> </li> <li> <p>Remember, in step 1 we mapped <code>C:\\Users\\username\\Movies</code> to <code>/media/movies</code>, so you need to go into <code>Settings -&gt; Connections</code>, open Radarr/Sonarr and Add Path Mapping like this:</p> </li> </ol> <pre><code>    Path From: C:\\Users\\username\\Movies\n    Path To: /media/movies\n</code></pre> <ol> <li>And then do similar for Sonarr like this:</li> </ol> <pre><code>    Path From: C:\\Users\\username\\TV\n    Path To: /media/tv\n</code></pre> <p>Now, Trailarr will replace <code>C:\\Users\\username\\Movies</code> with <code>/media/movies</code> in the media paths provided by Radarr, and <code>C:\\Users\\username\\TV</code> with <code>/media/tv</code> in the media paths provided by Sonarr.</p>"},{"location":"setup/connections/","title":"Connections","text":""},{"location":"setup/connections/#add-radarrsonarr-connections","title":"Add Radarr/Sonarr Connections","text":"<ol> <li> <p>Navigate to the application in your browser at http://localhost:7889/settings/connections.</p> <p>Trailarr Login</p> <p>When you open Trailarr in browser, it will ask you to login. Default login is:</p> <pre><code>Username: admin\nPassword: trailarr\n</code></pre> </li> <li> <p>Go to <code>Settings</code> &gt; <code>Connections</code> and Click the <code>Add New</code> button to add your Radarr and Sonarr instances. </p> </li> <li> <p>Add your Radarr and Sonarr instances. </p> </li> <li> <p>Set the <code>Connection Name</code> to a name of your choice.</p> </li> <li> <p>Set the <code>Type</code> to either <code>Radarr</code> or <code>Sonarr</code>.</p> </li> <li> <p>Set the <code>Monitor Type</code> to your preference. See Monitor Types below for more information.</p> <p>Tip</p> <p>You can set different monitor types for each Radarr/Sonarr instance.</p> </li> <li> <p>Add the <code>URL</code> for your Radarr or Sonarr instance.     Full URL of your Radarr or Sonarr instance including the port number. For example, <code>http://192.168.0.15:6969</code>.</p> </li> <li> <p>Add the <code>API Key</code> from your Radarr or Sonarr instance.     Get <code>API Key</code> by opening Radarr/Sonarr in your browser, going to <code>Settings &gt; General</code>, then copy the API key.</p> </li> <li> <p>If you have a setup that requires <code>Path Mappings</code> to be set as described in Volume Mapping, you can add them here. See Path Mapping below for more information.</p> <p>If you need additional help, there is a Docker Config Tool that will help you generate the docker-compose file with the correct volume mappings and path mappings.</p> <p>Tip</p> <p>You can set different path mappings for each Radarr/Sonarr instance.</p> <p>Warning</p> <p>Path mappings are optional and only required if you have a setup that requires them.</p> </li> <li> <p>Click the <code>Save</code> button to save the connection.</p> </li> <li> <p>Repeat the steps for each Radarr and Sonarr instance you want to monitor.</p> </li> <li> <p>That's it! The application will now start downloading trailers for your media library. See settings for more information on how to adjust settings.</p> </li> </ol>"},{"location":"setup/connections/#monitor-types","title":"Monitor Types","text":""},{"location":"setup/connections/#missing","title":"<code>Missing</code>","text":"<p>Monitors and downloads trailers for movies/series without a trailer.</p>"},{"location":"setup/connections/#new","title":"<code>New</code>","text":"<p>Only Monitors and download trailers for movies/series that gets added after the change.</p>"},{"location":"setup/connections/#sync","title":"<code>Sync</code>","text":"<p>Monitors and downloads trailers for movie/series that are monitored in Radarr/Sonarr.</p>"},{"location":"setup/connections/#none","title":"<code>None</code>","text":"<p>Turns off monitoring for the connection and does not download any trailers.</p> <p>Tip</p> <p>If you have a huge library and don't want to download trailers for all of them, set the monitor type to <code>None</code> when adding a Radarr/Sonarr Connection. Wait for an hour or so to let the app sync all media from that connection, and change it to <code>New</code> to download trailers for new media. You can always manually set the monitor type for the movies/series you want to download trailers for.</p>"},{"location":"setup/connections/#path-mapping","title":"Path Mapping","text":"<p>In simple words, Path Mappings are used to tell Trailarr what to replace the path with when it gets a path from Radarr/Sonarr. <code>Path From</code> is what it looks for in the path, and <code>Path To</code> is what it replaces it with.</p> <p>If you are using Windows, you might need to add path mappings in most cases, unless you are also running Radarr/Sonarr as docker containers. See Volume Mapping for more information.</p> <p>Info</p> <p>Path mappings are optional and only required if you have a setup that requires them. You can set different path mappings for each Radarr/Sonarr instance.</p> Example <p>Adding a path mapping for a connection as: <pre><code>Path From: C:\\Users\\username\\Movies\nPath To: /media/movies\n</code></pre> will replace <code>C:\\Users\\username\\Movies</code> with <code>/media/movies</code> in the path received from Radarr/Sonarr. So, if Radarr/Sonarr sends a path like <code>C:\\Users\\username\\Movies\\The MAtrix (1999)</code>, it will be replaced with <code>/media/movies/The Matrix (1999)</code>.</p> <ol> <li> <p>Click the <code>Add Path Mapping</code> button. </p> </li> <li> <p>Set the <code>Path From</code> to the path inside Radarr/Sonarr connection.</p> </li> <li> <p>Set the <code>Path To</code> to the path inside the Trailarr container. </p> </li> <li> <p>Click the <code>Save</code> button to save the path mapping.</p> </li> <li> <p>Repeat the steps for each path mapping you want to add, if needed.</p> </li> </ol> <p>Tip</p> <p>Path mappings are useful when the media folder available to Radarr/Sonarr is same for multiple connections. For example, if Radarr has media folder set to <code>/media</code> and Sonarr has media folder set to <code>/media</code>, you can map the local folder for Radarr media to <code>/media/movies</code> and Sonarr media to <code>/media/tv</code> and then in add path mappings with <code>Path From</code> set to <code>/media</code> and <code>Path To</code> set to <code>/media/movies</code> for Radarr and <code>/media/tv</code> for Sonarr connections.</p> <p>Warning</p> <p>For Path Mappings to work, you need to set the <code>Path From</code> to the exact path inside Radarr/Sonarr connection and <code>Path To</code> to the exact path inside the Trailarr container. If the paths do not match, the path mapping will not work. Path Mappings needs to be paired with <code>Volume Mapping</code> in the <code>docker-compose.yml</code> file. See Volume Mapping for more information.</p>"},{"location":"setup/settings/","title":"Settings","text":"<p>There are a few settings that you can use to customize the behavior of Trailarr app. These settings can be set by opening the app in browser http://localhost:7889/settings and navigatings  to <code>Settings &gt; Trailer</code> page.</p>"},{"location":"setup/settings/#general-settings","title":"General Settings","text":""},{"location":"setup/settings/#monitor-trailers","title":"Monitor Trailers","text":"<ul> <li>Default is <code>true</code></li> </ul> <p>Enable this setting to monitor trailers for connections. When enabled, the app will automatically download trailers for media in Radarr and Sonarr.</p> <p>Note</p> <p>Disabling this will disable monitoring of media for all connections.</p>"},{"location":"setup/settings/#monitor-interval","title":"Monitor Interval","text":"<ul> <li>Default is <code>60</code> minutes. Minimum is <code>10</code> minutes`. </li> </ul> <p>Frequency (in minutes) to check for new media in Radarr/Sonarr.</p> <p>Info</p> <p>Changing this setting will require a restart of the app (container) to take effect.</p>"},{"location":"setup/settings/#file-settings","title":"File Settings","text":""},{"location":"setup/settings/#wait-for-media","title":"Wait For Media","text":"<ul> <li>Default is <code>false</code></li> </ul> <p>Enable this setting to wait for media to be downloaded before downloading trailers.</p>"},{"location":"setup/settings/#trailer-folder-movie","title":"Trailer Folder Movie","text":"<ul> <li>Default is <code>false</code></li> </ul> <p>Enable this setting to save trailers in a <code>Trailers</code> folder inside the movie folder.</p>"},{"location":"setup/settings/#trailer-folder-series","title":"Trailer Folder Series","text":"<ul> <li>Default is <code>true</code></li> </ul> <p>Enable this setting to save trailers in a <code>Trailers</code> folder inside the series folder.</p>"},{"location":"setup/settings/#trailer-settings","title":"Trailer Settings","text":""},{"location":"setup/settings/#trailer-minimum-duration","title":"Trailer Minimum Duration","text":"<ul> <li>Default is <code>30</code> seconds</li> </ul> <p>Select the minimum duration of the trailers to download. Trailers with a duration less than this value will be skipped. Minimum is <code>30</code> seconds.</p>"},{"location":"setup/settings/#trailer-maximum-duration","title":"Trailer Maximum Duration","text":"<ul> <li>Default is <code>600</code> seconds</li> </ul> <p>Select the maximum duration of the trailers to download. Trailers with a duration greater than this value will be skipped. Minimum is <code>Trailer Minimum Duration + 60</code> seconds. Maximum is <code>600</code> seconds.</p> <p>Info</p> <p>If you want to download trailers with a duration of 2 minutes to 5 minutes, set <code>Trailer Minimum Duration</code> to <code>120</code> seconds and <code>Trailer Maximum Duration</code> to <code>300</code> seconds.</p>"},{"location":"setup/settings/#trailer-resolution","title":"Trailer Resolution","text":"<ul> <li>Default is <code>1080</code></li> </ul> <p>Select the resolution of the trailers to download. Available options are <code>240</code>, <code>360</code>, <code>480</code>, <code>720</code>, <code>1080</code>, <code>1440</code>, <code>2160</code>.</p> <p>Info</p> <p>If set to <code>1080</code>, the app will try to download trailers with a resolution of 1080p, if available. If not, it will fallback to the next lower resolution.</p>"},{"location":"setup/settings/#trailer-file-format","title":"Trailer File Format","text":"<ul> <li>Default is <code>mkv</code></li> </ul> <p>Select the file format of the trailers to download. Available options are <code>mkv</code>, <code>mp4</code>, <code>webm</code>.</p> <p>Info</p> <p>App will download trailer in the available format and then convert it to the selected format using Ffmpeg.</p>"},{"location":"setup/settings/#trailer-video-format","title":"Trailer Video Format","text":"<ul> <li>Default is <code>h264</code></li> </ul> <p>Select the video codec of the trailers to download. Available options are <code>h264</code>, <code>h265</code>, <code>vp8</code>, <code>vp9</code>, <code>av1</code>.</p> <p>Info</p> <p>App will download trailer in the available codec and then convert it to the selected codec using Ffmpeg.</p>"},{"location":"setup/settings/#trailer-audio-format","title":"Trailer Audio Format","text":"<ul> <li>Default is <code>aac</code></li> </ul> <p>Select the audio codec of the trailers to download. Available options are <code>aac</code>, <code>ac3</code>, <code>eac3</code>, <code>flac</code>, <code>opus</code>.</p> <p>Info</p> <p>App will download trailer in the available codec and then convert it to the selected codec using Ffmpeg.</p>"},{"location":"setup/settings/#trailer-subtitles-enabled","title":"Trailer Subtitles Enabled","text":"<ul> <li>Default is <code>true</code></li> </ul> <p>Enable this setting to download subtitles for trailers, if available.</p>"},{"location":"setup/settings/#trailer-subtitles-format","title":"Trailer Subtitles Format","text":"<ul> <li>Default is <code>srt</code></li> </ul> <p>Select the format of the subtitles to download. Available options are <code>srt</code>, <code>vtt</code>, <code>pgs</code>.</p> <p>Info</p> <p>App will download subtitles in the available format and then convert it to the selected format using Ffmpeg.</p>"},{"location":"setup/settings/#trailer-subtitles-language","title":"Trailer Subtitles Language","text":"<ul> <li>Default is <code>en</code></li> </ul> <p>Select the language of the subtitles to download. A valid ISO 639-1 language code is required. See ISO 639-1 language codes for more information.</p> <p>Info</p> <p>Multiple languages can be set with a comma separated list. For example, <code>en,es,fr</code>.</p>"},{"location":"setup/settings/#other-settings","title":"Other Settings","text":""},{"location":"setup/settings/#trailer-embed-metadata","title":"Trailer Embed Metadata","text":"<ul> <li>Default is <code>true</code></li> </ul> <p>Enable this setting to embed metadata in the trailers.</p>"},{"location":"setup/settings/#trailer-remove-sponsorblocks","title":"Trailer Remove SponsorBlocks","text":"<ul> <li>Default is <code>true</code></li> </ul> <p>Enable this setting to remove sponsor blocks from the trailers, if available. Sponsor blocks are sections of the trailer that contain promotional content like intros, outros, ads, etc.</p>"},{"location":"setup/settings/#trailer-web-optimized","title":"Trailer Web Optimized","text":"<ul> <li>Default is <code>true</code></li> </ul> <p>Enable this setting to optimize trailers for web streaming. This will allow trailers to start playing faster while streaming over network. Might slightly increase file size.</p>"},{"location":"setup/settings/#advanced-settings","title":"Advanced Settings","text":"<p>These are advanced settings, if you don't know what they do, do not modify them!</p>"},{"location":"setup/settings/#log-level","title":"Log Level","text":"<ul> <li>Default is <code>Info</code></li> </ul> <p>Select the logging level for the app. Available options are <code>Debug</code>, <code>Info</code>, <code>Warning</code>, <code>Error</code>.</p> Info <p>If you are having issues and need to troubleshoot or request help, set the log level to <code>Debug</code> to get more detailed logs.</p>"},{"location":"setup/settings/#trailer-audio-volume-level","title":"Trailer Audio Volume Level","text":"<ul> <li>Default is <code>100</code></li> </ul> <p>Set the audio volume level of the downloaded trailer. Use this option to increase or decrease audio loudness of the trailer. Set to <code>100</code> for no change. Minimum is <code>1</code>. Maximum is <code>200</code>. </p> <p>Warning</p> <p>Do not modify this setting unless you know what you are doing.</p>"},{"location":"setup/settings/#exclude-words-in-title","title":"Exclude Words in Title","text":"<ul> <li>Default is `` (empty)</li> </ul> <p>Enter a comma separated list of words to exclude from the title of the trailers. If the title of the trailer contains any of the words in the list, the trailer will be skipped. For example, <code>teaser,clip,featurette</code>.</p>"},{"location":"setup/settings/#trailer-always-search","title":"Trailer Always Search","text":"<ul> <li>Default is <code>false</code></li> </ul> <p>Enable this setting to always search YouTube for trailers. If disabled, the app will only search YouTube if it cannot find a trailer in Radarr, Sonarr doesn't provide youtube trailer ids.</p>"},{"location":"setup/settings/#youtube-search-query","title":"Youtube Search Query","text":"<ul> <li>Default is <code>{title} {year} {is_movie} trailer</code></li> </ul> <p>Enter a search query to use when searching for trailers on YouTube. Wrap a supported variable in <code>{}</code> like <code>{title}</code> and it will be replaced in the actual search query. Supports Python string formatting options.</p> <p>Available options are:</p> <ul> <li><code>title</code>: Title of the media. Eg: 'The Matrix'</li> <li><code>year</code>: Year of the media. Eg: '1999'</li> <li><code>is_movie</code>: 'movie' if the media is a movie, 'series' if the media is a series.</li> <li><code>language</code>: Language of the media. Eg: 'English'</li> </ul>"},{"location":"setup/settings/#trailer-file-name","title":"Trailer File Name","text":"<ul> <li>Default is <code>{title} - Trailer-trailer.{ext}</code></li> </ul> <p>Select the file name format for the trailers. Wrap a supported variable in <code>{}</code> like <code>{title}</code> and it will be replaced in the actual file name. Supports Python string formatting options. </p> <p>Available options are:</p> <ul> <li><code>title</code>: Title of the media. Eg: 'The Matrix'</li> <li><code>year</code>: Year of the media. Eg: '1999'</li> <li><code>resolution</code>: Resolution of the trailer. Eg: '1080p'</li> <li><code>vcodec</code>: Video codec of the trailer. Eg: 'h264'</li> <li><code>acodec</code>: Audio codec of the trailer. Eg: 'aac'</li> </ul>"},{"location":"setup/settings/#yt-dlp-cookies-path","title":"Yt-dlp Cookies Path","text":"<ul> <li>Default is <code>None</code></li> </ul> <p>If you are having issues downloading trailers due to age restrictions, bot detection, etc., you can set the path to a file containing YouTube cookies. This will allow the app to use the cookies to bypass restrictions.</p> <p>See Export YouTube Cookies.txt file for more info.</p> <p>Warning</p> <p>Make sure to save the cookies file in a secure location and map the volume to the container. Set the path to the file in this setting.</p>"},{"location":"setup/settings/#experimental-settings","title":"Experimental Settings","text":"<p>These are experimental options, might not work as expected! You can enable them if you want to try. Please report any issues on Github</p>"},{"location":"setup/settings/#trailer-remove-silence","title":"Trailer Remove Silence","text":"<ul> <li>Default is 'False'</li> </ul> <p>Enable this option to let Trailarr analyse the video file and remove it. This helps remove video end credits usually added to show end credits or other video suggestions on YouTube.</p> <p>Silence is detected using <code>ffmpeg silencedetect</code> and if there is any silence (less than 30dB audio) for more than 3 seconds at the end of video file, video will be trimmed till the starting timestamp of the detected silence.</p>"}]}