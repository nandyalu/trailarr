:host {
  width: 100%;
  border: 2px solid var(--color-outline);
  padding: 1.5rem;
  display: flex;
  flex-direction: column;
  box-sizing: border-box;
  position: relative;
  border-radius: 1rem;
  background-color: var(--color-surface-container);
  transition-property: opacity;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 0.15s;
}

.top-right-button {
  position: absolute;
  top: 2rem;
  right: 2rem;
}

form {
  display: flex;
  flex-direction: column;
  gap: 1rem;
  padding: 0;
  border: var(--color-outline);
  border-radius: 0.5rem;
  container-type: inline-size;
}

.input-group {
  flex-grow: 1;
  display: flex;
  flex-direction: column;
  gap: 2px;
}

.input-group label {
  display: block;
  margin: 0 0 0 0.5rem;
  font-size: smaller;
}

.input-group input {
  width: auto;
  height: 3rem;
  padding: 0.75rem;
  font-family: inherit;
  font-size: 1rem;
  letter-spacing: 1px;
  background-color: var(--color-surface-container-high);
  color: var(--color-tertiary);
  border: 2px solid var(--color-outline);
  border-radius: 0.5rem;
}

input.ng-touched.ng-invalid {
  border: 2px solid var(--color-error);
  opacity: 0.6;
  background-color: var(--color-error-container);
  color: var(--color-on-error-container);
}

.input-group .invalid-text {
  color: var(--color-error);
}

.d-row {
  display: flex;
  gap: 1rem;
  flex-wrap: wrap;
  justify-content: space-around;
  align-items: center;

  @container (width < 40rem) {
    flex-direction: column;
    align-items: stretch;
  }
}

// #region Options-bar styles
.option-container {
  display: flex;
  align-items: center;
  gap: 0.5rem;

  @container (width < 40rem) {
    flex-direction: column;
    align-items: stretch;
  }
}

.options-bar {
  padding: 0.25rem;
  display: flex;
  background-color: var(--color-surface-container-high);
  border-radius: 10px;
  border: 0.5px solid var(--color-outline);
}

.option-label {
  padding: 10px;
  cursor: pointer;
  border-radius: 10px;
  transition: 0.3s ease;
  flex: 1 1 auto;
  text-align: center;
}

.option-label:has(input:focus-visible) {
  outline: -webkit-focus-ring-color auto 1px;
}

.option-name {
  border-radius: 10px;
  border: none;
  transition: all 0.15s ease-in-out;
}

.option__selected {
  background-color: var(--color-tertiary-container);
  font-weight: 600;
  color: var(--color-on-tertiary-container);
  transition: 0.3s ease;
}

input[type='radio'] {
  // display: none;
  clip: rect(0 0 0 0);
  clip-path: inset(100%);
  width: 1px;
  height: 1px;
  overflow: hidden;
  position: absolute;
  white-space: nowrap;
}
// #endregion Options-bar styles

// #region Path Mappings
.mappings-wrapper {
  display: flex;
  flex-direction: column;
  gap: 1rem;
}

.d-row.mappings {
  align-items: flex-end;
}

input:read-only {
  opacity: 0.8;
  cursor: not-allowed;
}

.input-wrapper {
  display: inline-block;
  width: auto;
  height: 3rem;
  position: relative;
}

.folder-icon {
  position: absolute;
  top: 0;
  bottom: 0;
  left: auto;
  right: 0;
  cursor: pointer;
  height: auto;
  width: auto;
  padding: 0.5rem;
  border-radius: 0.5rem;
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;

  svg {
    height: 2rem;
    width: 2rem;
  }
}

.input-wrapper input {
  width: 100%;
  height: 100%;
  padding: 0.75rem 3rem 0.75rem 0.75rem;
}
// #endregion Path-select Dialog

.result-text {
  white-space: pre-wrap;
  color: var(--color-info);
  font-weight: 600;
  line-height: 1.5rem;
}

.close-progress {
  width: 100%;
  height: 0.25rem;
  background-color: var(--color-success-text);
  border-radius: 0.25rem;
  animation: closeProgress 3s linear 0s;
}

@keyframes closeProgress {
  0% {
    width: 100%;
  }

  100% {
    width: 0%;
  }
}

.dialog-content {
  background-color: var(--color-on-error-container);
  color: var(--color-on-error);
  padding: 1rem;
  text-align: center;
}

dialog::backdrop {
  background-image: linear-gradient(0deg, grey, #690005);
}

.dialog-content button {
  margin: 10px;
}
