/* File: styles.css */
/* You can add global styles to this file, and also import other style files */
/* Themes built using https://material-foundation.github.io/material-theme-builder/ */

:root {
  font-size: 16px;
  font-family: 'Roboto', 'open sans', 'Helvetica Neue', 'Helvetica', 'Arial', sans-serif;
  --transition-speed: 600ms;
  --color-success: #00bc8c;
  --color-info: #3498db;
  --color-warning: #f39c12;
  --color-danger: #e74c3c;
  --color-success-text: #ccf2e8;
  --color-info-text: #d6eaf8;
  --color-warning-text: #fdebd0;
  --color-danger-text: #fadbd8;
}

* {
  box-sizing: border-box;
  scrollbar-width: thin !important;
  scrollbar-color: var(--color-secondary) transparent;
}

/* *::-webkit-scrollbar {
  width: 0.25rem;
}

*::-webkit-scrollbar-track {
  background: var(--color-on-tertiary);
  background: transparent;
}

*::-webkit-scrollbar-thumb {
  background: var(--color-tertiary);
} */

body {
  margin: 0;
  height: 100dvh;
  background-color: var(--color-surface-container);
  color: var(--color-on-surface);
  /* Add a transition on the background-color and color properties */
  transition: background-color 0.5s ease, color 0.5s ease;
}

.sm-show {
  display: none !important;
}

@media (max-width: 765px) {
  .sm-none {
    display: none !important; 
  }

  .sm-show {
    display: block !important;
  }
}

.dark {
  --color-primary: rgb(128 213 212);
  --color-surface-tint: rgb(128 213 212);
  --color-on-primary: rgb(0 55 55);
  --color-primary-container: rgb(0 79 79);
  --color-on-primary-container: rgb(156 241 240);
  --color-secondary: rgb(176 204 203);
  --color-on-secondary: rgb(27 53 52);
  --color-secondary-container: rgb(50 75 75);
  --color-on-secondary-container: rgb(204 232 231);
  --color-tertiary: rgb(179 200 232);
  --color-on-tertiary: rgb(28 49 75);
  --color-tertiary-container: rgb(51 72 99);
  --color-on-tertiary-container: rgb(211 228 255);
  --color-error: rgb(255 180 171);
  --color-on-error: rgb(105 0 5);
  --color-error-container: rgb(147 0 10);
  --color-on-error-container: rgb(255 218 214);
  --color-background: rgb(14 21 20);
  --color-on-background: rgb(221 228 227);
  --color-surface: rgb(14 21 20);
  --color-on-surface: rgb(221 228 227);
  --color-surface-variant: rgb(63 73 72);
  --color-on-surface-variant: rgb(190 201 200);
  --color-outline: rgb(136 147 146);
  --color-outline-variant: rgb(63 73 72);
  --color-shadow: rgb(0 0 0);
  --color-scrim: rgb(0 0 0);
  --color-inverse-surface: rgb(221 228 227);
  --color-inverse-on-surface: rgb(43 50 49);
  --color-inverse-primary: rgb(0 106 106);
  --color-primary-fixed: rgb(156 241 240);
  --color-on-primary-fixed: rgb(0 32 32);
  --color-primary-fixed-dim: rgb(128 213 212);
  --color-on-primary-fixed-variant: rgb(0 79 79);
  --color-secondary-fixed: rgb(204 232 231);
  --color-on-secondary-fixed: rgb(5 31 31);
  --color-secondary-fixed-dim: rgb(176 204 203);
  --color-on-secondary-fixed-variant: rgb(50 75 75);
  --color-tertiary-fixed: rgb(211 228 255);
  --color-on-tertiary-fixed: rgb(4 28 53);
  --color-tertiary-fixed-dim: rgb(179 200 232);
  --color-on-tertiary-fixed-variant: rgb(51 72 99);
  --color-surface-dim: rgb(14 21 20);
  --color-surface-bright: rgb(52 58 58);
  --color-surface-container-lowest: rgb(9 15 15);
  --color-surface-container-low: rgb(22 29 29);
  --color-surface-container: rgb(26 33 33);
  --color-surface-container-high: rgb(37 43 43);
  --color-surface-container-highest: rgb(47 54 54);
}

.light {
  --color-primary: rgb(0 106 106);
  --color-surface-tint: rgb(0 106 106);
  --color-on-primary: rgb(255 255 255);
  --color-primary-container: rgb(156 241 240);
  --color-on-primary-container: rgb(0 32 32);
  --color-secondary: rgb(74 99 99);
  --color-on-secondary: rgb(255 255 255);
  --color-secondary-container: rgb(204 232 231);
  --color-on-secondary-container: rgb(5 31 31);
  --color-tertiary: rgb(75 96 124);
  --color-on-tertiary: rgb(255 255 255);
  --color-tertiary-container: rgb(211 228 255);
  --color-on-tertiary-container: rgb(4 28 53);
  --color-error: rgb(186 26 26);
  --color-on-error: rgb(255 255 255);
  --color-error-container: rgb(255 218 214);
  --color-on-error-container: rgb(65 0 2);
  --color-background: rgb(244 251 250);
  --color-on-background: rgb(22 29 29);
  --color-surface: rgb(244 251 250);
  --color-on-surface: rgb(22 29 29);
  --color-surface-variant: rgb(218 229 228);
  --color-on-surface-variant: rgb(63 73 72);
  --color-outline: rgb(111 121 121);
  --color-outline-variant: rgb(190 201 200);
  --color-shadow: rgb(0 0 0);
  --color-scrim: rgb(0 0 0);
  --color-inverse-surface: rgb(43 50 49);
  --color-inverse-on-surface: rgb(236 242 241);
  --color-inverse-primary: rgb(128 213 212);
  --color-primary-fixed: rgb(156 241 240);
  --color-on-primary-fixed: rgb(0 32 32);
  --color-primary-fixed-dim: rgb(128 213 212);
  --color-on-primary-fixed-variant: rgb(0 79 79);
  --color-secondary-fixed: rgb(204 232 231);
  --color-on-secondary-fixed: rgb(5 31 31);
  --color-secondary-fixed-dim: rgb(176 204 203);
  --color-on-secondary-fixed-variant: rgb(50 75 75);
  --color-tertiary-fixed: rgb(211 228 255);
  --color-on-tertiary-fixed: rgb(4 28 53);
  --color-tertiary-fixed-dim: rgb(179 200 232);
  --color-on-tertiary-fixed-variant: rgb(51 72 99);
  --color-surface-dim: rgb(213 219 218);
  --color-surface-bright: rgb(244 251 250);
  --color-surface-container-lowest: rgb(255 255 255);
  --color-surface-container-low: rgb(239 245 244);
  --color-surface-container: rgb(233 239 238);
  --color-surface-container-high: rgb(227 233 233);
  --color-surface-container-highest: rgb(221 228 227);
}

/* GLOBAL ELEMENT STYLES */

/* Horizontal Line */
hr {
  border: 0;
  border-top: 1px solid var(--color-outline);
  margin: 0 0 0.5rem 0;
}

/* Text sizes */
.text-lg {
  font-size: 2.5rem;
}

.text-md {
  font-size: 1.5rem;
}

.text-sm {
  font-size: 1rem;
}

/* SVG Icons */
.icon {
  margin: auto;
  padding: 0.25rem;
  height: 1.5rem;
  width: 1.5rem;
  fill: var(--color-on-surface);
}

/* Button Styles */
button {
  padding: 0.5rem 1rem;
  border: none;
  border-radius: 0.25rem;
  cursor: pointer;
  font-size: 1rem;
  font-weight: 600;
  transition: background-color var(--transition-speed);
  background-color: var(--color-primary);
  color: var(--color-on-primary);
}

button:disabled {
  cursor: not-allowed;
  opacity: 0.5;
}

button.primary {
  background-color: var(--color-primary);
  color: var(--color-on-primary);
}

button.secondary {
  background-color: var(--color-secondary);
  color: var(--color-on-secondary);
}

button.danger {
  background-color: var(--color-danger);
  color: var(--color-danger-text);
}

/* Animated Button with SVG Icon */
.animated-button {
  display: flex;
  align-items: center;
  /* To add a different size button, set it's class to override --size in css */
  --size: 12px;
  padding: var(--size) calc(var(--size)*2);
  border: calc(var(--size)*0.25) solid;
  border-color: transparent;
  font-size: var(--size);
  color: var(--color-on-secondary);
  background-color: var(--color-secondary);
  border-radius: calc(var(--size)*6);
  font-weight: 600;
  cursor: pointer;
  position: relative;
  overflow: hidden;
  transition: all 0.4s cubic-bezier(0.23, 1, 0.32, 1);
}

.animated-button svg {
  position: absolute;
  width: calc(var(--size)*1.5);
  fill: var(--color-on-secondary);
  z-index: 9;
  right: var(--size);
  transition: all 0.3s cubic-bezier(0.23, 1, 0.32, 1);
}

.animated-button .text {
  position: relative;
  text-transform: uppercase;
  z-index: 1;
  transform: translateX(calc(var(--size)*-0.75));
  transition: all 0.6s cubic-bezier(0.23, 1, 0.32, 1);
}

.animated-button:disabled {
  background-color: var(--color-outline);
  color: var(--color-on-outline);
  cursor: not-allowed;
}

.animated-button:disabled svg {
  fill: var(--color-on-outline);
}

.animated-button:hover:not(:disabled) {
  box-shadow: 0 0 0 var(--size) transparent;
  background-color: var(--color-tertiary);
  border-radius: calc(var(--size)*0.75);
}

.animated-button:hover:not(:disabled) svg {
  animation: anim-btn-move 0.3s forwards;
}

@keyframes anim-btn-move {
  0% { right: var(--size); }
  50% { right: calc(var(--size)*-1.25); }
  51% { left: calc(var(--size)*-1.5); }
  100% { left: var(--size); }
}

.animated-button:hover:not(:disabled) .text {
  transform: translateX(calc(var(--size)*0.75));
}

.animated-button:active {
  scale: 0.95;
  box-shadow: 0 0 0 calc(var(--size)*0.25) var(--color-outline-variant);
}


/* Animated Loading Bars */
.loading-wave {
  /* width: 300px; */
  height: 6rem;
  display: flex;
  align-items: flex-end;
  z-index: 100;
}

.loading-bar {
  width: 1.25rem;
  height: 0.75rem;
  margin: 0 0.25rem;
  background-color: var(--color-primary);
  border-radius: 0.3rem;
  animation: loading-wave-animation 1s ease-in-out infinite;
}

.loading-bar:nth-child(2) {
  animation-delay: 0.1s;
}

.loading-bar:nth-child(3) {
  animation-delay: 0.2s;
}

.loading-bar:nth-child(4) {
  animation-delay: 0.3s;
}

@keyframes loading-wave-animation {
  0% {
    height: 0.6rem;
  }

  50% {
    height: 3rem;
  }

  100% {
    height: 0.6rem;
  }
}

/* ToolTip */
.tooltip {
  position: relative;
}

.copy {
  cursor: copy; /* Displays cursor as copy */
}

.tooltip .tooltiptext {
  visibility: hidden;
  width: auto;
  background-color: var(--color-surface-container-highest);
  color: var(--color-on-surface);
  border-radius: 6px;
  padding: 0.25rem;
  position: absolute;
  z-index: 1;
  top: 125%;
  right: 0%;
  margin: 0;
  opacity: 0;
  transition: opacity 1s;
}

.tooltip .tooltiptext p {
  display: block;
  font-size: 1rem;
  padding: 0.25rem;
  margin: 0;
  white-space: nowrap;
  text-align: left;
}

.tooltip:hover .tooltiptext {
  visibility: visible;
  opacity: 1;
}

@media (max-width: 765px) {
  .tooltip .tooltiptext {
    position: absolute;
    top: 125%;
    left: 0%;
    right: unset;
  }
}

/* Dialog with Animations */
dialog {
  display: none;
  padding: 0;
  opacity: 0;
  translate: 0 25vh;
  transition-property: overlay display opacity;
  transition-duration: 1s;
  transition-behavior: allow-discrete;
}

dialog[open] {
  display: block;
  opacity: 1;
  translate: 0 0;

  /* stylelint-disable-next-line at-rule-no-unknown */
  @starting-style {
    opacity: 0;
    translate: 0 -25vh;
  }
}

dialog::backdrop {
  background-image: linear-gradient(0deg, var(--color-secondary), var(--color-primary));
  transition-property: display opacity overlay;
  transition-duration: 1s;
  transition-behavior: allow-discrete;
  opacity: 0;
}

dialog[open]::backdrop {
  opacity: .75;
}

/* stylelint-disable-next-line at-rule-no-unknown */
@starting-style {
  dialog[open]::backdrop {
    opacity: 0;
  }
}