{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Trailarr","text":"<p>Trailarr is a Docker application to download and manage trailers for your Radarr, and Sonarr libraries.</p> <p>Github: https://github.com/nandyalu/trailarr/ </p> <p>Docker Hub: https://hub.docker.com/r/nandyalu/trailarr/</p> <p>Documentation: https://nandyalu.github.io/trailarr</p> <p>Reddit: https://www.reddit.com/r/trailarr</p> <p>Discord: https://discord.gg/KKPr5kQEzQ</p>"},{"location":"#features","title":"Features","text":"<ul> <li>Manages multiple Radarr and Sonarr instances to find media</li> <li>Runs in background like Radarr/Sonarr.</li> <li>Checks if a trailer already exists for movie/series. Download it if set to monitor.</li> <li>Downloads trailer and organizes it in the media folder.</li> <li>Follows plex naming conventions. Works with Plex, Emby, Jellyfin, etc.</li> <li>Downloads trailers for trailer id's set in Radarr/Sonarr.</li> <li>Searches for a trailer if not set in Radarr/Sonarr.</li> <li>Option to download desired video as trailer for any movie/series.</li> <li>Converts audio, video and subtitles to desired formats. Hardware Acceleration supported for NVIDIA GPUs.</li> <li>Customizable profiles to manage trailer downloads and processing.</li> <li>Beautiful and responsive UI to manage trailers and view details of movies and series.</li> <li>Built with Angular and FastAPI.</li> </ul>"},{"location":"#installation-setup","title":"Installation &amp; Setup","text":"<p>See the Documentation for detailed instructions on Getting Started and User Guide.</p> <p>We don't have an official video yet, but there is a video by AlienTech42 on YouTube that explains Trailarr installation and setup on Unraid.</p>"},{"location":"#dependencies","title":"Dependencies","text":"<p>Trailarr is built using the following libraries and tools:</p> <ul> <li>Angular</li> <li>Ffmpeg</li> <li>FastAPI</li> <li>Material for Mkdocs</li> <li>Python</li> <li>Yt-dlp</li> </ul>"},{"location":"#support","title":"Support","text":"<p>If you have any questions or need help, please read the FAQ first. </p> <p>If you still need help, please use the below:</p> <ul> <li>Discord</li> <li>Reddit</li> </ul> <p>Note: Please do not use the GitHub issues for support requests!</p> <p>If you like the project, please consider giving us a star on GitHub.</p>"},{"location":"#issues","title":"Issues","text":"<p>If you encounter any bugs/issues, please create an issue on the GitHub repository or post on our Discord Server (recommended).</p>"},{"location":"#roadmap","title":"Roadmap","text":"<p>There are some changes that are planned for the future. These changes are not guaranteed to be implemented, but they are on the roadmap.</p> <ul> <li> Add Profiles for Trailers Quality with custom filters (include wait time between downloads)</li> <li> Add custom filters to Media pages in frontend</li> <li> Add a new method for making path mappings easier</li> <li> Add options to disable conversion of downloaded videos</li> <li> Update media objects to include more metadata received from Radarr/Sonarr, include media_available flag, downloaded trailer info, etc.</li> <li> Add an option to trim videos in <code>Media Details</code> page to remove unwanted parts of the trailer. This will help in cases where the trailer has unwanted parts at the beginning or end. \ud83c\udfac</li> <li> Add Plex integration to send notifications to Plex and scan media signals</li> <li> Add support for some fields with translated values</li> <li> Update docs for Windows path mappings</li> <li> Improve task logging (in progress)</li> <li> Add Support for Hardware Acceleration using VAAPI (Intel and AMD)</li> </ul> <p>If you have any suggestions or ideas for new features, please feel free to reach out on Discord. We are always looking for ways to improve the project.</p>"},{"location":"#contributing","title":"Contributing","text":"<p>Contributions are welcome! Please see the Contributing guide for more information.</p> <p>Looking for a backend (python) / frontend developers (Angular) to help with the UI, if you are interested, please reach out on Discord.</p>"},{"location":"#license","title":"License","text":"<p>This project is licensed under the terms of the GPL v3 license. See GPL-3.0 license for more details.</p>"},{"location":"#disclaimer","title":"Disclaimer","text":"<p>For important legal information about using Trailarr, please refer to our Legal Disclaimer.</p>"},{"location":"getting-started/","title":"Getting Started","text":"<p>Thanks for your interest in Trailarr! This guide will help you get started with installing and configuring Trailarr, a tool designed to enhance your media experience by automatically downloading trailers for your movies and TV shows managed by Radarr and Sonarr.</p> <p>If you get stuck at any point, please refer to the Troubleshooting section for help, or check out the FAQ for common questions and answers. </p> <p>Getting Help</p> <p>If you need further assistance, you can also join our community on Discord.</p> <p>In this guide, we will go over a few things you need do to install Trailarr and set it up to talk to your <code>Radarr</code> and <code>Sonarr</code> instances properly, recognize your media, and start downloading trailers for them.</p> <p>Here's a quick overview of the steps we'll cover:</p> <ol> <li>First Steps: Some things you need to know before installing Trailarr.</li> <li>Installation: Detailed instructions on how to install Trailarr, logging in, and initial configuration.</li> <li>Setup: Initial configuration of Trailarr, including setting up connections to Radarr and Sonarr.</li> <li>Next Steps: What to expect after the initial setup, including syncing and downloading trailers.</li> </ol> <p>Let's get started with the first steps to get Trailarr up and running! You can follow the links above to navigate through the guide, or use the sidebar for quick access to each section.</p>"},{"location":"getting-started/04-next-steps/","title":"Next Steps &amp; What to Expect","text":""},{"location":"getting-started/04-next-steps/#initial-sync-and-downloads","title":"Initial Sync and Downloads","text":"<p>Once your connections are set up:</p> <ol> <li>Initial Sync: Trailarr will begin to sync media items from all your configured and enabled connections. This process involves fetching lists of your movies and series.</li> <li>Trailer Scan: It will then scan your existing library (based on your path mappings) to see which trailers you already have.</li> <li>Magic Happens (Downloads): Trailarr includes a scheduled task, \"Download Missing Trailers,\" which typically runs every hour by default (this can often be configured in <code>Settings &gt; Tasks</code>). This task will identify media items missing trailers (according to your profiles) and attempt to download them.</li> </ol>"},{"location":"getting-started/04-next-steps/#how-does-trailarr-work","title":"How does Trailarr work","text":"<ul> <li>Trailarr gets all the Movies and Series from the Radarr and Sonarr connections</li> <li>Scans the media folders to find any existing trailers. Trailarr detects a file as a trailer if it meets these conditions:<ul> <li>File should be one of (<code>avi</code>, <code>mkv</code>, <code>mp4</code>, <code>webm</code>).</li> <li>It should have the word <code>trailer</code> in it, episode files (with SXXEXX) are ignored even if they have the word <code>trailer</code> in them.</li> <li>It should either be in the media folder itself, OR in a subfolder named <code>trailer</code>/<code>trailers</code> (not case-sensitive!).</li> </ul> </li> <li>Runs some tasks every <code>60 minutes</code> (configurable in Settings) to refresh the media from Arrs, and <code>Download Missing Trailers</code> based on <code>Profiles</code>.</li> </ul>"},{"location":"getting-started/04-next-steps/#a-note-on-patience","title":"A Note on Patience","text":"<p>Please be patient, especially during the first sync and the initial \"Download Missing Trailers\" task. The time these operations take can vary significantly depending on:</p> <ul> <li>The size of your media library: More items mean more API calls and more data to process.</li> <li> <p>The number of missing trailers: If you have a large library with few trailers, the first download run might be extensive.</p> <p>Do NOT use 'cookies' for large downloads</p> <p>If you have added a <code>cookies</code> file in <code>Settings &gt; General</code> during Setup, remove them until the initial downloads are completed!</p> <p>Some trailers might fail to download because they are Age-Restricted, don't worry, you can download them later!</p> <p>You can set them once those initial downloads are complete!</p> </li> <li> <p>Your internet connection speed.</p> </li> <li>Rate limits of trailer sources.</li> </ul> <p>You can monitor Trailarr's activity through its logs and/or see the status of tasks in <code>Settings &gt; Tasks</code>.</p> <p>Enjoy your automatically managed trailer collection with Trailarr! \ud83e\udd73\ud83c\udf89</p>"},{"location":"getting-started/01-first-things/","title":"First Things","text":"<p>First things first! Before you can start using Trailarr, ensure you have installed the pre-requisites and configured your environment correctly. </p>"},{"location":"getting-started/01-first-things/#prerequisites","title":"Prerequisites","text":"<p>To run and make use of Trailarr, you need the following installed on your system:</p> <ul> <li>Docker: https://docs.docker.com/get-docker/</li> <li>Docker Compose (optional, but recommended): https://docs.docker.com/compose/install/</li> <li>Radarr: https://radarr.video/</li> <li>Sonarr: https://sonarr.tv/</li> </ul> <p>*Rest of the Tutorial assumes you have these installed and running on your system. If you haven't set up Radarr and Sonarr yet, please refer to their respective documentation for installation instructions.</p> <p>We recommend you to glance through these once, even if you are familiar with Docker containers, so that you get an understanding of what these do and how Trailarr uses them, especially the Radarr/Sonarr Volumes section! </p>"},{"location":"getting-started/01-first-things/#getting-started","title":"Getting Started","text":"<p>A Docker container is like an app on your phone. It comes with everything it needs to run.</p> <p>Just like an app on your phone, Docker containers are isolated and does not have access to your computer settings and files, so we need to explicitly provide them. We can do that using <code>Environment Variables</code> and <code>Volume Mappings</code>.</p>"},{"location":"getting-started/01-first-things/#environment-variables","title":"Environment Variables","text":"<ul> <li> <p>Environment variables are like settings for your app. Most of the Trailarr settings can be configured after you install it, but some need to be set before you start the container. </p> </li> <li> <p>For example, Docker containers does not have access to your computer's timezone. So, you can use environment variables to set the timezone and other settings for Trailarr.</p> </li> </ul> <p>You can find the available options and what they do in Environment Variables page.</p>"},{"location":"getting-started/01-first-things/#volume-mappings","title":"Volume Mappings","text":"<ul> <li> <p>Just like you need to provide permissions for an app to access your photos or other files, you need to give Trailarr access to your media files.</p> </li> <li> <p>Docker uses volume mappings to link folders on your computer to folders inside the Trailarr container. This way, Trailarr can see your media files and save trailers alongside them.</p> </li> <li> <p>Unlike providing access to your photos or media files to an app, you also need to tell Docker where to put that folder inside container.</p> </li> </ul> <p>In simple words, Volume mapping links a folder on your host machine to a folder inside the Docker container. This allows data to persist even if the container is stopped or removed.</p> <p>For Trailarr to access your media files (to find existing trailers) and to save trailer files alongside your media (depending on your setup), it needs to know where your Radarr and Sonarr media folders are located from Trailarr's perspective.</p> <p>Let's find them before proceeding further! See Radarr-Sonarr-Volumes.</p>"},{"location":"getting-started/01-first-things/environment-variables/","title":"Environment Variables","text":"<p>Environment variables are OPTIONAL.</p> <p>Here are the optional environment variables you can set:</p>"},{"location":"getting-started/01-first-things/environment-variables/#app_data_dir","title":"<code>APP_DATA_DIR</code>","text":"<ul> <li>Default is <code>/config</code>.</li> </ul> <p>This environment variable is used to set the application data directory. If setting this, make sure to map the volume to the same directory.</p> <p>Useful if you want to store the application data in a different directory than the default.</p> <p>For example, if you want to store the application data in <code>/app_config/abc</code>, you can set the <code>APP_DATA_DIR</code> environment variable like this:</p> <pre><code>    environment:\n        - APP_DATA_DIR=/app_config/abc\n    volumes:\n        - /var/appdata/trailarr:/app_config/abc\n</code></pre> <p>Warning</p> <p>If you are setting the <code>APP_DATA_DIR</code> environment variable, make sure to set an absolute path like <code>/data</code> or <code>/config/abc</code>, and map the volume to the same directory.</p> <p>Danger</p> <p>Do not set <code>APP_DATA_DIR</code> to <code>/app</code> or <code>/tmp</code> or any other linux system directory. This could cause the application to not work correctly or data loss.</p>"},{"location":"getting-started/01-first-things/environment-variables/#pgid","title":"<code>PGID</code>","text":"<ul> <li>Default is <code>1000</code>.</li> </ul> <p>This environment variable is used to set the group ID for the application.</p> <p>Useful if you have permission issues with the application writing to the volume. You can set the group ID to the group of the volume or a group that has read/write permissions to the volume.</p> <pre><code>    environment:\n        - PGID=1000\n</code></pre>"},{"location":"getting-started/01-first-things/environment-variables/#puid","title":"<code>PUID</code>","text":"<ul> <li>Default is <code>1000</code>.</li> </ul> <p>This environment variable is used to set the user ID for the application.</p> <p>Useful if you have permission issues with the application writing to the volume. You can set the user ID to the owner of the volume or a user that has read/write permissions to the volume.</p> <pre><code>    environment:\n        - PUID=1000\n</code></pre>"},{"location":"getting-started/01-first-things/environment-variables/#tz","title":"<code>TZ</code>","text":"<ul> <li>Default is <code>America/New_York</code>.</li> </ul> <p>This environment variable is used to set the timezone for the application.</p> <p>For a list of valid timezones, see tz database time zones.</p> <pre><code>    environment:\n        - TZ=America/New_York\n</code></pre>"},{"location":"getting-started/01-first-things/environment-variables/#webui_disable_auth","title":"<code>WEBUI_DISABLE_AUTH</code>","text":"<ul> <li>Default is <code>False</code>.</li> </ul> <p>This environment variable is used to disable the authentication for the web interface.</p> <pre><code>    environment:\n        - WEBUI_DISABLE_AUTH=True # This will disable the web UI authentication\n</code></pre>"},{"location":"getting-started/01-first-things/environment-variables/#webui_password","title":"<code>WEBUI_PASSWORD</code>","text":"<ul> <li>Default is <code>trailarr</code> (hashed).</li> </ul> <p>Trailarr Web Interface has a browser login to access the app. Default credentials are:</p> <pre><code>Username: admin\nPassword: trailarr\n</code></pre> <p>If you forget your password, set this environment variable to <code>''</code> (empty string) to reset the password for the web interface to default.</p> <pre><code>    environment:\n        - WEBUI_PASSWORD='' # This will reset the password to default\n</code></pre> <p>To change the password, go to <code>Settings &gt; About &gt; Password</code> in web interface. </p> <p>Info</p> <p>If you change your password from the web interface, the password will be hashed and stored internally. There is no way to retrieve the password as only a hashed version is stored, you need to reset it if you forget it.</p> <p>Warning</p> <p>Once you change your password, don't forget to remove the <code>WEBUI_PASSWORD</code> environment variable from the docker-compose file.</p>"},{"location":"getting-started/01-first-things/environment-variables/#example","title":"Example","text":"<p>Here is an example of setting the environment variables:</p> <pre><code>    environment:\n        - TZ=America/Los_Angeles\n        - PUID=1000\n        - PGID=1000\n        - APP_DATA_DIR=/data/trailarr\n    volumes:\n        - /var/appdata/trailarr:/data/trailarr\n</code></pre> <p>This sets the environment variables to run the app with following settings:</p> <ul> <li>Timezone: America/Los_Angeles</li> <li>User ID: 1000</li> <li>Group ID: 1000</li> <li>Application data directory: /data/trailarr</li> <li>Volume mapping: /var/appdata/trailarr:/data/trailarr</li> </ul>"},{"location":"getting-started/01-first-things/radarr-sonarr-volumes/","title":"Radarr Sonarr Volumes","text":""},{"location":"getting-started/01-first-things/radarr-sonarr-volumes/#finding-your-radarrsonarr-volume-mappings","title":"Finding Your Radarr/Sonarr Volume Mappings","text":"<p>To correctly configure Trailarr, you need to identify the volume mappings you used when setting up your Radarr and Sonarr Docker containers or standalone apps</p> <ul> <li> <p>If you used Docker Compose: Look at your <code>docker-compose.yml</code> file for Radarr and Sonarr. Find the <code>volumes:</code> section for each service. It will look something like this:     <pre><code>services:\n  radarr:\n    # ... other settings ...\n    volumes:\n      - /path/on/your/host/movies:/media/movies # &lt;-- Radarr volume mapping\n      - /path/on/your/host/radarr/config:/config\n    # ... other settings ...\n  sonarr:\n    # ... other settings ...\n    volumes:\n      - /path/on/your/host/tv:/media/tv # &lt;-- Sonarr volume mapping\n      - /path/on/your/host/sonarr/config:/config\n    # ... other settings ...\n</code></pre>     In this example, <code>/path/on/your/host/movies</code> on your computer is available as <code>/media/movies</code> inside the Radarr container, and <code>/path/on/your/host/tv</code> is available as <code>/media/tv</code> inside the Sonarr container.</p> <p>You will need these host paths (<code>/path/on/your/host/movies</code> and <code>/path/on/your/host/tv</code>) when configuring Trailarr's volumes.</p> </li> <li> <p>If you used <code>docker run</code>: Recall the <code>docker run</code> command you used. Look for the <code>-v</code> or <code>--volume</code> flags. For example:     <pre><code>docker run ... -v /path/on/your/host/movies:/media/movies ... radarr_image\ndocker run ... -v /path/on/your/host/tv:/media/tv ... sonarr_image\n</code></pre>     Again, note down the host paths.</p> </li> <li> <p>If you used standalone apps: Think of your volumes as the same path on both sides of the docker volume mapping. </p> <p>For example: if your movies are located in <code>/mnt/usr/media/movies/</code> then you need to use the volume as:</p> <pre><code>/mnt/usr/media/movies/:/mnt/usr/media/movies/\n</code></pre> <p>If you are on Windows, then you would use a path like <code>C:\\Users\\YourUser\\Media\\Movies\\</code> and map it to a similar path inside the container, like so:</p> <p><pre><code>C:\\\\Users\\\\YourUser\\\\Media\\\\Movies\\\\:/media/movies/\n</code></pre> Remember these as you will need these paths when configuring Trailarr's volumes.</p> </li> </ul> <p>You will use these same host paths when setting up Trailarr's volume mappings in the next step, ensuring Trailarr can see the same media files as your *Arr instances. We'll cover this in the Installation section.</p>"},{"location":"getting-started/02-installation/","title":"Installation","text":"<p>Trailarr can only be installed as a Docker container. We might provide a native installer later, but Docker is the recommended way to run Trailarr, as it allows for easy updates and management.</p> <p>We have guides for installing Trailarr using these methods:</p> <ul> <li>Docker Compose</li> <li>Docker Run</li> <li>Unraid</li> </ul> <p>Hardware Acceleration</p> <p>Trailarr also supports Hardware Acceleration using Intel, AMD, and NVIDIA GPUs for converting downloaded trailers. See details in Hardware Acceleration section.</p> <p>Each method has its own set of instructions, so choose the one that best fits your setup.</p> <p>It is recommended to use Docker Compose for installation, as it simplifies the process of managing multiple containers and their configurations and/or updating to newer versions later.</p> <p>Tip</p> <p>There are some things you need to know for installing Trailarr, which are explained in Docker Compose section. Please read that section before proceeding with the installation.</p>"},{"location":"getting-started/02-installation/docker-compose/","title":"Docker Compose","text":"<p>Before you begin, make sure you have reviewed the First Things section to understand environment variables and how to find your existing Radarr/Sonarr volume mappings.</p> <p>Create a <code>docker-compose.yml</code> file with the following content. Adjust the volumes and environment variables to match your setup.</p> <pre><code>services:\n  trailarr:\n    image: nandyalu/trailarr:latest\n    container_name: trailarr\n    environment:\n      - TZ=America/New_York # Change to your timezone\n      # Add any other environment variables as needed.\n    volumes:\n      - /path/to/your/trailarr/config:/config # For Trailarr's database and logs\n      # Map your Radarr media folder(s)\n      - /path/on/your/host/movies:/media/movies # Example: if Radarr uses /media/movies internally\n      # Map your Sonarr media folder(s)\n      - /path/on/your/host/tv:/media/tv # Example: if Sonarr uses /media/tv internally\n      # Add more volume mappings if you have multiple Radarr/Sonarr instances\n      # or if your media is split across different locations.\n      # The path on the right (e.g., /media/movies, /media/tv) is how Trailarr will see these folders.\n      # The path on the left is the actual path on your Docker host system.\n    ports:\n      - \"7889:7889\" # Or choose a different host port if 7889 is taken, leave the right side as is\n    restart: unless-stopped\n    # Optional: Add labels, network, and other configuration as needed\n</code></pre>"},{"location":"getting-started/02-installation/docker-compose/#explanation-of-options","title":"Explanation of options","text":""},{"location":"getting-started/02-installation/docker-compose/#general-docker-compose-options","title":"General Docker Compose Options","text":"<p>This section is for those who are new to Docker or Docker Compose. If you are already familiar with Docker Compose, you can skip this section and go to the <code>volumes</code> section below.</p> <p>If you are familiar with Docker containers and/or have been using them, skip to <code>volumes</code> section and look at the examples for configuring them.</p> <p>Let's go over some of the things we used here:</p> <p><pre><code>services:\n  trailarr:\n    image: nandyalu/trailarr:latest\n    container_name: trailarr\n    # Other options here\n</code></pre> <code>image</code>: Specifies the Trailarr Docker image. Using <code>latest</code> to make updating to newer versions easier. Change to a specific version if needed.</p> <p><code>container_name</code>: A friendly name for your container.</p> <p><pre><code>services:\n  trailarr:\n    image: nandyalu/trailarr:latest\n    container_name: trailarr\n    environment:\n      - TZ=America/New_York # Change to your timezone\n    # Other options here\n    ports:\n      - 7889:7889\n    restart: unless-started\n</code></pre> <code>environment</code>: Set your timezone here!   For a list of valid timezones, see tz database time zones.</p> <p><code>ports</code>: Trailarr uses port <code>7889</code> internally, we need to tell Docker to make it available to our system so that we can view Trailarr UI.   We can use the same port <code>7889</code> or change it to a different port if it's used by some other program or container.</p> <p>To use a differnt port, change the LEFT side to your desired port!   <pre><code>ports:\n  - 8115:7889 # &lt;-- Changed outside port to `8115` if needed\n</code></pre></p> <p><code>restart: unless-stopped</code>: Ensures the container restarts automatically unless you explicitly stop it.</p> <p>Tip</p> <p>Trailarr has some intenal mechanisms to check if it's running as expected which will notify Docker when it's not, and Docker restarts it. This will only work when <code>restart</code> is set to either <code>unleass-stopped</code> or <code>always</code>.</p> <p>Now, those were the easy options, let's go over the hardest part: <code>volumes</code>. These needs to be setup properly for Trailarr to work for you.</p>"},{"location":"getting-started/02-installation/docker-compose/#volumes","title":"Volumes","text":"<p>This is the most important part of the Docker Compose file. It allows Trailarr to access your media files and store its configuration data persistently. We will go over the <code>volumes</code> section in detail below. We understand that this is going to be exhaustive, so we did our best to make it easy to understand and set them up properly.</p> <p><code>volumes</code>: There are 2 types of volumes that are needed: AppData and Media Folders</p> <p>And there are 2 parts to each volume mapping:</p> <ol> <li>Local Folder: The folder on your computer/server where the media files are stored.</li> <li>Container Folder: The folder inside the Trailarr container where it can access the media files.</li> </ol> <p>This is used like:</p> <pre><code>  volumes:\n    - &lt;Local Folder&gt;:&lt;Container Folder&gt;\n</code></pre>"},{"location":"getting-started/02-installation/docker-compose/#trailarr-appdata","title":"Trailarr AppData","text":"<pre><code>services:\n  trailarr:\n    image: nandyalu/trailarr:latest\n    # Other options here\n    volumes:\n      - /path/to/your/trailarr:/config # For Trailarr's database and logs\n      # Map your Radarr media folder(s)\n      - /path/on/your/host/movies:/media/movies # Example: if Radarr uses /media/movies internally\n      # Map your Sonarr media folder(s)\n      - /path/on/your/host/tv:/media/tv # Example: if Sonarr uses /media/tv internally\n    # Other options here\n</code></pre> <p>This is crucial. It maps a directory on your computer/server to <code>/config</code> inside the Trailarr container. This is where Trailarr will store its persistent data (database, logs, other configuration files, etc.,).</p> <p>This is a common practice for most Docker containers. For example <code>Radarr</code> and <code>Sonarr</code> also uses a <code>/config</code> inside it's container for appdata.</p> <p>If you do not provide this, trailarr will still work, but once you restart your system, it will become an amnesia patient! It will forget everything and you have to start from scratch. We don't want that right! so we need to map this to a folder on our computer/server so that the data exists even on restarting the system.</p> <p>Below are some examples on how you can map this to a folder on your system. But feel free to use a folder that you think is the best.</p> Examples 1 &amp; 2 <p>You can use something like this</p> <pre><code>volumes:\n  - /opt/trailarr/config:/config \n</code></pre> <p>Or this:</p> <pre><code>volumes:\n  - /home/user/docker/trailarr:/config\n</code></pre> Example 3 - TRaSH Guides <p>If you used TRaSH Guides for setting up <code>Radarr</code> and <code>Sonarr</code> Docker containers, they also uses a <code>/config</code> inside it's container.</p> <p>If you already have those setup like:</p> <pre><code># Radarr Config - DO NOT USE WITH TRAILARR\nvolumes:\n  - /docker/appdata/radarr:/config\n</code></pre> <p>Then, you can use below for Trailarr:</p> <pre><code># USE THIS WITH TRAILARR\nvolumes:\n  - /docker/appdata/trailarr:/config\n</code></pre> Example 4 - Recommended for Windows users <p>Known Issue - File Access Slowness and Workaround</p> <p>Windows users of Docker Desktop often experience slow read/write speeds when using volume mounts. This is a known limitation of file sharing between the Windows host and Docker containers.</p> <p>Fortunately, we can use a workaround by creating a <code>Docker Volume</code>.</p> <p>Here's an example Docker compose that uses a docker volume named <code>trailarr_data</code> for <code>/config</code>.</p> <pre><code>services:\n  trailarr:\n    # Other options here\n    volumes:\n      - trailarr_data:/config # Docker volume for appdata, the first part `trailarr_data` is the volume name\n      - M:\\Movies:/m/movies   # Movies drive\n      - R:\\TV:/r/tv           # TV series drive 1\n      - S:\\TV:/s/tv           # TV series drive 2\n      - T:\\TV:/t/tv           # TV series drive 3\n    restart: unless-stopped\n\nvolumes:\n  trailarr_data:  # volume name, should match the volume name in the service\n    # Any extra options for the volume if needed\n</code></pre> <p>We used <code>trailarr_data</code> here, but you can use any name that makes sense to you. Update it on both the highlighted lines!</p> <p>Relevant threads discussing this issue:</p> <ul> <li>File access in mounted volumes extremely slow</li> <li>Performance volume mount</li> </ul> <p>More information on Docker Volumes can be found in the Docker documentation.</p> <p>Things to Note</p> <ul> <li>Do NOT change the right side <code>/config</code> part!!!</li> <li>Replace the left side <code>/path/to/your/trailarr</code> with an actual path on your system.</li> <li>Make sure this folder actually exists on your system and accessible.</li> </ul>"},{"location":"getting-started/02-installation/docker-compose/#media-folders","title":"Media Folders","text":"<p><pre><code>services:\n  trailarr:\n    image: nandyalu/trailarr:latest\n    # Other options here\n    volumes:\n      - /path/to/your/trailarr:/config # For Trailarr's database and logs\n      # Map your Radarr media folder(s)\n      - /path/on/your/host/movies:/media/movies # Example: if Radarr uses /media/movies internally\n      # Map your Sonarr media folder(s)\n      - /path/on/your/host/tv:/media/tv # Example: if Sonarr uses /media/tv internally\n    # Other options here\n</code></pre> These are examples. You must update these.</p> <ul> <li>The left side (<code>/path/on/your/host/...</code>) should be the folder path where media files are located in your system.</li> <li>The right side (<code>:/movies</code>, <code>:/tv</code>) is how this path will be known inside the Trailarr container. You will use these paths later when configuring connections in Trailarr. </li> </ul> <p>Use UNIQUE container folder paths</p> <p>Make sure these paths are unique and do not conflict with any other container's paths. What does this mean? Let's say you used below configuration:</p> <pre><code># DO NOT USE THIS\nservices:\n  trailarr:\n    image: nandyalu/trailarr:latest\n    # Other options here\n    volumes:\n      - /path/to/your/trailarr:/config # For Trailarr's database and logs\n      # Map your Radarr media folder(s)\n      - /mnt/disk1/media/movies:/media # Container Path: '/media'\n      # Map your Sonarr media folder(s)\n      - /mnt/disk2/media/tv:/media # Container Path: '/media'\n    # Other options here\n</code></pre> <p>This means we are telling Docker to link both our <code>Movies</code> and <code>TV</code> folders to <code>Media</code> folder inside Trailarr container. Docker will link <code>Movies</code> folder to <code>/media</code> folder first and then replaces it with <code>TV</code> folder later, so Trailarr will only have access to <code>TV</code> folder and not the <code>Movies</code> folder.</p> <p>You can use something like below to get around this:</p> <pre><code># DO NOT USE THIS\nservices:\n  trailarr:\n    image: nandyalu/trailarr:latest\n    # Other options here\n    volumes:\n      - /path/to/your/trailarr:/config # For Trailarr's database and logs\n      # Map your Radarr media folder(s)\n      - /mnt/disk1/media/movies:/disk1/media # &lt;-- MODIFIED\n      # Map your Sonarr media folder(s)\n      - /mnt/disk2/media/tv:/disk2/media # &lt;-- MODIFIED\n    # Other options here\n</code></pre> <p>Important</p> <p>If you have a path with spaces in it, you can either:</p> <ul> <li>Use quotes around the path like this: <code>\"/path/with spaces:/media/movies\"</code> (recommended)</li> <li>Or escape the spaces with a backslash like this: <code>/path/with\\ spaces:/media/movies</code></li> </ul> <p>Remember that we got our volumes from <code>Radarr</code> and <code>Sonarr</code> Docker compose files in First Things, we need to use them here!</p> <p>Here are some examples:</p> Example 1 - TRaSH Guides - Same Folder in <code>Radarr</code> and <code>Sonarr</code> <p>If you have <code>Radarr</code> and <code>Sonarr</code> like below:</p> <pre><code>services:\n  radarr:\n    image: ghcr.io/hotio/radarr:latest\n    # Other options here\n    volumes:\n      - /docker/appdata/radarr:/config\n      - /data:/data\n    # Other options here\n  sonarr:\n    image: ghcr.io/hotio/sonarr:latest\n    # Other options here\n    volumes:\n      - /docker/appdata/sonarr:/config\n      - /data:/data\n    # Other options here\n</code></pre> <p>This means your movies are located in <code>/data/movies</code> in both your system and the Radarr container. Similary the TV Shows are in <code>/data/tv</code>.</p> <p>So, we can use this in Trailarr:</p> <pre><code>services:\n  trailarr:\n    image: nandyalu/trailarr:latest\n    # Other options here\n    volumes:\n      - /docker/appdata/trailarr:/config\n      - /data:/data\n    # Other options here\n</code></pre> <p>Since <code>Radarr</code> and <code>Sonarr</code> both have the same volume <code>/data:/data</code> we don't need to duplicate it!</p> Example 2 - Different folders for <code>Radarr</code> and <code>Sonarr</code> <p>If you have <code>Radarr</code> and <code>Sonarr</code> like below:</p> <pre><code>services:\n  radarr:\n    image: ghcr.io/hotio/radarr:latest\n    # Other options here\n    volumes:\n      - /docker/appdata/radarr:/config\n      - /mnt/movies_disk/media/movies:/media/movies\n    # Other options here\n  sonarr:\n    image: ghcr.io/hotio/sonarr:latest\n    # Other options here\n    volumes:\n      - /docker/appdata/sonarr:/config\n      - /mnt/series_disk/media/tv:/media/tv\n    # Other options here\n</code></pre> <p>This means your movies are located in <code>/mnt/movies_disk/media/movies</code> in your system and <code>/media/movies</code> inside Radarr container. </p> <p>Similary the TV Shows are in <code>/mnt/series_disk/media/tv</code> in your system and <code>/media/tv</code> inside Sonarr container.</p> <p>So, we can use this in Trailarr as:</p> <pre><code>services:\n  trailarr:\n    image: nandyalu/trailarr:latest\n    # Other options here\n    volumes:\n      - /docker/appdata/trailarr:/config\n      - /mnt/movies_disk/media/movies:/media/movies\n      - /mnt/series_disk/media/tv:/media/tv\n    # Other options here\n</code></pre> <p>Since <code>Radarr</code> and <code>Sonarr</code> have their media in different folders, we mapped both of them to Trailarr as is!</p> Example 3 - Different <code>Radarr</code> and <code>Sonarr</code> folders mapped to same container folder <p>If both your <code>Radarr</code> and <code>Sonarr</code> are mapped to same folder path on the right side like <code>/data</code> and you add them to <code>Trailarr</code> directly like below, we will have a problem (DO NOT DO THIS).</p> <pre><code># DO NOT USE THIS\nradarr:\n  # other config\n  volumes:\n    - /mnt/disk1/media/movies:/data\nsonarr:\n  # other config\n  volumes:\n    - /mnt/disk2/media/tv:/data\ntrailarr:\n  # other config\n  volumes:\n    - /mnt/disk1/media/movies:/data # &lt;-- DO NOT USE\n    - /mnt/disk2/media/tv:/data # &lt;-- DO NOT USE\n</code></pre> <p>Basically, what happens is Docker will map <code>/mnt/disk1/media/movies</code> to <code>/data</code> inside the container without any issues.</p> <p>But then it will try to map <code>/mnt/disk1/media/tv</code> to <code>/data</code> inside the container, which will override the first mapping.</p> <p>We don't know if Docker will map them in this order, so we cannot predict which one will be available inside Trailarr.</p> <p>So instead of mapping both to same internal folder <code>/data</code>, what we do is change them a little bit, but we need to remember these for configuring Path Mappings later!</p> <p>Here's an example of what we can do:</p> <pre><code># USE THIS INSTEAD\nradarr:\n  # other config\n  volumes:\n    - /mnt/disk1/media/movies:/data\nsonarr:\n  # other config\n  volumes:\n    - /mnt/disk2/media/tv:/data\ntrailarr:\n  # other config\n  volumes:\n    - /mnt/disk1/media/movies:/data/movies # &lt;-- MODIFIED\n    - /mnt/disk2/media/tv:/data/tv # &lt;-- MODIFIED\n</code></pre> Example 4 - Windows users <p>Let's go over a simple Windows configuration. Concepts form examples 1, 2 and 3 can also be applied to Windows as well, just change the left side of volume mapping with Windows path.</p> <p>Windows volume mappings are similar to Linux/MacOS volume mappings with one change, the left side of path is different!</p> <p>Windows paths use a '\\' (back-slash) and Linux/MacOS paths use '/' (forward-slash).</p> <p>When adding a volume mapping from Windows (Docker Desktop), you have some options, use the one that works for you:</p> <ul> <li> <p>Use the original path as is</p> <pre><code>  volumes:\n    - C:\\Users\\nandyalu\\Videos\\Movies:/data/movies\n</code></pre> </li> <li> <p>Use the original path with '\\' but instead of '\\' replace it with '\\\\'</p> <pre><code>  volumes:\n    - C:\\\\Users\\\\nandyalu\\\\Videos\\\\Movies:/data/movies\n</code></pre> </li> <li> <p>Or replace '\\' with '/' by adding a '/' before the drive letter like this</p> <pre><code>  volumes:\n    - /C/Users/nandyalu/Videos/Movies:/data/movies\n</code></pre> </li> <li> <p>There might be other paths that work, if you know something else that has been working for you, feel free to keep using that! You can also share with us, so that we can add it here!</p> </li> </ul> <p>Warning</p> <p>Trailarr Docker container uses <code>Ubuntu</code> OS, which is Linux, so we need to add Linux paths for right side paths in volume mapping.</p> <p>So, here's an example docker compose for Windows:</p> <pre><code>services:\n  trailarr:\n    # Other options here\n    volumes:\n      - trailarr_data:/config # Docker volume for appdata, the first part `trailarr_data` is the volume name\n      - M:\\Movies:/m/movies   # Movies drive\n      - R:\\TV:/r/tv           # TV series drive 1\n      - S:\\TV:/s/tv           # TV series drive 2\n      - T:\\TV:/t/tv           # TV series drive 3\n    restart: unless-stopped\n\nvolumes:\n  trailarr_data:  # volume name, should match the volume name in the service\n    # Any extra options for the volume if needed\n</code></pre> Example 5 - Non-Docker <code>Radarr</code> and <code>Sonarr</code> <p>There is nothing speciial here other than the fact that you have installed <code>Radarr</code> and <code>Sonarr</code> native apps and not as Docker containers. </p> <p>So, one thing that changes here is the fact that you don't have the right side path of volume mappings.</p> <p>Here's what you can do:</p> <ul> <li> <p>If all your media (Movies and TV Shows) are under one parent folder like <code>/mnt/disk1/media</code> with subfolders for <code>movies</code>, <code>tv</code>, then you can do this (recommended)</p> <pre><code>services:\n  trailarr:\n    # Other options here\n    volumes:\n      - /docker/appdata/trailarr:/config # appdata\n      - /mnt/disk1/media:/mnt/disk1/media # Media Folders, using same path\n    restart: unless-stopped\n    # Other options here\n</code></pre> </li> <li> <p>OR this</p> <pre><code>services:\n  trailarr:\n    # Other options here\n    volumes:\n      - /docker/appdata/trailarr:/config # appdata\n      - /mnt/disk1/media:/media # Media Folders, mapping to `/media` inside container\n    restart: unless-stopped\n    # Other options here\n</code></pre> </li> <li> <p>If your media is in different paths/disks then map each of them to a specific folder inside Trailarr. <code>/data</code>, <code>/media</code>, <code>/mnt</code>, <code>/storage</code> are all good choices. Just make sure you don't use a Linux system folder like <code>/app</code>, <code>/bin</code>, <code>/etc</code>, <code>/home</code>, <code>/var</code> etc.</p> <pre><code>services:\n  trailarr:\n    # Other options here\n    volumes:\n      - /docker/appdata/trailarr:/config # appdata\n      - /mnt/disk1/movies:/media/movies # Movies Folder\n      - /mnt/disk2/tv:/media/tv # TV Folder\n    restart: unless-stopped\n    # Other options here\n</code></pre> </li> </ul> <p>That's it! You have finished setting up <code>volumes</code> and <code>Docker Compose</code> for running Trailarr. Now, use the command below to start the container.</p>"},{"location":"getting-started/02-installation/docker-compose/#run-docker-compose","title":"Run Docker Compose","text":"<p>Once you have customized your <code>docker-compose.yml</code> file, save it and run: <pre><code>docker-compose up -d\n</code></pre> To update Trailarr later, you can run: <pre><code>docker-compose pull trailarr\ndocker-compose up -d\n</code></pre></p> <p>Now that Trailarr is up and running, we need to configure it to connect to our <code>Radarr</code> and <code>Sonarr</code> to let it start doing it's job - download trailers. We will go over that in the next section Setup.</p>"},{"location":"getting-started/02-installation/docker-run/","title":"Docker Run","text":"<p>Before you begin, make sure you have reviewed the First Things section to understand environment variables and how to find your existing Radarr/Sonarr volume mappings.</p> <p>Use Docker Compose</p> <p>It is recommended to use <code>Docker Compose</code>, as it makes it easy to update to latest version and/or update the configuration later if needed</p> <p>If you prefer not to use Docker Compose, you can use the <code>docker run</code> command. Be sure to replace placeholders with your actual paths and settings.</p> <pre><code>docker run -d \\\n  --name trailarr \\\n  -e TZ=\"America/New_York\" \\\n  # Add any other environment variables as needed\n  -p 7889:7889 \\\n  -v /path/to/your/trailarr:/config \\\n  -v /path/on/your/host/movies:/movies \\\n  -v /path/on/your/host/tv:/tv \\\n  # Add more volume mappings as needed\n  --restart unless-stopped \\\n  nandyalu/trailarr:latest\n</code></pre>"},{"location":"getting-started/02-installation/docker-run/#explanation-of-options","title":"Explanation of options:","text":"<p>For a detailed explanation of how to setup each of these see Docker Compose.</p> <ul> <li><code>-d</code>: Runs the container in detached mode (in the background).</li> <li><code>--name trailarr</code>: Assigns a name to the container.</li> <li><code>-e OPTION=VALUE</code>: An environment variable to use with the container.</li> <li><code>-p 7889:7889</code>: Maps port 7889 on your host to port 7889 in the container. Change the host port (left side) if needed.</li> <li><code>-v HOST_PATH:CONTAINER_PATH</code>: Map a HOST_PATH (path in your computer/server) to an INTERNAL_PATH (path inside Trailarr container).</li> <li><code>--restart unless-stopped</code>: Ensures the container restarts automatically when unhealthy.</li> <li><code>nandyalu/trailarr:latest</code>: The Docker image to use.</li> </ul> <p>Now that Trailarr is up and running, we need to configure it to connect to our <code>Radarr</code> and <code>Sonarr</code> to let it start doing it's job - download trailers. We will go over that in the next section Setup.</p>"},{"location":"getting-started/02-installation/hardware-acceleration/","title":"Hardware Acceleration","text":"<p>Trailarr can be used with hardware acceleration to speed up video conversion using NVIDIA, Intel, and AMD GPUs. This guide explains how to set up Trailarr to leverage hardware acceleration from different GPU manufacturers.</p> <p>Important</p> <p>Hardware acceleration is an advanced feature and requires additional setup on your host system. If you do not know/understand what hardware acceleration is, you can safely ignore this guide and use Trailarr without hardware acceleration.</p> <p>Note</p> <p>Trailarr supports hardware acceleration using NVIDIA GPUs (CUDA) and Intel/AMD GPUs (VAAPI). The container automatically detects available GPU hardware during startup and uses the best acceleration method available.</p> <p>Runtime Libraries Included</p> <p>The Trailarr container includes the necessary runtime libraries and ffmpeg build with hardware acceleration support:</p> <ul> <li>Intel/AMD GPU: <code>libva2</code>, <code>libva-drm2</code>, <code>intel-media-va-driver</code>, <code>i965-va-driver</code>, <code>mesa-va-drivers</code>, <code>vainfo</code></li> <li>NVIDIA GPU: Uses NVIDIA Container Toolkit (runtime provided by host)</li> </ul> <p>The container uses yt-dlp/FFmpeg-Builds static builds with comprehensive hardware acceleration codec support.</p>"},{"location":"getting-started/02-installation/hardware-acceleration/#prerequisites","title":"Prerequisites","text":"<p>Before you begin, ensure you have the following available based on your GPU type:</p> NVIDIA GPU (CUDA)Intel GPU (VAAPI)AMD GPU (VAAPI) <ul> <li>NVIDIA GPU</li> <li>NVIDIA drivers installed on your system</li> <li>NVIDIA Container Toolkit installed on your system</li> </ul> <p>If you haven't installed the NVIDIA Container Toolkit, follow the official installation guide.</p> <ul> <li>Intel GPU with hardware video acceleration support</li> <li>Intel GPU drivers installed on your system</li> <li><code>/dev/dri</code> devices available to the container</li> <li>Host user added to <code>render</code> and/or <code>video</code> groups (recommended)</li> </ul> <p>Host System Requirements: <pre><code># Ubuntu/Debian - Install Intel GPU drivers and VAAPI support\nsudo apt update\nsudo apt install intel-media-va-driver i965-va-driver vainfo\n\n# Add your user to render and video groups\nsudo usermod -a -G render,video $USER\n\n# Verify VAAPI functionality\nvainfo\n</code></pre></p> <p>The Trailarr container includes the necessary Intel GPU runtime libraries. Ensure your Intel GPU drivers support VAAPI acceleration.</p> <ul> <li>AMD GPU with VAAPI support (most modern AMD GPUs)</li> <li>AMD GPU drivers installed on your system</li> <li><code>/dev/dri</code> devices available to the container</li> <li>Host user added to <code>render</code> and/or <code>video</code> groups (recommended)</li> </ul> <p>Host System Requirements: <pre><code># Ubuntu/Debian - Install AMD GPU drivers and VAAPI support\nsudo apt update\nsudo apt install mesa-va-drivers vainfo\n\n# Add your user to render and video groups\nsudo usermod -a -G render,video $USER\n\n# Verify VAAPI functionality\nvainfo\n</code></pre></p> <p>The Trailarr container includes the necessary AMD GPU runtime libraries. AMD GPUs use VAAPI through Mesa drivers for hardware acceleration.</p>"},{"location":"getting-started/02-installation/hardware-acceleration/#installation","title":"Installation","text":"<p>To run Trailarr with hardware acceleration, you need to provide the appropriate runtime flags during installation based on your GPU type.</p>"},{"location":"getting-started/02-installation/hardware-acceleration/#nvidia-gpus","title":"NVIDIA GPUs","text":"<p>Run the following command to start Trailarr with NVIDIA GPU acceleration:</p> <p>Important</p> <p>The important part of the command is the <code>runtime=nvidia</code> flag, which tells Docker to use the NVIDIA runtime. You can modify rest of the command to suit your needs.</p> Docker ComposeDocker Run <pre><code>services:\n  trailarr:\n    image: nandyalu/trailarr:latest\n    container_name: trailarr\n    environment:\n      - TZ=America/New_York\n      - PUID=1000\n      - PGID=1000\n    ports:\n      - 7889:7889\n    runtime: nvidia  # &lt;-- Add this line for NVIDIA GPUs\n    volumes:\n      - &lt;LOCAL_APPDATA_FOLDER&gt;:/config\n      - &lt;LOCAL_MEDIA_FOLDER&gt;:&lt;RADARR_ROOT_FOLDER&gt;\n      - &lt;LOCAL_MEDIA_FOLDER&gt;:&lt;SONARR_ROOT_FOLDER&gt;\n    restart: on-failure\n</code></pre> <pre><code>docker run -d \\\n    --name=trailarr \\\n    -e TZ=America/New_York \\\n    -e PUID=1000 \\\n    -e PGID=1000 \\\n    -p 7889:7889 \\\n    --runtime=nvidia \\  # &lt;-- Add this line for NVIDIA GPUs\n    -v &lt;LOCAL_APPDATA_FOLDER&gt;:/config \\\n    -v &lt;LOCAL_MEDIA_FOLDER&gt;:&lt;RADARR_ROOT_FOLDER&gt; \\\n    -v &lt;LOCAL_MEDIA_FOLDER&gt;:&lt;SONARR_ROOT_FOLDER&gt; \\\n    --restart unless-stopped \\\n    nandyalu/trailarr:latest\n</code></pre>"},{"location":"getting-started/02-installation/hardware-acceleration/#intelamd-gpus","title":"Intel/AMD GPUs","text":"<p>Run the following command to start Trailarr with Intel or AMD GPU acceleration:</p> <p>Important</p> <p>The important part of the command is the <code>device /dev/dri</code> flag, which gives the container access to the GPU hardware. You can modify rest of the command to suit your needs.</p> Docker ComposeDocker Run <pre><code>services:\n  trailarr:\n    image: nandyalu/trailarr:latest\n    container_name: trailarr\n    environment:\n      - TZ=America/New_York\n      - PUID=1000\n      - PGID=1000\n    ports:\n      - 7889:7889\n    devices:\n      - /dev/dri:/dev/dri  # &lt;-- Add this line for Intel/AMD GPUs\n    volumes:\n      - &lt;LOCAL_APPDATA_FOLDER&gt;:/config\n      - &lt;LOCAL_MEDIA_FOLDER&gt;:&lt;RADARR_ROOT_FOLDER&gt;\n      - &lt;LOCAL_MEDIA_FOLDER&gt;:&lt;SONARR_ROOT_FOLDER&gt;\n    restart: on-failure\n</code></pre> <pre><code>docker run -d \\\n    --name=trailarr \\\n    -e TZ=America/New_York \\\n    -e PUID=1000 \\\n    -e PGID=1000 \\\n    -p 7889:7889 \\\n    --device /dev/dri \\  # &lt;-- Add this line for Intel/AMD GPUs\n    -v &lt;LOCAL_APPDATA_FOLDER&gt;:/config \\\n    -v &lt;LOCAL_MEDIA_FOLDER&gt;:&lt;RADARR_ROOT_FOLDER&gt; \\\n    -v &lt;LOCAL_MEDIA_FOLDER&gt;:&lt;SONARR_ROOT_FOLDER&gt; \\\n    --restart unless-stopped \\\n    nandyalu/trailarr:latest\n</code></pre>"},{"location":"getting-started/02-installation/hardware-acceleration/#testing-hardware-acceleration","title":"Testing Hardware Acceleration","text":"<p>Once you have set up Trailarr with hardware acceleration, you can test if it is working correctly:</p> NVIDIA GPU (CUDA)Intel/AMD GPU (VAAPI) <pre><code>docker exec -it trailarr nvidia-smi\n</code></pre> <p>If everything is set up correctly, you should see the NVIDIA GPU details in the output.</p> <pre><code>docker exec -it trailarr ls -la /dev/dri\n</code></pre> <p>If everything is set up correctly, you should see the DRI devices (like <code>renderD128</code>) in the output.</p> <p>Test VAAPI functionality: <pre><code>docker exec -it trailarr vainfo --display drm --device /dev/dri/renderD128\n</code></pre></p> <p>This should show the available VAAPI profiles supported by your GPU.</p> <p>You can also check the GPU detection by looking at the container logs: <pre><code>docker logs trailarr\n</code></pre></p> <p>Look for messages like \"NVIDIA GPU detected\", \"Intel GPU detected\", or \"AMD GPU detected\" in the startup logs. The logs will also show detailed GPU information and VAAPI capabilities when available.</p>"},{"location":"getting-started/02-installation/hardware-acceleration/#host-system-setup","title":"Host System Setup","text":""},{"location":"getting-started/02-installation/hardware-acceleration/#user-group-configuration-intelamd-gpus","title":"User Group Configuration (Intel/AMD GPUs)","text":"<p>For optimal Intel/AMD GPU performance, ensure your host user is added to the appropriate groups:</p> <pre><code># Add current user to render and video groups\nsudo usermod -a -G render,video $USER\n\n# Verify group membership (log out and back in if needed)\ngroups\n</code></pre>"},{"location":"getting-started/02-installation/hardware-acceleration/#permissions-and-device-access","title":"Permissions and Device Access","text":"<p>The container needs access to <code>/dev/dri</code> devices for hardware acceleration:</p> <pre><code># Check DRI device permissions on host\nls -la /dev/dri/\n\n# Should show something like:\n# crw-rw---- 1 root render 226, 128 ... renderD128\n# crw-rw---- 1 root video  226, 0   ... card0\n</code></pre> <p>If you encounter permission issues, you may need to run the container with specific user/group IDs:</p> <pre><code># Docker Compose - matching host user\nservices:\n  trailarr:\n    image: nandyalu/trailarr:latest\n    user: \"${UID}:${GID}\"  # Use host user ID\n    environment:\n      - PUID=${UID}\n      - PGID=${GID}\n    # ... rest of config\n</code></pre> <p>Automatic Group Assignment</p> <p>The Trailarr container automatically attempts to add the container user (<code>appuser</code>) to the necessary GPU groups (<code>render</code>, <code>video</code>, and common GPU group IDs like 226, 128, 129) during startup. This reduces the need for manual group configuration in most cases.</p>"},{"location":"getting-started/02-installation/hardware-acceleration/#enabling-hardware-acceleration-in-trailarr","title":"Enabling Hardware Acceleration in Trailarr","text":"<p>To enable hardware acceleration in Trailarr, navigate to <code>Settings</code> -&gt; <code>General</code> -&gt; <code>Advanced Settings</code> and enable the <code>Hardware Acceleration</code> option.</p> <p>Note</p> <p>Trailarr automatically detects available GPU hardware and uses the best acceleration method available. The priority order is: NVIDIA &gt; Intel/AMD VAAPI &gt; CPU fallback.</p>"},{"location":"getting-started/02-installation/hardware-acceleration/#supported-codecs-by-gpu-type","title":"Supported Codecs by GPU Type","text":"NVIDIA GPU (CUDA)Intel/AMD GPU (VAAPI) <ul> <li>H.264 (<code>h264_nvenc</code>) - Full hardware acceleration</li> <li>H.265/HEVC (<code>hevc_nvenc</code>) - Full hardware acceleration</li> <li>Other codecs (VP8, VP9, AV1) - Software encoding (CPU fallback)</li> </ul> <ul> <li>H.264 (<code>h264_vaapi</code>) - Full hardware acceleration</li> <li>H.265/HEVC (<code>hevc_vaapi</code>) - Full hardware acceleration</li> <li>Other codecs (VP8, VP9, AV1) - Software encoding (CPU fallback)</li> </ul> <p>Unified VAAPI Approach</p> <p>Both Intel and AMD GPUs use VAAPI (Video Acceleration API) for hardware acceleration. This simplifies the implementation and provides consistent performance across different GPU manufacturers.</p>"},{"location":"getting-started/02-installation/hardware-acceleration/#when-hardware-acceleration-is-not-used","title":"When Hardware Acceleration is NOT Used","text":"<p>Hardware acceleration will automatically fall back to CPU encoding in the following cases:</p> <ol> <li>Unsupported Video Codecs: VP8, VP9, and AV1 codecs are not supported by most GPU hardware encoders and will use CPU encoding</li> <li>Copy Video Format: When the video format is set to \"copy\" in the trailer profile, no encoding occurs</li> <li>Hardware Acceleration Disabled: When the \"Hardware Acceleration\" setting is disabled in Trailarr settings</li> <li>GPU Not Available: When no compatible GPU is detected or accessible by the container</li> <li>Hardware Encoder Failure: If the GPU encoder fails, the system automatically falls back to CPU encoding</li> </ol>"},{"location":"getting-started/02-installation/hardware-acceleration/#how-trailarr-uses-hardware-acceleration-internally","title":"How Trailarr Uses Hardware Acceleration Internally","text":""},{"location":"getting-started/02-installation/hardware-acceleration/#detection-process","title":"Detection Process","text":"<ol> <li>Container Startup: During container startup, Trailarr automatically detects available GPU hardware</li> <li>NVIDIA Detection: Uses <code>nvidia-smi</code> command to detect NVIDIA GPUs</li> <li>Intel/AMD Detection: Checks for <code>/dev/dri</code> devices and uses <code>lspci</code> to identify Intel/AMD GPUs</li> <li>Dynamic Device Mapping: Automatically maps specific GPU devices (e.g., <code>/dev/dri/renderD128</code>, <code>/dev/dri/renderD129</code>) to Intel/AMD GPUs</li> <li>Environment Variables: Sets <code>GPU_AVAILABLE_NVIDIA</code>, <code>GPU_AVAILABLE_INTEL</code>, <code>GPU_AVAILABLE_AMD</code>, and device-specific paths</li> </ol>"},{"location":"getting-started/02-installation/hardware-acceleration/#acceleration-priority","title":"Acceleration Priority","text":"<p>When multiple GPUs are available, Trailarr uses the following priority order:</p> <ol> <li>NVIDIA GPU (highest priority) - Uses CUDA hardware acceleration</li> <li>Intel/AMD GPU - Uses VAAPI hardware acceleration  </li> <li>CPU Fallback (lowest priority) - Uses software encoding</li> </ol>"},{"location":"getting-started/02-installation/hardware-acceleration/#command-examples","title":"Command Examples","text":"NVIDIA GPU (CUDA)Intel/AMD GPU (VAAPI) <pre><code>ffmpeg \\\n    -hwaccel cuda \\\n    -hwaccel_output_format cuda \\\n    -i input.mkv \\\n    -c:v h264_nvenc \\\n    -preset fast \\\n    -cq 22 \\\n    -c:a aac \\\n    -b:a 128k \\\n    output.mkv\n</code></pre> <pre><code>ffmpeg \\\n    -hwaccel vaapi \\\n    -hwaccel_device [dynamic_device_path] \\  # e.g., /dev/dri/renderD128\n    -i input.mkv \\\n    -vf format=nv12,hwupload \\\n    -c:v h264_vaapi \\\n    -crf 22 \\\n    -b:v 0 \\\n    -c:a aac \\\n    -b:a 128k \\\n    output.mkv\n</code></pre>"},{"location":"getting-started/02-installation/hardware-acceleration/#helpful-links","title":"Helpful Links","text":"<ul> <li>NVIDIA Container Toolkit Installation Guide</li> <li>Docker Compose - GPU</li> <li>Docker GPU Support</li> <li>Enable NVIDIA in WSL</li> <li>NVIDIA Blog Post</li> <li>Intel VAAPI Documentation</li> <li>Intel Media Drivers</li> <li>AMD AMF Documentation</li> <li>FFmpeg Hardware Acceleration</li> <li>Jellyfin Hardware Acceleration</li> </ul>"},{"location":"getting-started/02-installation/unraid/","title":"Unraid","text":"<p>\ud83d\udea7 Under Construction... \ud83d\udea7</p> <p>There is an Unraid template for Trailarr maintained by JPDVM2014 that you can use. It's pretty well maintained, for help with the template specifically related to Unraid, you can ask here!</p> <p>We don't have a guide for this yet! But there is a video by AlienTech42 on YouTube that explains Trailarr installation and setup on Unraid.</p> <p>Now that Trailarr is up and running, we need to configure it to connect to our <code>Radarr</code> and <code>Sonarr</code> to let it start doing it's job - download trailers. We will go over that in the next section Setup.</p>"},{"location":"getting-started/03-setup/","title":"Setup","text":"<p>Once Trailarr is installed and running, it's time to perform the initial configuration. </p> <p>This guide will walk you through the steps to set up your Trailarr instance, including changing the default login credentials and adjusting general settings. We'll also cover how to set up your media library connections in the next sections.</p> <ol> <li> <p>Access Trailarr:     Open your web browser and navigate to Trailarr. If you installed it on the same machine you're using, this will typically be http://localhost:7889 (or whichever host port you mapped during installation).</p> <p>Tip</p> <p>Use your Local IP if <code>localhost</code> doesn't work! </p> <p>Ex: http://192.168.0.15:7889</p> </li> <li> <p>Initial Login:     You will be greeted with a login screen.</p> <pre><code>Default Username: admin\nDefault Password: trailarr\n</code></pre> <p>Enter these credentials and click <code>Login</code>.</p> </li> <li> <p>Change Login Credentials: (Optional but recommended)     For security, it's highly recommended to change the default username and password immediately.</p> <p></p> <ul> <li>Navigate to <code>Settings</code> in the sidebar.</li> <li>Go to the <code>About</code> tab within Settings.</li> <li>Click the <code>Update Login</code> button.</li> <li> <p>A dialog will appear allowing you to set a new username and/or a new password.</p> <p>Tip</p> <p>You can leave the username/password blank if you only want to change one of them.</p> </li> <li> <p>Enter your desired new credentials and click <code>Save</code>. You may be logged out and asked to log in again with your new credentials.</p> </li> </ul> </li> <li> <p>Update General Settings:     After updating your login, review and adjust other application settings.</p> <ul> <li>Navigate to <code>Settings</code> in the sidebar, unless you are already in the <code>Settings</code> section.</li> <li>Go to the <code>General</code> tab.</li> <li>Here you can configure various options according to your preferences. Review each setting carefully.</li> <li>Some of the settings are auto-saved as you make selections. The settings that doesn't auto-save will show a button next to them, prompting to <code>Save</code>.</li> </ul> </li> </ol> <p>With these initial configuration steps completed, you're ready to move on to setting up Profiles and Connections.</p>"},{"location":"getting-started/03-setup/connections/","title":"Connections","text":"<p>Once your Profiles are set up to your liking, it's time to add your Radarr and Sonarr connections. This allows Trailarr to communicate with your *Arr instances, discover your media, and manage trailers.</p> <p></p> <p>Setting up a connection involves three main steps:</p>"},{"location":"getting-started/03-setup/connections/#1-connection-details","title":"1. Connection Details","text":"<ul> <li>Navigate to <code>Settings &gt; Connections</code>.</li> <li>Click on <code>Add New</code> button. </li> <li> <p>Fill in the basic details for your *Arr instance (e.g., Radarr or Sonarr):</p> <ul> <li>Name: A friendly name for this connection (e.g., \"Main Radarr\", \"4K Sonarr\", or simply \"Radarr\").   I am adding a <code>Radarr</code> connection, so I named it <code>Radarr</code></li> <li>Arr Type: Select Radarr or Sonarr.   It's already set to <code>Radarr</code> by default, so I didn't change it.</li> <li>Monitor Type: Choose which Media items Trailarr needs to monitor from this connection.</li> <li> <p>Server URL: The full URL of your *Arr instance. Eg: <code>http://192.168.0.15:6969</code></p> <p>Do NOT use <code>localhost</code></p> <p>Do not use <code>localhost</code> as there are numerous problems with that and it might not always work!</p> <p>Instead use a static IP address</p> </li> <li> <p>API Key: Your API key from Radarr/Sonarr (found in its <code>Settings &gt; General</code> section).</p> </li> <li>Once these details are filled in, the <code>Test</code> button will become available, click the button.</li> <li>Trailarr will attempt to connect to the *Arr API. Upon a successful connection:</li> <li>The Arr API version will be displayed.</li> <li>Trailarr will automatically fetch the root folders configured in that *Arr instance.</li> </ul> </li> </ul> <p>If the connection fails, an error will be shown with details, correct them and click <code>Test</code> again!</p>"},{"location":"getting-started/03-setup/connections/#2-path-mappings","title":"2. Path Mappings","text":"<p>After a successful initial test, Trailarr needs to know how to access the media files managed by this Arr instance. This is where you map the root folders reported by the Arr API to the paths where Trailarr can find them.</p> <p>Remeber the <code>Volume Mappings</code> we set during installation, we use them here!</p> <p></p> <ul> <li> <p>For each root folder retrieved from the *Arr instance, you'll see a \"Path From\" and a \"Path To\" field.</p> <ul> <li>Path From (read only): This is the root folder path as known by your *Arr instance (e.g., <code>/movies</code> or <code>/tv</code>). This field is usually read-only.</li> <li>Path To: This is where you tell Trailarr to find the contents of that \"Path From\" folder within Trailarr's own file system (i.e., inside its Docker container).</li> </ul> <p>Use the \ud83d\udcc1 icon next to the text input field for <code>Path To</code>, a dialog will open showing files and folders inside Trailarr container, navigate to the folder for the <code>Path To</code> and click <code>Confirm</code>.</p> <p>You can <code>Delete</code> a <code>Path Mapping</code> by clicking on the <code>X</code> button next to it!</p> <ul> <li>It is NOT recommended to delete them unless you know what you are doing!</li> <li>You can remove it if your <code>Path From</code> is same as <code>Path To</code>.</li> <li>You can leave them there even if <code>Path From = Path To</code>.</li> </ul> <p>We have some examples (the same ones from <code>Docker Compose</code>):</p> Examples 1 &amp; 2 - TRaSH Guides - SAME path as <code>Radarr</code>/<code>Sonarr</code> <p>If you used a <code>volume mapping</code> that is SAME as <code>Radarr</code>/<code>Sonarr</code> in <code>Trailarr</code> then <code>Path To</code> is same as <code>Path To</code>:</p> <p><pre><code>services:\n  radarr:\n    image: ghcr.io/hotio/radarr:latest\n    # Other options here\n    volumes:\n    - /docker/appdata/radarr:/config\n    - /data:/data\n    # Other options here\n  sonarr:\n    image: ghcr.io/hotio/sonarr:latest\n    # Other options here\n    volumes:\n    - /docker/appdata/sonarr:/config\n    - /data:/data\n    # Other options here\n  trailarr:\n    image: nandyalu/trailarr:latest\n    # Other options here\n    volumes:\n    - /docker/appdata/trailarr:/config\n    - /data:/data\n    # Other options here\n</code></pre> OR</p> <p><pre><code>services:\n  radarr:\n    image: ghcr.io/hotio/radarr:latest\n    # Other options here\n    volumes:\n      - /docker/appdata/radarr:/config\n      - /mnt/movies_disk/media/movies:/media/movies\n    # Other options here\n  sonarr:\n    image: ghcr.io/hotio/sonarr:latest\n    # Other options here\n    volumes:\n      - /docker/appdata/sonarr:/config\n      - /mnt/series_disk/media/tv:/media/tv\n    # Other options here\n  trailarr:\n    image: nandyalu/trailarr:latest\n    # Other options here\n    volumes:\n      - /docker/appdata/trailarr:/config\n      - /mnt/movies_disk/media/movies:/media/movies\n      - /mnt/series_disk/media/tv:/media/tv\n    # Other options here\n</code></pre> The folder dialog might already in the folder you are looking for, just press <code>Confirm</code>!</p> Example 3 - DIFFERENT path than <code>Radarr</code>/<code>Sonarr</code> <p>If you used a <code>volume mapping</code> which is DIFFERENT than what you had in <code>Radarr</code>/<code>Sonarr</code>, meaning - we changed the actual location of where the media files are present, so we need to tell <code>Trailarr</code> where to find them:</p> <pre><code># USE THIS INSTEAD\nradarr:\n  # other config\n  volumes:\n    - /mnt/disk1/media/movies:/data\nsonarr:\n  # other config\n  volumes:\n    - /mnt/disk2/media/tv:/data\ntrailarr:\n  # other config\n  volumes:\n    - /mnt/disk1/media/movies:/data/movies # &lt;-- MODIFIED\n    - /mnt/disk2/media/tv:/data/tv # &lt;-- MODIFIED\n</code></pre> <ul> <li>The root folder for <code>Radarr</code> connection is <code>/data/movies</code> or under that folder!</li> <li>The root folder for <code>Sonarr</code> connection is <code>/data/tv</code> or under that folder!</li> </ul> <p>Navigate to the folder and press <code>Confirm</code>!</p> <p>So, when Trailarr gets a Movie folder path it will use the <code>Path Mapping</code> to convert it like this</p> <pre><code>Radarr Media Path: '/data/The Matrix (1999)'\nTrailarr Media Path: '/data/movies/The Matrix (1999)'\n</code></pre> <p>Trailarr knows where to find it, so all will work as expected!</p> Example 4 - Windows users <p>We used <code>volume mappings</code> like this for <code>Trailarr</code>:</p> <pre><code>services:\n  trailarr:\n    # Other options here\n    volumes:\n      - trailarr_data:/config # Docker volume for appdata, the first part `trailarr_data` is the volume name\n      - M:\\Movies:/m/movies   # Movies drive\n      - R:\\TV:/r/tv           # TV series drive 1\n      - S:\\TV:/s/tv           # TV series drive 2\n      - T:\\TV:/t/tv           # TV series drive 3\n    restart: unless-stopped\n\nvolumes:\n  trailarr_data:  # volume name, should match the volume name in the service\n    # Any extra options for the volume if needed\n</code></pre> <ul> <li>The root folder for <code>Radarr</code> connection is <code>/m/movies</code> or under that folder!</li> <li>The root folders for <code>Sonarr</code> connection are:<ul> <li><code>/r/tv</code></li> <li><code>/s/tv</code></li> <li><code>/t/tv</code></li> </ul> </li> </ul> <p>Navigate to the appropriate folder and press <code>Confirm</code>!</p> Example 5 - Non-Docker <code>Radarr</code>/<code>Sonarr</code> <p>Since <code>Radarr</code> and <code>Sonarr</code> are Non-Docker installations, we don't have any <code>volume mappings</code> for them, so we created some, now we need to tell <code>Trailarr</code> where to find them!</p> <p>If we used something like this</p> <pre><code>services:\n  trailarr:\n    # Other options here\n    volumes:\n      - /docker/appdata/trailarr:/config # appdata\n      - /mnt/disk1/movies:/media/movies # Movies Folder\n      - /mnt/disk2/tv:/media/tv # TV Folder\n    restart: unless-stopped\n    # Other options here\n</code></pre> <ul> <li>The root folder for <code>Radarr</code> connection is <code>/media/movies</code> or under that folder!</li> <li>The root folder for <code>Sonarr</code> connection is <code>/media/tv</code> or under that folder!</li> </ul> <p>Navigate to the folder and press <code>Confirm</code>! </p> <p>So, when Trailarr gets a Movie folder path it will use the <code>Path Mapping</code> to convert it like this</p> <pre><code>Radarr Media Path: '/mnt/disk1/movies/The Matrix (1999)'\nTrailarr Media Path: '/media/movies/The Matrix (1999)'\n</code></pre> <p>Trailarr knows where to find it, so all will work as expected!</p> </li> </ul> <p>Once all Path Mappings are filled out, you should have something like below, you can move on to next step!</p> <p></p> <p>Crucially, ensure that each \"Path From\" is correctly mapped to its corresponding location in Trailarr's file system.</p> <p>Warning</p> <p><code>Volume Mappings</code> used during Installation and <code>Path Mappings</code> are connected to each other - Whenever you modify the <code>Volume Mappings</code> you need to update the relevant Connection to update the <code>Path Mappings</code> as well!</p>"},{"location":"getting-started/03-setup/connections/#3-validate-submit","title":"3. Validate &amp; Submit","text":"<ul> <li>Once you have updated the \"Path To\" for all root folders, the <code>Test</code> button will become enabled again.</li> <li>Click this button. Trailarr will now attempt to validate these path mappings by checking if it can access them.</li> <li> <p>The server will return a result indicating success or failure.</p> <p></p> </li> <li> <p>If all mappings are validated successfully, the <code>Test</code> button will change to <code>Submit</code>, click it to save the connection.</p> </li> </ul> <p>You have now successfully added an *Arr connection! Trailarr will begin to sync media information from this instance. \ud83e\udd73\ud83c\udf89</p> <p>You can repeat the same steps for other <code>Radarr</code>/<code>Sonarr</code> connections you want <code>Trailarr</code> to monitor!</p> <p>We are almost done with the seup, just read some information and tips we put together for you in Next Steps.</p>"},{"location":"getting-started/03-setup/profiles/","title":"Profiles","text":"<p>Once the basic Trailarr configuration is done, it's time to look at Profiles.</p> <p>Profiles define the settings for trailers (like quality, format, search, etc.) and include filters that determine when each profile will be applied to your media.</p> <p>For example, you might want different trailer settings for movies than for TV series, or different settings for animated movies compared to live-action ones.</p> <p><code>Profiles</code> allow you to play with different settings and filters that allow you to customize Trailarr and make it download a different language trailer for certain media, or 4K trailers for some movies, etc. So, we won't cover them here and instead just use the default Profiles for now. You can play with them later.</p> <p>More details on Profiles are under User Guide &gt; Profiles</p> <p>Trailarr comes with two default profiles to get you started:</p> <ol> <li>Movies: A pre-configured profile tailored for movies.</li> <li>Series: A pre-configured profile tailored for TV series.</li> </ol> <p></p> <p>You can:</p> <ul> <li>Use the default profiles: For many users, the default profiles will work well out-of-the-box.</li> <li>Edit the default profiles: Navigate to <code>Settings &gt; Profiles</code>, select a profile, and click on it to open it where you can customize its settings and filters.</li> <li>Create new profiles: If you have more specific needs, you can create entirely new profiles from scratch by clicking the <code>Add New</code> button in <code>Settings &gt; Profiles</code>.</li> </ul> <p>Review the default profiles and consider if they meet your needs. If not, adjust them or create new ones before proceeding to set up your connections.</p> <p>Tip</p> <p>Make sure the Profiles are enabled, disabled Profiles will not be used!</p> <p>More information regarding <code>Profiles</code> can be found in User Guides &gt; Profiles.</p> <p>You are now ready to setup Connections to Radarr/Sonarr to let Trailarr start working on your trailers.</p>"},{"location":"references/contributing/","title":"Contributing to Trailarr","text":"<p>First off, thank you for considering contributing to Trailarr. It's people like you that make Trailarr such a great tool.</p>"},{"location":"references/contributing/#getting-started","title":"Getting Started","text":"<ul> <li>Fork the repository on GitHub.</li> <li>Clone the project to your own machine.</li> <li>Open the project in Visual Studio Code.</li> <li> <p>Open <code>.devcontainer &gt; devcontainer.json</code> and uncomment / change the options as needed (especially the <code>mounts</code> section).     &gt; See devcontainer.json for more information on how to set up the devcontainer.</p> </li> <li> <p>VS Code will automatically detect the devcontainer configuration. Click on <code>Reopen in Container</code>. If not, open the command palette (Ctrl+Shift+P) and select <code>Remote-Containers: Reopen in Container</code>.</p> </li> <li>Wait for the container to build. This may take a few minutes.</li> <li>Once the container is built, you will be inside the devcontainer. It should already have all the dependencies installed.</li> <li>Commit changes to your own branch.</li> <li>Push your work back up to your fork.</li> <li>Submit a Pull Request so that we can review your changes.</li> <li>If you are working on a new feature, please create a new branch for your changes. This will make it easier for us to review your changes and merge them into the main branch. <p>NOTE: Be sure to merge the latest from \"upstream\" before making a pull request!</p> </li> </ul>"},{"location":"references/contributing/#code-of-conduct","title":"Code of Conduct","text":"<p>This project and everyone participating in it is governed by the Code of Conduct. By participating, you are expected to uphold this code.</p>"},{"location":"references/contributing/#issue-process","title":"Issue Process","text":"<p>Issues are very valuable to this project.</p> <ul> <li>Ideas are a valuable source of contributions others can make</li> <li>Problems show where this project is lacking</li> <li>With a question, you show where contributors can improve the user experience</li> </ul> <p>Thank you for creating them.</p>"},{"location":"references/contributing/#pull-request-process","title":"Pull Request Process","text":"<ul> <li>Ensure any install or build dependencies are removed before the end of the layer when doing a build.</li> <li>Update the README.md with details of changes to the interface, this includes new environment variables, exposed ports, useful file locations and container parameters.</li> <li>Increase the version numbers in any examples files and the README.md to the new version that this Pull Request would represent. The versioning scheme we use is SemVer.</li> <li>You may merge the Pull Request in once you have the sign-off of two other developers, or if you do not have permission to do that, you may request the second reviewer to merge it for you.</li> </ul>"},{"location":"references/contributing/#code-style","title":"Code Style","text":"<p>To ensure consistency throughout the source code, keep these rules in mind as you are working:</p> <ul> <li>All features or bug fixes must be tested by one or more specs (unit tests).</li> <li>Your code should follow the syntax style of the existing code (PEP-8 for Python code, formatted using black formatter, and the Angular Style Guide for Angular code).</li> </ul>"},{"location":"references/contributing/#python-backend-code-style","title":"Python / Backend Code Style","text":"<p>Python code should follow the below guidelines:</p> <ul> <li>Use black formatter for formatting the code. Formatting styles are already set up in the devcontainer.</li> <li>Follow PEP-8 for Python code style.</li> <li>Set <code>type checking</code> to <code>standard</code>.</li> <li>Do not raise generice exceptions. Use specific exceptions instead. If an appropriate exception is not already available, contact a dev and create a new one after discussing.</li> <li>When raising an exception, always include a message that describes the error. This is important for debugging and understanding what went wrong.</li> <li>Log the error message where it's caught, NOT at the source when raising the exception.</li> <li>When logging a message related to a media item, include the media item ID in square brackets. Frontend will detect this and add a link to the media details page.</li> <li>Use <code>f-strings</code> for string formatting, use <code>str.format()</code> only when you want to replace from a dictionary.</li> </ul>"},{"location":"references/contributing/#docs-preview","title":"Docs Preview","text":"<p>There is a Github action that builds docs preview and adds a comment in the PR with a link to the preview build of docs.</p>"},{"location":"references/contributing/#commit-message-guidelines","title":"Commit Message Guidelines","text":"<p>The commit message:</p> <ul> <li>is written in the imperative (e.g., \"Fix ...\", \"Add ...\")</li> <li>is kept short, while concisely explaining what the commit does.</li> <li>is clear about what part of the code is affected -- often by prefixing with the name of the subsystem and a colon, like \"express: ...\" or \"docs: ...\".</li> <li>is a complete sentence, ending with a period.</li> </ul>"},{"location":"references/contributing/#commit-signing-error","title":"Commit Signing Error","text":"<p>If you get an error like <code>gpg: signing failed: Inappropriate ioctl for device</code> while committing, you can test signing by running the following command:</p> <pre><code>echo \"This is a test message for GPG signing.\" | gpg --clearsign\n</code></pre> <p>Commit signing is not required, but it is recommended for security purposes. If you are not familiar with GPG signing, you can find more information on how to set it up here.</p> <p>It took me a while to figure out how to set it up inside devcontainer, so I thought it would be helpful to include it here.</p> <ul> <li>My development machine is an Ubuntu server, so I installed <code>gnupg2</code>, <code>gpg-agent</code>, and <code>pinentry-curses</code> using the following command:     <pre><code>sudo apt-get install gnupg2 gpg-agent pinentry-curses\n</code></pre></li> <li>I then created a new GPG key using the following command:     <pre><code>gpg --full-generate-key\n</code></pre></li> <li>I followed the prompts to create a new key, and then I added the key to my GitHub account, and follow the steps to enable commit signing in vscode. See this for more information.</li> <li>I then added the following lines to my <code>~/.bashrc</code> file:     <pre><code>export GPG_TTY=$(tty)\ngpg-connect-agent updatestartuptty /bye &gt;/dev/null\n</code></pre></li> <li>Set the following configuration:<ul> <li><code>gpg.conf</code> file which is located in <code>~/.gnupg/gpg.conf</code>: <pre><code>pinentry-mode loopback\n</code></pre></li> <li><code>gpg-agent.conf</code> file which is located in <code>~/.gnupg/gpg-agent.conf</code>: <pre><code>default-cache-ttl 360000\nmax-cache-ttl 720000\ndefault-cache-ttl-ssh 60480000\nmax-cache-ttl-ssh 60480000\nallow-loopback-pinentry\npinentry-program /usr/bin/pinentry-curses\n</code></pre> <p>I guess the cache values are not necessary if you don't want your passphrase to be cached!</p> </li> </ul> </li> <li>I then restarted the <code>gpg-agent</code> using the following command:     <pre><code>gpgconf --kill gpg-agent\n</code></pre></li> <li>devcontainer will automatically forward your GPG agent to the container, however it does not forward your GPG configuration files. So you need to mount your <code>~/.gnupg</code> folder to the container, by adding / uncommenting the following line in your <code>devcontainer.json</code> file:     <pre><code>\"mounts\": [\n    \"source=${localEnv:HOME}/.gnupg,target=/root/.gnupg,type=bind,consistency=cached\"\n]\n</code></pre></li> <li>Restart the devcontainer and you should be able to sign your commits now.</li> <li>If you are using a different operating system, you can find more information on how to set up GPG signing here.</li> <li>If you are using a different terminal, you may need to set the <code>pinentry-program</code> to the appropriate program for your terminal. For example, if you are using <code>zsh</code>, you can set it to <code>pinentry-mac</code> or <code>pinentry-gtk-2</code> depending on your setup.</li> <li>Hope this helps!</li> </ul>"},{"location":"references/contributing/#license","title":"License","text":"<p>By contributing, you agree that your contributions will be licensed under its GPL-3.0 license.</p>"},{"location":"references/legal-disclaimer/","title":"Legal Disclaimer","text":"<p>This legal disclaimer applies to the use of Trailarr, a tool designed to automate the import of Movies and TV Shows from Radarr/Sonarr into Trailarr and downloads trailers for them using yt-dlp and ffmpeg. By using Trailarr, you agree to comply with this disclaimer and all applicable laws and regulations.</p>"},{"location":"references/legal-disclaimer/#terms-of-use","title":"Terms of Use","text":"<ol> <li> <p>Compliance with Third-Party Terms of Service:    Users of Trailarr must adhere to the Terms of Service (ToS) of all third-party services utilized by the tool, including but not limited to Radarr, Sonarr, yt-dlp and ffmpeg. It is your responsibility to review and comply with these terms.</p> </li> <li> <p>Prohibited Activities:    Trailarr should not be used for any unauthorized or illegal activities, including but not limited to:</p> </li> <li> <p>Spamming or abusive behavior</p> </li> <li>Unauthorized access to third-party services</li> <li> <p>Violation of copyright or other intellectual property rights</p> </li> <li> <p>Rate Limiting and Responsible Use:    Users must use Trailarr responsibly and be mindful of rate limits set by third-party services. Excessive use that leads to rate limiting or bans is solely the responsibility of the user.</p> </li> <li> <p>User Consent and Permissions:    Ensure you have the necessary rights and permissions to import and manage media from Radarr, Sonarr and videos from YouTube. Do not import or manage media that you do not have the legal right to access or distribute.</p> </li> <li> <p>Security and API Credentials:    Protect your API credentials and never share them publicly. You are responsible for maintaining the security of your account, credentials and media.</p> </li> <li> <p>No Warranty:    Trailarr is provided \"as is\" without any warranties of any kind, either express or implied. The creators and contributors of Trailarr do not warrant that the tool will be error-free or uninterrupted.</p> </li> <li> <p>Limitation of Liability:    The creators and contributors of Trailarr shall not be liable for any direct, indirect, incidental, special, consequential, or exemplary damages resulting from the use or inability to use the tool.</p> </li> <li> <p>Indemnification:    You agree to indemnify, defend, and hold harmless the creators and contributors of Trailarr from any claims, liabilities, damages, losses, and expenses arising from your use of the tool or violation of this disclaimer.</p> </li> <li> <p>Changes to the Tool and Disclaimer:    The creators of Trailarr reserve the right to modify, suspend, or discontinue the tool at any time without notice. This disclaimer may also be updated periodically, and continued use of the tool constitutes acceptance of any changes.</p> </li> <li> <p>Governing Law:     This disclaimer shall be governed by and construed in accordance with the laws of [Your Jurisdiction], without regard to its conflict of law provisions.</p> </li> </ol>"},{"location":"references/legal-disclaimer/#attribution","title":"Attribution","text":"<p>The creators and contributors of Trailarr are not affiliated with Radarr, Sonarr, yt-dlp, ffmpeg, Plex, Emby, Jellyfin, or any other third-party services mentioned in this disclaimer. All trademarks, product names, and logos are the property of their respective owners and used for identification purposes only.</p>"},{"location":"references/legal-disclaimer/#responsibility","title":"Responsibility","text":"<p>By using Trailarr, you acknowledge that you are solely responsible for your actions while using this tool. The creators and contributors of Trailarr are not liable for any misuse, legal consequences, or damages arising from its use.</p> <p>If you do not agree with any part of this disclaimer, please refrain from using Trailarr.</p>"},{"location":"release-notes/2024/","title":"2024","text":""},{"location":"release-notes/2024/#v026-beta-december-13-2024","title":"v0.2.6-beta - December 13, 2024","text":"<p>Bug Fixes: \ud83d\udc1b</p> <ul> <li>Fixed a bug in v0.2.5 release that caused trailer download task to fail.</li> </ul> <p>Other Changes: \u26a1</p> <ul> <li>A few minor improvements in logging for trailer downloads.</li> <li>Added logging (debug only) to indicate that cookies file is used for downloading trailers.</li> </ul>"},{"location":"release-notes/2024/#v025-beta-december-13-2024","title":"v0.2.5-beta - December 13, 2024","text":"<p>Other Changes: \u26a1</p> <ul> <li>Current installed version of <code>yt-dlp</code> stopped working a few days ago, updating to the latest version!</li> <li>A few minor improvements in logging for trailer downloads.</li> <li>Updated Github Actions to create PRs for dependency upgrades.</li> </ul>"},{"location":"release-notes/2024/#v024-beta-december-06-2024","title":"v0.2.4-beta - December 06, 2024","text":"<p>What's New: \u2728</p> <ul> <li>Added an experimental setting for <code>Trailer Silence Removal</code> that will detect and remove silence at end of video. Related to #75</li> <li>Added a button to download logs in Frontend <code>Logs</code> page, and logs now displays 1000 logs instead of 100.</li> </ul> <p>Bug Fixes: \ud83d\udc1b</p> <ul> <li>Excluded words setting not updating. Fixes #76</li> <li>Remove <code>player_client</code> option in <code>yt-dlp</code> command as that can interfere with cookies when supplied.</li> <li>Fixed a bug with trailer download that is causing an exception when moving trailer to media folder. Issue posted on Reddit</li> <li>Refactored trailer download method to simplify and reduce errors. Also, when a trailer download fails, the notification will now say Error instead of 'Task Finished'. Fixes #56</li> </ul> <p>Other Changes: \u26a1</p> <ul> <li>Completely refactored trailer download to handle Exceptions and logs better.</li> <li>Added a section for <code>YouTube Cookies</code> in Docs with a recommended way to get <code>cookies.txt</code> file.</li> </ul>"},{"location":"release-notes/2024/#v023-beta-december-04-2024","title":"v0.2.3-beta - December 04, 2024","text":"<p>What's New: \u2728</p> <ul> <li>Created a Discord Server for Trailarr.</li> <li>Added an option <code>Always Search</code> which when enabled will not use the YouTube trailer id provided by Arrs and searches on YouTube. Related to #6</li> <li>Added an option <code>Search Query</code> to specify the query used to search for trailers on YouTube. Fixes #6</li> <li>Added an option <code>Trailer Volume Level</code> to increase/decrease loudness of the downloaded trailer. Fixes #41</li> <li>Added options to specify the minimun and maximum duration of the trailer to download. Fixes #59</li> <li>Added an option to specify filter words to exclude trailers with those words in the title. Related to #59</li> <li>Browser authentication can now be disabled by setting <code>WEBUI_DISABLE_AUTH=True</code> env variable in docker command. Fixes #67</li> <li>Logs layout has been updated, added a search bar and increased log size to 1MB (more logs will be displayed now).</li> </ul> <p>Bug Fixes: \ud83d\udc1b</p> <ul> <li>Added some exception handling so that when a trailer download fails, it continues with the next download. Closes #70</li> <li>Some other minor bug fixes in trailer downloads.</li> </ul> <p>Other Changes: \u26a1</p> <ul> <li>Updated some logs for trailer downloads. </li> <li>Updated the search service in Frontend so that it displays a message when no results are found.</li> <li>Upgraded npm and python packages to latest available versions. Updated node to v22, Angular to v19, FastAPI to v0.115.6.</li> <li>Created API endpoints for <code>media</code> and marked <code>movie</code> and <code>series</code> endpoints for deprecation. Updated Frontend to use <code>media</code> API.</li> <li>Filtering of media is now done in the backend and sent to browser, should improve loading times.</li> <li>Minor layout changes in Swagger UI.</li> <li>Docs updated with new settings and options.</li> </ul>"},{"location":"release-notes/2024/#v022-beta-october-21-2024","title":"v0.2.2-beta - October 21, 2024","text":"<p>What's New: \u2728</p> <ol> <li>Docker Update Check now displays a message in logs and <code>Update Available</code> in Settings &gt; About page.</li> <li>Tasks are now shown in alphabetical order in Settings &gt; Tasks page.</li> <li>App will now detect trailer files by looking for <code>trailer</code> in the filename instead of <code>-trailer.</code>. Fixes #61</li> <li>Default Browser login password can be changed in web UI under <code>Settings &gt; About &gt; Password</code>. Related to #31</li> <li>Password can be reset by setting <code>WEBUI_PASSWORD</code> ENV variable to <code>''</code> (empty) in docker command.</li> <li>Fixed a typo in <code>Settings &gt; About</code> page. Thanks to @rafapirotto for the PR #57.</li> </ol> <p>Bug Fixes: \ud83d\udc1b</p> <ol> <li>Fixed an issue with create <code>Connection</code> with <code>Path Mappings</code> raising an error. Fixes #53</li> </ol> <p>Other Changes: \u26a1</p> <ol> <li>Fixed a typo - renamed file <code>docket_check.py</code> to <code>docker_check.py</code> in <code>/backend/core/updates/</code>.</li> <li>Better handling of <code>light</code> and <code>dark</code> modes in Frontend with <code>prefers-color-scheme</code> media query.</li> <li>Updated <code>APP_VERSION</code> in Dev Container to <code>0.2.1-beta</code>.</li> <li>Updated FAQ to add <code>Trailarr not downloading specified trailer from YouTube</code>.</li> <li>Updated <code>Settings.md</code> to include instructions for getting Youtube cookies file. Fixes #62</li> <li>Web UI Password is now hashed before storing.</li> <li>Updated Docs to add instructions on how to add a Youtube cookies file.</li> <li>Created a Docker Config Tool under Docs for help with setting up Trailarr.</li> </ol>"},{"location":"release-notes/2024/#v021-beta-september-27-2024","title":"v0.2.1-beta - September 27, 2024","text":"<p>What's New: \u2728</p> <ol> <li>App will now check for updates and display a message in logs and <code>Update Available</code> in Settings &gt; About page.</li> </ol> <p>Bug Fixes: \ud83d\udc1b</p> <ol> <li>Add default <code>trailer_url</code> in <code>download_trailer</code> function to prevent errors when no trailer is found. Fixes #45</li> <li>Fixed an issue with <code>f</code> keypress not working in Frontend. Fixes #44</li> </ol> <p>Other Changes: \u26a1</p> <ol> <li>Updated Docs to indicate that changing Monitor Interval needs container restart to take effect. Fixes #43</li> <li>Updated FAQ in Docs to include information about Trailers taking longer time to download.</li> </ol>"},{"location":"release-notes/2024/#v020-beta-september-22-2024","title":"v0.2.0-beta - September 22, 2024","text":"<p>What's New: \u2728</p> <ol> <li>BREAKING CHANGE: Changed default <code>APP_DATA_DIR</code> (appdata folder) from <code>/data</code> to <code>/config</code>. You need to remap your app data folder in your docker compose / set <code>APP_DATA_DIR</code> Env variable to <code>/data</code> explicitly.</li> <li>Added sort and filtering options in Movies and Series pages. Fixes #16 </li> <li>Link to Docs page updated in About page.</li> <li>Added an option to customize trailer file name. Supports <code>title</code>, <code>year</code>, <code>resolution</code>, <code>vcodec</code> and <code>acodec</code> options.</li> <li>App now skips videos longer than 10 minutes and/or videos that contain <code>review</code> in the title. Should help #36 </li> <li>Added Browser login to Frontend. Default username is <code>admin</code> with password <code>trailarr</code>. These cannot be updated now, will add an option to update them in future update. Fixes #31 </li> <li>Renamed <code>DEBUG</code> to <code>LOG_LEVEL</code> to make it consistent with what it does.</li> <li>Adding/Updating a connection will also run the <code>Arr Data Refresh</code> task for that connection.</li> <li>App will now verify the downloaded trailer has an audio and a video stream, else mark it as failed and retry download. Also, added a task to clean up any existing trailers without audio/video, delete them and start monitoring those for downloading trailers for them in next run.</li> </ol> <p>Bug Fixes: \ud83d\udc1b</p> <ol> <li>Fixed a bug that was preventing the app from setting the right permissions to 'Trailers' folder (if enabled for either Movies/Series).</li> <li>Check downloaded trailer is the expected file and contains audio and video streams. Fixes #37 </li> <li>Fixed a bug that prevented Yt-dlp to use the cookies file even when set. Fixes #29.</li> <li>Fixed an issue with <code>Trailer Subtitle Format</code> option saving to incorrect variable. Fixes #40 </li> <li>Fixed an issue with app not able to delete trailers with <code>.webm</code> extensions.</li> <li>Fixed a bug that was removing all media items from library if path mappings are set for that connection and none of them match the media. </li> </ol> <p>Other Changes: \u26a1</p> <ol> <li>Updated Docs to include <code>Release Notes</code> and some <code>FAQ</code>s.</li> <li>App now displays logs for video conversions after download.</li> <li>Updated npm and python packages.</li> <li>Added <code>monitor status</code> arg to Media object.</li> <li>Added some functionality to always make sure path mappings end with a slash.</li> <li>Added an example in docs for Windows users.</li> </ol>"},{"location":"release-notes/2024/#v013-beta-august-29-2024","title":"v0.1.3-beta - August 29, 2024","text":"<p>What's New: \u2728</p> <ul> <li>Add option to supply YouTube cookies to use with yt-dlp. Fixes #29</li> <li>Add support for multiple languages in subtitle download settings. Fixes #25</li> </ul> <p>Bug Fixes: \ud83d\udc1b</p> <ul> <li>None</li> </ul> <p>Other Changes: \u26a1</p> <ul> <li>None</li> </ul>"},{"location":"release-notes/2024/#v012-beta-august-29-2024","title":"v0.1.2-beta - August 29, 2024","text":"<p>What's New: \u2728</p> <ul> <li>None</li> </ul> <p>Bug Fixes: \ud83d\udc1b</p> <ul> <li>FIX: wait for media fails if folder doesn't already exist. Fixes #28 and #32</li> <li>FIX: normalize filenames to remove unsupported characters. Fixes #33</li> </ul> <p>Other Changes: \u26a1</p> <ul> <li>None</li> </ul>"},{"location":"release-notes/2024/#v011-beta-august-23-2024","title":"v0.1.1-beta - August 23, 2024","text":"<p>What's New: \u2728</p> <ul> <li>Settings page layout to display settings update messages.</li> <li>Search results can now be navigated using Tab key as well as Arrow keys / mouse.</li> <li>Added Docker healthcheck command so that docker can automatically flag container as unhealthy and restart if set.</li> <li>Documentation added with Mkdocs and hosted on Github pages.</li> </ul> <p>Bug Fixes: \ud83d\udc1b</p> <ul> <li>Fixed an issue that caused App version to not show up in Settings &gt; About page.</li> <li>Updated page layout throughout website. Settings page now shows sticky settings bar.</li> </ul> <p>Other Changes: \u26a1</p> <ul> <li>Move Docker scripts into scripts folder</li> <li>Use apt-get in Dockerfile instead of apt as apt is not recommended for non-interactive.</li> <li>Docs build github action to build and deploy docs on changes.</li> </ul>"},{"location":"release-notes/2024/#v010-beta-august-19-2024","title":"v0.1.0-beta - August 19, 2024","text":"<p>What's New: \u2728</p> <ul> <li>Merged Movie and Series models in database into Media model. This will help with making Frontend changes to add filters and additional layouts for #16</li> <li>Server Stats in Settings &gt; About page now shows monitored count for Movie and Series separately.</li> <li>PathMappings have been added to Arr Connections. This lets users add path mappings for individual connections if both Radarr and Sonarr have media mapped to same folder internally. Fixes #8</li> <li>Updated Home, Movies and Series pages to display 50 recent items. Related to #16 ... will make additional changes to add filters in a future update.</li> <li>Added web manifest to let app be installed as a web app (works only if served as secure [https])</li> </ul> <p>Bug Fixes: \ud83d\udc1b</p> <ul> <li>Fixed a bug with database backups during container startup.</li> <li>Fix an issue where Media details page gets stuck in loading state when no media files are found on server for the requested media.</li> </ul> <p>Other Changes: \u26a1</p> <ul> <li>Minor updates to alembic (database migrations) configuration.</li> <li>Minor layout changes.</li> </ul>"},{"location":"release-notes/2024/#v008-beta-august-10-2024","title":"v0.0.8-beta - August 10, 2024","text":"<p>What's New: \u2728</p> <ul> <li>Default appdata folder can now be changed by setting <code>APP_DATA_DIR</code> ENV variable in docker command. If setting this make sure to use the same path in volume mapping for /data folder as well. See home for more instructions. fixes #21</li> <li>Container will now show app name as ASCII Art, along with the basic configuration.</li> <li>Database backups will be created during app startup, and if a database migration fails, database will be restored from backup and app sleeps forever to prevent restarts.</li> </ul> <p>Bug Fixes: \ud83d\udc1b</p> <ul> <li>None</li> </ul> <p>Other Changes: \u26a1</p> <ul> <li>pip requirement versions upgraded.</li> <li>Update database_url to new path, if <code>APP_DATA_DIR</code> is modified. This won't have any effect on <code>DATABASE_URI</code> if it was modified using ENV variable or directly within the app.</li> </ul>"},{"location":"release-notes/2024/#v007-beta-august-8-2024","title":"v0.0.7-beta - August 8, 2024","text":"<p>What's New: \u2728</p> <ul> <li>Added setting to wait for media to be available before downloading trailer</li> </ul> <p>Bug Fixes: \ud83d\udc1b</p> <ul> <li>None</li> </ul> <p>Other Changes: \u26a1</p> <ul> <li>None</li> </ul>"},{"location":"release-notes/2024/#v006-beta-august-7-2024","title":"v0.0.6-beta - August 7, 2024","text":"<p>What's New: \u2728</p> <ul> <li>Fixed issue with <code>PUID</code>/<code>PGID</code> when they already exist inside container, updated logic to use existing user/group if already exists. Fixes #17 and #13</li> <li>Fixed Click me link in homepage to go to <code>Settings &gt; Connections</code></li> </ul> <p>Bug Fixes: \ud83d\udc1b</p> <ul> <li>None</li> </ul> <p>Other Changes: \u26a1</p> <ul> <li>Updated CONTRIBUTING.md to add instructions for using devcontainer.</li> <li>Updated Github actions, Dockerfile and README.</li> </ul>"},{"location":"release-notes/2024/#v005-beta-august-7-2024","title":"v0.0.5-beta - August 7, 2024","text":"<p>What's New: \u2728</p> <ul> <li>Changed ffmpeg install to check OS architecture and install the correct version. Fixes #9</li> <li>Added new Setting for TESTING so that enabling debug mode does not change database to in-memory database!</li> <li>Visual improvements in Frontend!</li> </ul> <p>Bug Fixes: \ud83d\udc1b</p> <ul> <li>Updated return value on failed downloads so that app will try and download another video. Fixes issues where video is not available in the country, age restricted video, etc..</li> <li>Updated RadarrDataParser to parse movie data without youTubeTrailerId. Fixes #7</li> <li>Updated API calls from Movies page. Fixes #11</li> <li>Updated Dockerfile to create appuser with the <code>PUID</code> and <code>PGID</code> supplied while creating container. Fixes #12</li> </ul> <p>Other Changes: \u26a1</p> <ul> <li>None</li> </ul>"},{"location":"release-notes/2024/#v004-beta-august-5-2024","title":"v0.0.4-beta - August 5, 2024","text":"<p>What's New: \u2728</p> <ul> <li>None</li> </ul> <p>Bug Fixes: \ud83d\udc1b</p> <ul> <li>Do not Delete Media when *Arr Connection fails! Fixes #5</li> </ul> <p>Other Changes: \u26a1</p> <ul> <li>None</li> </ul>"},{"location":"release-notes/2024/#v003-beta-july-31-2024","title":"v0.0.3-beta - July 31, 2024","text":"<p>What's New: \u2728</p> <ul> <li>None</li> </ul> <p>Bug Fixes: \ud83d\udc1b</p> <ul> <li>None</li> </ul> <p>Other Changes: \u26a1</p> <ul> <li>First Release - <code>v0.0.3-beta</code> with minor changes to publish docker image with <code>latest</code> tag.</li> </ul>"},{"location":"release-notes/2024/#v002-beta-july-31-2024","title":"v0.0.2-beta - July 31, 2024","text":"<p>First Release! \ud83c\udf89</p>"},{"location":"release-notes/2025/","title":"2025","text":""},{"location":"release-notes/2025/#v044-beta-tbd","title":"v0.4.4-beta - TBD","text":"<p>What's New: \u2728</p> <ul> <li>Added comprehensive Intel and AMD GPU hardware acceleration support using VAAPI (Video Acceleration API). Extends existing NVIDIA GPU support to provide hardware-accelerated video encoding for modern Intel and AMD GPUs. \ud83d\ude80</li> <li>Individual GPU control settings in UI under <code>Settings</code> &gt; <code>General</code> &gt; <code>Advanced</code>. Users can now enable/disable each GPU type (NVIDIA, Intel, AMD) independently when detected. \u2699\ufe0f</li> <li>Enhanced GPU detection during container startup with dynamic device mapping (<code>/dev/dri/renderD*</code> devices automatically mapped to specific GPU vendors). \ud83d\udd0d</li> <li>Automatic user group management for GPU access - container automatically adds the app user to render, video, and GPU device groups (226, 128, 129) for optimal hardware acceleration performance. \ud83d\udc65</li> <li>Hardware acceleration priority system: NVIDIA &gt; Intel VAAPI &gt; AMD VAAPI &gt; CPU fallback, ensuring optimal performance based on available hardware. \ud83d\udcca</li> </ul> <p>Technical Improvements: \u26a1</p> <ul> <li>Updated ffmpeg installation with separate GPU driver packages to prevent build failures on unsupported architectures. Added individual error handling for each GPU driver package. \ud83d\udd27</li> <li>Enhanced container startup logging showing detected GPU hardware, device paths, and VAAPI capabilities for better troubleshooting. \ud83d\udcdd</li> <li>Added <code>udev</code> package installation for proper <code>udevadm</code> device detection functionality. \ud83d\udee0\ufe0f</li> <li>Improved VAAPI implementation with device-specific paths and proper error handling for unsupported codecs. \ud83d\udcbb</li> </ul> <p>Bug Fixes: \ud83d\udc1b</p> <ul> <li>Fixed GPU device detection to use dynamic device paths instead of hardcoded <code>/dev/dri/renderD128</code>, improving compatibility across different hardware configurations. \ud83d\udd27</li> <li>Resolved GPU driver installation issues during Docker image builds by implementing separate package installations with graceful failure handling. \ud83d\udce6</li> </ul> <p>Documentation: \ud83d\udcda</p> <ul> <li>Updated hardware acceleration documentation with comprehensive setup instructions for Intel and AMD GPUs using VAAPI. \ud83d\udcd6</li> <li>Added host system setup requirements and user group configuration instructions for optimal GPU performance. \ud83c\udfe0</li> <li>Enhanced troubleshooting guides with GPU detection commands and permission verification steps. \ud83d\udd0d</li> </ul>"},{"location":"release-notes/2025/#v043-beta-july-15-2025","title":"v0.4.3-beta - July 15 2025","text":"<p>Bug Fixes: \ud83d\udc1b</p> <ul> <li>Refactored <code>YT-DLP Download</code> and <code>FFMPEG Conversion</code> methods to use <code>subprocess.run</code> instead of <code>subprocess.popen</code> to fix deadlocks. Fixes #253. \ud83d\udcc2</li> <li>Fixed a bug that was applying <code>Audio Volume level</code> even when it is set to <code>100</code>.</li> </ul> <p>Other Changes: \u26a1</p> <ul> <li>Upgraded <code>fastapi</code> to version <code>0.116.1</code> and replaced the <code>standard</code> extra with <code>standard-no-fastapi-cloud-cli</code>.</li> <li>Updated <code>aiohttp</code> to version <code>3.12.14</code>.</li> <li>Improved logging for subprocess output in <code>YT-DLP download</code> and <code>FFMPEG conversion</code>. All logs are consolidated into a single <code>DEBUG</code> log.</li> <li>Health check endpoint used by <code>Docker</code> now looks for <code>NVIDIA GPU</code> (if enabled) once an hour!</li> </ul>"},{"location":"release-notes/2025/#v042-beta-july-15-2025","title":"v0.4.2-beta - July 15 2025","text":"<p>What's New: \u2728</p> <ul> <li>YouTube search now uses <code>1080</code> resolution as <code>2160</code> was causing some issues.</li> <li>Logs are now stored in database instead of text files. All Logs are saved to database, change filters to see them. Helps with better handling and supports tying them to media items in future.</li> <li>Logs are stored for 30 days. Old logs will be deleted as part of <code>Cleanup</code> task.</li> <li>Updated frontend <code>Logs</code> section to use logs from database along with tracebacks for errors and above.</li> </ul> <p>Bug Fixes: \ud83d\udc1b</p> <ul> <li>Fixed a bug that was reporting trailer download as failed even though download succeeded. Fixes #253. \ud83d\udcc2</li> <li>Fixed a bug with <code>FilesHandler</code> that scans for trailers.</li> <li>Fixed a bug in Media Details page that sometimes would not refresh the changes loaded from server.</li> </ul> <p>Other Changes: \u26a1</p> <ul> <li>All Scheduled Tasks are now async.</li> <li>Normalized database defaults for alembic migrations and added <code>ONDELETE</code> relationships.</li> <li><code>glightox</code> version used in devcontainer has been corrected.</li> <li>Separated SQLModel base for AppLogs and App models.</li> <li>Corrected openapi path used in Docs from generator script.</li> <li>Setup some <code>PRAGMA</code> options on database engine to make relationships work and improve performance.</li> </ul>"},{"location":"release-notes/2025/#v041-beta-july-06-2025","title":"v0.4.1-beta - July 06 2025","text":"<p>What's New: \u2728</p> <ul> <li> <p>Added extra delay between Trailer downloads to prevent account bans on new installs. New delays are as follows (along with an additional random delay of <code>0-60</code> seconds):</p> Download No Delay 1 - 9 2 mins 10 - 49 4 mins 50 - 99 6 mins 100 - 199 7 mins 200 - 499 9 mins 1000+ 10 mins </li> <li> <p>Added a <code>Refresh</code> button on Media Library pages - Gets updated Media list from server.</p> </li> <li>Media Files in Media Details page are now loaded on demand. You now have to click on the Files section to display them. Saves some IO bandwidth!</li> <li>Increased Session Timeout to 15 minutes (12 minutes + 3 minutes to extend).</li> </ul> <p>Bug Fixes: \ud83d\udc1b</p> <ul> <li>Fixed a bug that added an incorrect end slash on Windows Path Mappings. Fixes #250. \ud83d\udcc2</li> <li>Updated Default login details in Docs to change password to <code>trailarr</code>, as it was incorrectly said <code>admin</code>. Related to #248.</li> <li>Fixed a bug in Media Details page that sometimes would not refresh the changes loaded from server.</li> </ul> <p>Other Changes: \u26a1</p> <ul> <li>Added some extra details to Docs.</li> </ul>"},{"location":"release-notes/2025/#v040-beta-july-04-2025","title":"v0.4.0-beta - July 04 2025","text":"<p>What's New: \u2728</p> <ul> <li>Trailer download method has been updated to use the new download method by default. Old download method has been removed. Rewritten the other parts of download method that weren't updated in v0.3.0-beta. \ud83c\udf89</li> <li>If a trailer conversion fails, app will now try to convert it again without hardware acceleration. This will help in cases where hardware acceleration fails due to unsupported codecs or other issues. \u2728</li> <li>Trailer Profiles have been added for downloading trailers in different formats. Opening up new possibilities for downloading trailers in different formats. See Docs for more details. Fixes #79 and #218. \ud83c\udfa5</li> <li><code>Download</code> and <code>Search</code> buttons in <code>Media Details</code> now opens a dialog to select a <code>Trailer Profile</code>. \ud83d\udce5</li> <li>Video and audio formats in <code>Trailer Profiles</code> can be set to <code>copy</code> to avoid re-encoding the video and audio streams. This will speed up the download and conversion process. Use with <code>mkv</code> file format for better compatibility. Fixes #204. \ud83c\udf9e\ufe0f</li> <li>Added a new setting in <code>Profiles</code> for <code>Include Words</code> to filter for certain words to exist in the trailer title. \ud83d\udcdd</li> <li>Added <code>season_count</code> to the <code>Media</code> object to indicate the number of seasons for a series. This will help in filtering series based on the number of seasons, and can be used to download Season specific trailers for a Series (does not work yet, need more changes to make this work). \ud83d\udcfa</li> <li>Updated <code>Path Mappings</code> to get root folders on connection validation and show a selection to select a path within container if it doesn't already exist!</li> <li>Added a <code>Getting Started</code> section with detailed instructions on installing Trailarr along with <code>Volume Mappings</code> and <code>Path Mappings</code>. Various other sections in the Docs have been rewritten/updated to reflect changes in the app. \ud83d\udcda</li> </ul> <p>Bug Fixes: \ud83d\udc1b</p> <ul> <li>Fixed a bug that caused the <code>yt-dlp</code> version in <code>Settings &gt; About</code> to not show the correct version. \ud83d\udd04</li> <li>Fixed some bugs related to download method and setting media status. Fixes #177. \ud83d\udc0d</li> <li>Updated the <code>Docker Update Check</code> task to use github release tag instead of Dockerhub tags, as Dockerhub API is rate limited and causes the task to fail. \u267b\ufe0f</li> <li> <p>Fixed a bug that caused episode files with <code>trailer</code> in the filename to be detected as trailers. Fixes #235. \ud83d\udcc2     Trailarr will now only consider a file as trailer if meets the below criteria:</p> <ul> <li>The file should have <code>trailer</code> in the filename.</li> <li>The file is not an episode file (i.e., it does not have <code>SXEX</code> (X can be 0-99) in the filename).</li> <li>The file is in the <code>Media</code> folder or a subfolder that matches one of the <code>Trailer Folder Name</code> from <code>Profiles</code>.</li> <li>Fixed a bug that caused <code>Download</code> button in Media details page to not work in some cases. \u2b07\ufe0f</li> </ul> </li> </ul> <p>Other Changes: \u26a1</p> <ul> <li>Docker healthcheck has been updated to include a check for GPU availability (only if hardware acceleration is enabled). This will help detect if GPU becomes inaccesible from container. \ud83d\udda5\ufe0f     Tip: Set <code>restart</code> to <code>always</code> or <code>unless-stopped</code> in your docker-compose file to automatically restart the container becomes unhealthy. \ud83e\udeab</li> <li>Made internal changes to the <code>Angular</code> app (Web UI) to improve performance and make it more maintainable and reusable. \ud83d\ude80</li> <li>Updated Angular to v20.</li> <li>Navigating to a new page in Web UI will now reset the scroll position to the top of the page. \ud83d\udcdc</li> <li>Added a new section for <code>Trailer Profiles</code> in <code>Settings</code> to manage the trailer profiles. \ud83d\udcc2</li> <li>Trailer related settings that are configurable from <code>Trailer Profiles</code> are removed from <code>Settings &gt; Trailer</code>. \ud83c\udf9b\ufe0f</li> <li>Renamed the <code>Settings &gt; Trailer</code> to <code>Settings &gt; General</code> to better reflect the purpose of the settings. \u2699\ufe0f</li> <li>Updated various python and npm dependencies to their latest versions. \ud83d\udd04</li> <li>Swagger UI has been added to the Docs for ease of access. \ud83d\udcd6</li> </ul>"},{"location":"release-notes/2025/#v033-beta-march-28-2025","title":"v0.3.3-beta - March 28, 2025","text":"<p>What's New: \u2728</p> <ul> <li>Updated yt-dlp to latest version 2025.03.27. \ud83d\udd04</li> <li>Added option to change the default username. Fixes #160. \ud83d\udd11</li> <li>Updated internal field options so that browsers can detect them as password fields for <code>Current Password</code> and <code>New Password</code> in Password Update Dialog under <code>Settings &gt; About</code>. \ud83d\udd11</li> <li><code>Settings &gt; About</code> page will now show the current version of <code>yt-dlp</code> used by the app. \ud83d\udd0d</li> </ul> <p>Bug Fixes: \ud83d\udc1b</p> <ul> <li>Fixed an issue with <code>yt-dlp</code> not updating on restart even if <code>Update Yt-dlp</code> is enabled. \ud83d\udd04</li> <li>Fixed a bug that reset the <code>New Download Method</code> setting to <code>false</code> on restart. \ud83d\udd04</li> </ul> <p>Other Changes: \u26a1</p> <ul> <li>Updated FastAPI from 0.115.11 to 0.115.12, npm from 11.1.0 to 11.2.0, Angular from 19.2.1 to 19.2.5 and various other python and npm dependencies.</li> <li>Refactored Dockerfile to remove <code>gosu</code> package and use <code>su</code> command instead for switching to non-root user. This fixes many CVEs related to <code>gosu</code> package, improving security. \ud83d\udc33</li> <li>Moved scripts inside docker image from <code>/app</code> to <code>/app/scripts</code> to avoid conflicts with app files. \ud83d\uddc2\ufe0f</li> </ul>"},{"location":"release-notes/2025/#v032-beta-march-09-2025","title":"v0.3.2-beta - March 09, 2025","text":"<p>What's New: \u2728</p> <ul> <li>Trailer filenames now support titles with non-ASCII characters. Restricted characters are <code>&lt;&gt;:\"/\\\\|?*\\x00-\\x1F</code>. Fixes #106, #141 \ud83c\udf0d</li> <li>Additional options added to use in <code>Youtube Search Query</code> and <code>Trailer Filename</code> fields. See Docs for available options. Fixes #119 \ud83d\udcdd</li> <li>Added Custom Filters to <code>Home</code>, <code>Movies</code> and <code>Series</code> pages. \ud83d\udcca</li> <li>Added a delay (between 100 - 150 seconds randomly) between trailer downloads to avoid rate limiting from YouTube. Fixes #139 \ud83d\udd52</li> </ul> <p>Bug Fixes: \ud83d\udc1b</p> <ul> <li>Fixed a bug that deletes all media items in database when Arr Data Refresh task fails to get data from an arr API. \ud83d\udc0d</li> <li>Fixed a bug related to sorting with date values in <code>Home</code>, <code>Movies</code> and <code>Series</code> pages. \ud83d\udcc5</li> <li>Fixed some bugs related to data refresh for keeping Frontend and Backend in sync. \ud83d\udd04</li> <li>Fixed a bug related to <code>URL_BASE</code> setting not getting updated in the frontend. \ud83c\udf10</li> <li>Added a check to verify downloaded trailer duration is within specified limits. Fixes #128 \ud83d\udd70\ufe0f</li> </ul> <p>Other Changes: \u26a1</p> <ul> <li>Added extra attributes to the <code>Media</code> object for <code>clean_title</code>, <code>studio</code>, <code>title_slug</code>, <code>media_exists</code>, <code>media_filename</code>. \ud83d\udcdd</li> <li>Some routes and components are now lazy-loaded to improve performance. \ud83d\ude80</li> <li>Upgraded Angular from 19.1.4 to 19.2.1, FastAPI from 0.115.7 to 0.115.11 and various other python and npm dependencies. \ud83d\udd04</li> <li>Updated Docs for <code>Youtube Search Query</code> and <code>Trailer Filename</code> fields, added a note regarding use of YouTube cookies for new installations. \ud83d\udcdd</li> </ul>"},{"location":"release-notes/2025/#v031-beta-february-08-2025","title":"v0.3.1-beta - February 08, 2025","text":"<p>Bug Fixes: \ud83d\udc1b</p> <ul> <li>Fixed a bug that deletes all media items in database when Arr Data Refresh task fails to get data from an arr API. \ud83d\udc0d</li> </ul>"},{"location":"release-notes/2025/#v030-beta-february-06-2025","title":"v0.3.0-beta - February 06, 2025","text":"<p>What's New: \u2728</p> <ul> <li>Added support for Hardware Acceleration using NVIDIA GPUs. See Docs on how to enable! \ud83d\ude80</li> <li>Completely rewritten the trailer download and conversion process for better performance and reliability. Can be enabled in <code>Settings &gt; Experimental &gt; New Download Method</code> \ud83d\udd04</li> <li>Added batch edit in <code>Movies</code> and <code>Series</code> pages to quickly edit multiple items at once. Available options: Monitoring, Download, Delete \ud83d\udce6</li> <li>Added option for <code>Auto Search</code> \ud83d\udd0d trailer in <code>Media Details</code> page, along with a <code>Save</code> \ud83d\udcbe option to save the updated trailer id without downloading. \ud83d\udd75\ufe0f</li> <li>Clicking on a file in <code>Files</code> section will now show options to \u25b6\ufe0f <code>Play</code>, \u2139\ufe0f <code>Video Info</code>, \ud83d\uddd1\ufe0f <code>Delete</code> and \u270f\ufe0f <code>Rename</code> the file. \ud83d\udcc1</li> <li>Added a task to scan all root folders for trailers. \ud83d\udd0d</li> <li>Trailer download status will be updated as they progress, instead of all at once in <code>Download Monitored Trailers</code> task. \ud83d\udd04</li> <li><code>av1</code> conversion has been disabled. If <code>av1</code> is selected, app will try to download in <code>av1</code> directly if available, else fallback to <code>vp9</code>. \ud83d\udeab</li> <li><code>pgs</code> subtitles are no longer supported. \ud83d\udeab</li> <li><code>Remove SponsorBlock</code> option has been removed. Use <code>Remove Silence</code> instead \ud83d\udeab</li> <li>Added a new setting <code>Update Yt-dlp</code> to update yt-dlp to the latest available version during container startup when enabled. \ud83d\udd04</li> <li>Added an experimental option to set <code>URL Base</code> for use with reverse proxies. \ud83d\udd04</li> </ul> <p>Bug Fixes: \ud83d\udc1b</p> <ul> <li>Tasks will be run in a different thread than the main process to avoid blocking the UI. \ud83e\uddf5</li> <li>Databse sessions will be retried if a write fails due to database being locked. \ud83d\uddc3\ufe0f</li> <li>Youtube Trailer Search will also use the cookies file if provided.</li> <li>Trailers stuck on <code>Downloading</code> status will be reset during <code>Files Scan</code> task.</li> <li>Updated the Arr URL field in Add/Edit connections to make it work with reverse proxy URLs.</li> <li>Fixed a bug that ignored the Series trailers when <code>Trailers Folder Series</code> is disabled.</li> </ul> <p>Other Changes: \u26a1</p> <ul> <li>Trailarr nightly builds are now available for testing. \ud83c\udf19</li> <li>Download trailer will show a [Debug] log for using cookies file.</li> <li>Added [Debug] logs for <code>Arr Data Refresh</code> task.</li> <li><code>Trailer Cleanup</code> task will now run once a day instead of every 6 hours.</li> <li>Updated the <code>Arr Refresh Task</code> to process media in chunks to speed up the process.</li> <li>Updated the <code>Movies</code> and <code>Series</code> pages to keep them in sync with the server.</li> <li><code>Settings &gt; About</code> page will not include the number of trailers available in media folders.</li> <li><code>Silence Removal</code> will now leave 2 extra seconds before trimming the video. \ud83c\udfb6</li> <li>Clicking on <code>API Key</code> in <code>Settings &gt; About</code> will now copy the key to clipboard. \ud83d\udccb</li> <li>App will now use <code>/app/tmp</code> instead of <code>/tmp</code> as temporary directory for downloading and converting trailers. \ud83d\udcc2</li> <li>Updated Docs for downloading trailer in a specific language.</li> <li>Added permanent invite link to Discord server.</li> <li>Updated FastAPI from 0.115.6 to 0.115.7, npm from 10.9.1 to 11.1.0, Angular from 19.0.1 to 19.1.4 and various other python and npm dependencies.</li> <li>Updated Common Issues with <code>File Access Slowness and Workaround</code> for Windows users, and <code>Cookies file not working</code>. \ud83d\udc22</li> <li>Updated various other sections in the Docs to reflect the changes in the app.</li> </ul>"},{"location":"troubleshooting/common-issues/","title":"Common Issues","text":""},{"location":"troubleshooting/common-issues/#youtube-cookies","title":"YouTube Cookies","text":"<p>If you are having issues downloading trailers due to age restrictions, bot detection, etc., you can save your YouTube cookies and set the Yt-dlp Cookies Path to cookies.txt file containing YouTube cookies. This will allow the app to use the cookies to bypass restrictions.</p> <p>YouTube rotates cookies frequently on open YouTube browser tabs as a security measure. To export cookies that will remain working with yt-dlp, you will need to export cookies in such a way that they are never rotated.</p> <p>Note</p> <p>This is a hack to bypass YouTube restrictions and it might not always work. There is nothing Trailarr can do in those situations.</p> <p>Do NOT use cookies with New Installations</p> <p>If you are just setting up Trailarr, it is recommended to not use cookies initially for downloading trailers in bulk, as that might lead to your account being flagged for suspicious activity and YouTube placing a ban on your account. Instead, try downloading trailers without cookies first and then setup cookies once the bulk downloads are complete.</p> <p>Alternatively, you can try setting up a new YouTube account and use cookies from that new account.</p>"},{"location":"troubleshooting/common-issues/#export-youtube-cookiestxt-file","title":"Export YouTube Cookies.txt file","text":"<p>The suggested way to get the cookies file is:</p> <ol> <li>Open Firefox/Chrome browser.</li> <li> <p>Install a cookies exporter extension like Chrome: Get Cookies.txt locally or Firefox: Get Cookies.txt locally or any other cookies exporter extension.</p> Extension in Incognito/Private Mode <p>You might need to open your browser extension settings and allow the extension to work in incognito/private mode.</p> </li> <li> <p>Open an incognito/private browsing window and login to Youtube.</p> </li> <li>Open a new tab and close the YouTube tab.</li> <li>Export the cookies to a file say <code>cookies.txt</code> by setting <code>Export Format</code> to <code>Netscape</code>.</li> <li>Then close the private browsing/incognito window so the session is never opened in the browser again.</li> <li>Save/Copy that cookies file to Trailarr App data folder. For example, if you mapped <code>/var/appdata/trailarr</code> to <code>/config</code> in the container, save the cookies file in <code>/var/appdata/trailarr</code> folder.</li> <li>Now open Trailarr in browser and navigate to <code>Settings &gt; Trailer</code>. Under <code>Advanced</code> settings, set <code>Yt-dlp Cookies Path</code> to <code>/config/cookies.txt</code> (if you saved the file in <code>/var/appdata/trailarr</code> folder).</li> <li>Any new trailers downloaded will use the cookies to bypass restrictions.</li> </ol> <p>See below for more info regarding youtube downloaders and cookies:</p> <ul> <li>Yt-dlp: Exporting YouTube cookies and How do I pass cookies to yt-dlp?.</li> <li>Youtube-dl: How do I pass cookies to youtube-dl?</li> </ul> <p>Warning</p> <p>Make sure to save the cookies file in a secure location and map the volume to the container. Set the path to the cookies file in <code>Yt-dlp Cookies Path</code> setting.</p>"},{"location":"troubleshooting/common-issues/#coookies-not-working","title":"Coookies not working","text":"<p>Sometimes the cookies might not work right away. You can try the following steps to troubleshoot:</p> <ol> <li>Open Trailarr container shell and check if the cookies file is accessible.</li> <li>Check the permissions of the cookies file. It should be readable and writable by the app.</li> <li> <p>Run the below command to try and download a trailer using the cookies file and watch out for any errors:</p> <p><pre><code>yt-dlp -v --cookies /config/cookies.txt YOUTUBE_URL\n</code></pre> Replace <code>YOUTUBE_URL</code> with the actual video URL. If the download works, then the cookies file is working fine.</p> </li> <li> <p>If the download fails, then the cookies file might be invalid or expired. You can try exporting the cookies again and retry the above steps.</p> </li> <li>If the download works with the above command, then restart the container and try downloading trailers again.</li> <li>If the issue still persists, you can hop on to the Discord server for further help.</li> </ol>"},{"location":"troubleshooting/common-issues/#windows-docker-desktop-users","title":"Windows Docker Desktop Users","text":""},{"location":"troubleshooting/common-issues/#known-issue-file-access-slowness-and-workaround","title":"Known Issue - File Access Slowness and Workaround","text":"<p>Windows users of Docker Desktop often experience slow read/write speeds when using volume mounts. This is a known limitation of file sharing between the Windows host and Docker containers.</p> <p>Relevant threads discussing this issue:</p> <ul> <li>File access in mounted volumes extremely slow</li> <li>Performance volume mount</li> </ul> <p>Fortunately, there is a workaround we can use to fix this by using a docker volume. This has already been covered in Example 4 in Volume Mappings.</p>"},{"location":"troubleshooting/common-issues/#copying-cookiestxt-to-the-docker-volume","title":"Copying <code>cookies.txt</code> to the Docker Volume","text":"<p>If you need to add a <code>cookies.txt</code> file (for YouTube age verification), you can copy it directly into the container's volume. Follow these steps:</p> <p>Steps to Copy <code>cookies.txt</code> to the Docker Volume</p> <ol> <li> <p>Run the Container (if not already running):    Make sure the container is running.</p> </li> <li> <p>Copy the File to the Container's Volume:    Use the <code>docker cp</code> command to copy the file from your host machine to the container's <code>/config</code> directory:    <pre><code>docker cp \"C:\\docker\\trailarr\\config\\cookies.txt\" trailarr:/config/cookies.txt\n</code></pre></p> </li> <li> <p><code>\"C:\\docker\\trailarr\\config\\cookies.txt\"</code>: Path to the file on your host machine.</p> </li> <li> <p><code>trailarr:/config/cookies.txt</code>: Destination path in the container.</p> </li> <li> <p>Verify the File Exists:    Confirm the file was copied successfully by checking the <code>/config</code> directory in the container:    <pre><code>docker exec -it trailarr ls /config\n</code></pre>    You should see <code>cookies.txt</code> listed.</p> </li> </ol> <p>Notes</p> <ul> <li>The <code>/config</code> directory inside the container is backed by the <code>trailarr_data</code> volume. Once the file is in the volume, it will persist even if you recreate the container.</li> <li>If the file path or permissions cause issues, ensure the <code>cookies.txt</code> file on your host machine is accessible and readable.</li> </ul>"},{"location":"troubleshooting/faq/","title":"FAQ","text":""},{"location":"troubleshooting/faq/#does-this-work-with-plex-emby-jellyfin","title":"Does this work with Plex, Emby, Jellyfin?","text":"<p>Yes, this works with Plex, Emby, and Jellyfin. Trailarr downloads trailers for Movies and Series, and saves them in their respective media folder. Plex, Emby, and Jellyfin can pick up these trailers and display them along with the Movie or Series.</p>"},{"location":"troubleshooting/faq/#how-can-i-watch-the-trailers","title":"How can I watch the trailers?","text":"<p>You can watch the trailers in the Movie or Series details in Plex, Emby, or Jellyfin. Trailers downloaded by Trailarr are saved in the same folder as the Movie or Series, for Plex, Emby, and Jellyfin to recognize and display them along with the Movie or Series.</p> <p>You can also watch the trailer in the Media details page by clicking on the trailer file (in Files section) and selecting <code>Play Video</code>.</p>"},{"location":"troubleshooting/faq/#can-i-use-tailarr-without-radarr-or-sonarr","title":"Can I use Tailarr without Radarr or Sonarr?","text":"<p>No, Trailarr relies on data from Radarr and Sonarr to monitor Movies and Series. You need to have Radarr and/or Sonarr setup and connected to Trailarr to download trailers.</p>"},{"location":"troubleshooting/faq/#can-i-use-trailarr-with-multiple-radarr-or-sonarr-instances","title":"Can I use Trailarr with multiple Radarr or Sonarr instances?","text":"<p>Yes, you can connect multiple Radarr and Sonarr instances to Trailarr. Trailarr will monitor Movies and Series from all connected Radarr and Sonarr instances and download trailers for them.</p>"},{"location":"troubleshooting/faq/#trailarr-is-not-downloading-trailers-for-some-movies-or-series-why","title":"Trailarr is not downloading trailers for some Movies or Series. Why?","text":"<p>Trailarr monitors the Movies and Series from connected Radarr and Sonarr instances based on the Monitor Type set. Make sure you have correct Monitor Types set for the Movies and Series you want Trailarr to download trailers for, and also have a Profile that applies to the Media item.</p> <p>More info about Monitor Types here.</p>"},{"location":"troubleshooting/faq/#trailarr-downloaded-an-incorrect-trailer-for-a-movie-or-series-how-can-i-fix-it","title":"Trailarr downloaded an incorrect trailer for a Movie or Series. How can I fix it?","text":"<p>Movies: Radarr provides a youtube trailer link for Movies that it gets from TMDB. Trailarr will attempt to download that trailer first, if that fails or not set, Trailarr downloads trailers based on the Movie title and year. If Trailarr downloaded an incorrect trailer, you can manually search on youtube and update the youtube trailer link in Movie details page in Trailarr.</p> <p>Series: Sonarr does not provide a youtube trailer link for Series. Trailarr will search for the Series trailer based on the Series title and year. If Trailarr downloaded an incorrect trailer, you can manually search on youtube and update the youtube trailer link in Series details page in Trailarr.</p> <p>Info</p> <p>Trailarr will not delete the trailer that was already downloaded. You have to manually click on <code>Delete</code> button to delete the trailer.</p>"},{"location":"troubleshooting/faq/#trailarr-not-downloading-the-specified-youtube-video-but-downloading-a-different-video-why","title":"Trailarr not downloading the specified youtube video, but downloading a different video. Why?","text":"<p>Trailarr uses yt-dlp to download youtube videos. Some videos have restrictions on downloading, and yt-dlp might not be able to download them. The solution is to supply a cookie file (<code>Yt-dlp Cookies Path</code>) in <code>Settings &gt; General</code> to download restricted videos. See Settings for more info.</p>"},{"location":"troubleshooting/faq/#can-i-download-multiple-trailers-for-a-movie-or-series","title":"Can I download multiple trailers for a Movie or Series?","text":"<p>Trailarr will not download multiple trailers for same Movie or Series automatically. You can manually update the youtube trailer link and click <code>Download</code> to download another trailer. Trailarr will download and save the new trailer in the Movie or Series folder along with the old trailer.</p>"},{"location":"troubleshooting/faq/#app-is-stuck-on-downloading-status-for-a-long-time-what-should-i-do","title":"App is stuck on \"Downloading\" status for a long time. What should I do?","text":"<p>Trailarr downloads the best available video in the selected resolution, and then use ffmpeg to convert to selected audio and video codecs. This process can take some time based on the video size and your server hardware. </p> <p>The amount of time it takes to convert a 3 minute video usually takes around 1-2 minutes on latest hardware (like i3-12100 or Ryzen 5 5600X). </p> <p>If you are using a Raspberry Pi or a low powered server, it might take longer to convert the video. You can check the (debug) logs to see the progress of the conversion process.</p> <p>Info</p> <p>YouTube trailers are usually in <code>vp9</code> video codec and <code>opus</code> audio codec, so setting theses codecs in Trailarr settings will prevent conversion. Most modern players support these codecs, so you can use these codecs in Trailarr settings to speed up the process.</p>"},{"location":"user-guide/","title":"User Guide","text":"<p>Welcome to the Trailarr User Guide!</p> <p>This guide will help you understand the different features and functionalities available in the Trailarr user interface.</p> <p>Here's an overview of what you'll find:</p> <ul> <li> <p>Library: Discover and manage your media. This section covers:</p> <ul> <li>Home: Shows a list of Media items (both Movies and Shows) with downloaded trailers.</li> <li>Movies: Shows a list of Movies from all Radarr connections.</li> <li>Series: Shows a list of Series (TV Shows) from all Sonarr connections.</li> <li>Media Details: In-depth information about individual movies or series.</li> </ul> </li> <li> <p>Tasks: View and manage scheduled tasks and the current task queue.</p> </li> <li>Logs: Check recent application logs for monitoring and troubleshooting.</li> <li>Settings: Configure Trailarr to your liking.<ul> <li>General Settings: Basic application settings.</li> <li>Connections: Manage your connections to services like Radarr and Sonarr.</li> <li>Profiles: Define profiles for trailer downloading and processing.</li> <li>About: Information about your Trailarr installation and statistics.</li> </ul> </li> </ul> <p>Navigate to the respective pages to learn more about each section and its available options.</p>"},{"location":"user-guide/general/","title":"General","text":"<p>This page explains some of the generic options that are available in the Trailarr UI</p>"},{"location":"user-guide/general/#documentation-search","title":"Documentation Search","text":"<p>If you are looking for something, but not sure where to look in the documentation... Search is your friend! You can search with keywords.</p>"},{"location":"user-guide/general/#search-media-ctrl-f","title":"Search Media (<code>Ctrl + F</code>)","text":"<p>You can use the search bar at the top to search for any Media item in the Trailarr Library and open it to see it's details.</p> <p>Search functionality is available on all pages. Search is not case-sensitive meaning <code>The Matrix</code> and <code>the matrix</code> will return same results!</p> <p>You can also use Keyboard Shortcut <code>Ctrl + F</code> to trigger search. If you want to use browser search, press <code>Ctrl + F</code> again!</p>"},{"location":"user-guide/general/#light-dark-theme","title":"Light / Dark Theme","text":"<p>Trailarr is available in both Light and Dark themes.</p> <p>System theme selection will be used to set the theme on statup, you can change it using the toggle at the top</p> <p>Mobile - Rotate your sceen to see the toggle</p> <p>On Mobile screens, rotate the screen to Landscape mode to see the Theme toggle!</p> <p>Selection will be saved in browser</p> <p>Once you change the theme, your browser will remember the selection for next time.</p>"},{"location":"user-guide/library/","title":"Library","text":"<p>The Library section in Trailarr is your central hub for browsing and managing your media collection.</p> <p></p> <p>It's comprised of three main views:</p> <ul> <li>Home: Media items with downloaded trailers (URL: '/home')</li> <li>Movies: Movies from all Radarr Connections (URL: '/movies')</li> <li>Series: Series from all Sonarr Connections (URL: '/series')</li> </ul> <p>Scroll to display more items</p> <p>Library displays 50 Media items at a time until it displays them all. More items will be displayed as you reach the end.</p> <p>Library views offer some features for managing media items. They are described below:</p>"},{"location":"user-guide/library/#media-details","title":"Media Details","text":"<p>Clicking on any Media item will open it's details page. See Media Details for more info.</p>"},{"location":"user-guide/library/#sorting","title":"Sorting","text":"<p>Media items in the view can be sorted using the following options:</p> <ul> <li>Title</li> <li>Year</li> <li>Added</li> <li>Updated</li> </ul> <p>You can select the same sort option again to switch between Ascending and Descending!</p>"},{"location":"user-guide/library/#filtering","title":"Filtering","text":"<p>Media items in the view can be filtered using the following options:</p> <ul> <li>All: No filter applied</li> <li>Downloaded: Trailer downloaded</li> <li>Downloading: Trailer downloading</li> <li>Missing: Trailer missing (also includes monitored items)</li> <li>Monitored: Monitored for trailer download</li> <li>Unmonitored: Trailer missing (does not include monitored items)</li> </ul> <p>Tip</p> <p>There is also an option to add a custom filter to fit your needs. These are same as <code>Filters</code> used in <code>Profiles</code> (infact they use the same mechanism underneath). For more information see Filters.</p> <p></p> <p>The filters on the Home page are slightly different as it only contains media with downloaded items.</p> <ul> <li>All: No filter applied</li> <li>Movies: Movies only</li> <li>Series: Series only</li> </ul> <p>Custom filters are also supported here!</p> <p>When you make a selection for a <code>sort</code> or <code>filter</code> option, browser will remember and apply that next time.</p>"},{"location":"user-guide/library/#edit-view","title":"Edit View","text":"<p>Click on the <code>Edit</code> button in the top bar to enable edit view where you can perform some batch operations.</p> <p></p>"},{"location":"user-guide/library/#monitor","title":"Monitor","text":"<p>This will enable Monitoring of the selected Media items.</p> <p>However, this will have no effect on items:</p> <ul> <li>already monitored.</li> <li>has a downloaded trailer.</li> </ul>"},{"location":"user-guide/library/#unmonitor","title":"UnMonitor","text":"<p>This will disable Monitoring of the selected Media items. </p> <p>However, this will have no effect on items:</p> <ul> <li>already unmonitored.</li> </ul>"},{"location":"user-guide/library/#download","title":"Download","text":"<p>This can be used to batch download trailers. Selecting this will open up a dialog asking you to choose a Profile to use for downloading.</p> <p></p> <p>Make a selection and click 'Confirm' to start a background task to download all the trailers for selected Media items.</p> <p>However, this will have no effect on items:</p> <ul> <li>with Non-Existing Media folder</li> <li>has a downloaded trailer</li> <li>media not yet downloaded (if <code>Wait for Media</code> is enabled)</li> </ul>"},{"location":"user-guide/library/#delete","title":"Delete","text":"<p>This will Delete the downloaded trailer file (if it exists).</p>"},{"location":"user-guide/library/#cancel","title":"Cancel","text":"<p>Cancel the Batch Edit and go back to Normal View.</p>"},{"location":"user-guide/library/#select-all","title":"Select All","text":"<p>Selects all items that are in the view based on selected filter before opening Edit View.</p>"},{"location":"user-guide/library/#clear-selections","title":"Clear Selections","text":"<p>Clears all selections.</p>"},{"location":"user-guide/library/media-details/","title":"Media Details","text":"<p>Media Details of an item will be opened in Trailarr UI under URL '/media/{id}' where <code>{id}</code> is the media ID in Trailarr.</p> <p></p> <p>Media Details view offers some features for managing media items. They are described below:</p>"},{"location":"user-guide/library/media-details/#monitor-unmonitor","title":"Monitor / UnMonitor","text":"<p>If a trailer hasn't been downloaded for Media, it can be either Monitored or UnMonitored by clicking the icon before the Media Title.</p>"},{"location":"user-guide/library/media-details/#status-additional-details","title":"Status - Additional Details","text":"<p>Additional Media Status details can be viewed by hovering (click on it in Mobile) on <code>Status</code> field.</p> <p>Season Count for TV Show</p> <p>This will also show a <code>Season Count</code> of the selected Media if it's a TV Show. This is coming from <code>Sonarr</code> and <code>Trailarr</code> can only read it, cannot update it!</p>"},{"location":"user-guide/library/media-details/#youtube-trailer-id","title":"YouTube Trailer ID","text":"<p>This is the YouTube video ID present in Trailarr for this Media item, and can be updated here!</p> <p>This usually comes from <code>Radarr</code> for Movies, however <code>Sonarr</code> does not contain any such value so this will initially be empty for <code>TV Shows</code>.</p>"},{"location":"user-guide/library/media-details/#save-youtube-id","title":"Save YouTube ID","text":"<p>A save button will appear if <code>YouTube Trailer ID</code> value has changed, prompting you to save.</p> <p>Save will only save the <code>YouTube Trailer ID</code> in Trailarr, does not download trailer automatically!</p>"},{"location":"user-guide/library/media-details/#search-youtube-id","title":"Search YouTube ID","text":"<p>A search button will appear if <code>YouTube Trailer ID</code> is not available for the <code>Media</code> in Trailarr.</p> <p>This can be used to let Trailarr search for a trailer for the <code>Media</code> by selecting a <code>Profile</code>.</p>"},{"location":"user-guide/library/media-details/#action-buttons","title":"Action Buttons","text":"<p>There are 3 actions buttons that can appear depending on the selected Media</p>"},{"location":"user-guide/library/media-details/#watch","title":"Watch","text":"<ul> <li>Appears when the selected Media has a YouTube Trailer ID set.</li> <li>Will open the video in YouTube in a new tab when clicked.</li> </ul>"},{"location":"user-guide/library/media-details/#download","title":"Download","text":"<ul> <li>Appears when a trailer is not downloaded for the selected Media OR when a new video ID/URL is added in the <code>YouTube Trailer ID</code> field.</li> <li>Clicking on this will open a dialog asking you to select a Profile to use for download.</li> <li>This will schedule a task for Trailarr to download a trailer for this Media, uses <code>YouTube Trailer ID</code> if provided/existing.</li> </ul>"},{"location":"user-guide/library/media-details/#delete","title":"Delete","text":"<ul> <li>Appears when the selected Media has a downloaded trailer.</li> <li>Deletes the trailer file.</li> <li>Asks for a confirmation before Deleting.</li> </ul> <p>Warning</p> <p>This will Delete the trailer file on disk! Cannot be reversed!</p>"},{"location":"user-guide/library/media-details/#files-section","title":"Files Section","text":"<p>Media Files are not loaded by default, as Trailarr needs to read the files every time - which increases file operations. Just click on the section to open them!</p> <p></p> <p>The files and folders available in the media folder will be displayed here, starting with the Media folder itself!</p> <p>Click on a folder to reveal it's files.</p> <p>If you don't see your actual Media files here, that means you need to update either your Volume Mappings or Path Mappings.</p> <p>Clicking on a file will open a dialog with some actions available that can be performed on the file:</p> <p></p>"},{"location":"user-guide/library/media-details/#play-video","title":"Play Video","text":"<ul> <li>Video files only!</li> </ul> <p>Plays the selected video in a dialog. Click outside the dialog to close video!</p>"},{"location":"user-guide/library/media-details/#video-info","title":"Video Info","text":"<ul> <li>Video files only!</li> </ul> <p>Reads and displays the details of the video file such as file, video, audio and subtitle formats along with language and some other relevant information.</p>"},{"location":"user-guide/library/media-details/#view-text","title":"View Text","text":"<ul> <li>Text and some subtitle files only!</li> </ul> <p>Displays the content of the text file!</p>"},{"location":"user-guide/library/media-details/#rename","title":"Rename","text":"<p>Renames the selected file with the given file name!</p>"},{"location":"user-guide/library/media-details/#delete_1","title":"Delete","text":"<p>Deletes the selected file upon confirmation.</p> <p>Warning</p> <p>This will Delete the trailer file on disk! Cannot be reversed!</p>"},{"location":"user-guide/logs/","title":"Logs","text":"<p>This page displays the <code>Trailarr</code> application logs. </p> <ul> <li> <p>You can filter them using the <code>Logs Type</code> dropdown and text field at the top.     !!! tip \"Logs Type\"         Selecting a Logs Type shows all logs for selected type and above.</p> <pre><code>Log Types are as following (lowest to highest):\n\n- Trace\n- Debug\n- Info\n- Warning\n- Error\n- Exception\n- Critical\n\nFor example, if you select `Info`, then all logs of types `Info`, `Warning`, `Error`, `Exception` and `Critical` are shown.\n</code></pre> </li> <li> <p>Refresh button will fetch new logs from server.</p> </li> <li>Download button will download the logs file to your computer.</li> <li>Logs are shown in Descending order - most recent logs are shown first!</li> </ul> <p>Enable Debug Logging for Detailed Troubleshooting</p> <p>When actively trying to diagnose a complex issue, temporarily setting the application's Log Level to <code>Debug</code> in the General Settings can provide much more detailed operational information. Remember to set it back to a less verbose level (like <code>Info</code> or <code>Warning</code>) afterwards to prevent excessive log file growth and performance impact.</p>"},{"location":"user-guide/settings/","title":"Settings","text":"<p>Trailarr's Settings page lets you configure the app to fit your needs. It is organized into four sections:</p> <ul> <li>General: Set app-wide preferences and basic options.</li> <li>Connections: Manage Radarr/Sonarr server connections.</li> <li>Profiles: Create and edit trailer download profiles and filters.</li> <li>About: View app information, statistics and support links.</li> </ul>"},{"location":"user-guide/settings/about/","title":"About Trailarr Settings","text":"<p>The About page in Trailarr provides a comprehensive overview of your application instance and key statistics. Here\u2019s what you\u2019ll find on this page:</p>"},{"location":"user-guide/settings/about/#application-information","title":"Application Information","text":"<ul> <li>Version: Displays the current Trailarr version and notifies you if an update is available, with a link to the Docker Hub page.</li> <li>Yt-dlp Version: Displays the version of yt-dlp installed in Trailarr and notifies you if an update is available, with a link to the PyPI page.</li> <li>API Key: Trailarr API key. Clicking on this will copy the API Key to your clipboard.</li> <li>Appdata Folder: The path to the application\u2019s data directory.</li> <li>Server Started: Shows when the server was started (with timeago formatting).</li> <li>Timezone: The server\u2019s configured timezone.</li> </ul>"},{"location":"user-guide/settings/about/#statistics","title":"Statistics","text":"<ul> <li>Movies / Series: Total number of movies and series managed.</li> <li>Movies Monitored / Series Monitored: Number of monitored movies and series.</li> <li>Trailers Downloaded / Detected: Number of trailers downloaded and detected by Trailarr.</li> </ul>"},{"location":"user-guide/settings/about/#login-credentials","title":"Login Credentials","text":"<ul> <li>Update Login: Securely update your web UI username and password using the dialog. You\u2019ll need your current password to make changes.</li> </ul> <p>If you only want to update <code>password</code>, fill the <code>New Password</code> leave the <code>New Username</code> empty!</p>"},{"location":"user-guide/settings/about/#getting-support","title":"Getting Support","text":"<ul> <li>Documentation: Link to the official documentation.</li> <li>Discord: Link to join the Trailarr Discord community.</li> <li>GitHub: View the source code or report issues.</li> <li>Reddit: Join the Trailarr subreddit for discussions and help.</li> </ul>"},{"location":"user-guide/settings/connections/","title":"Connections","text":""},{"location":"user-guide/settings/connections/#edit-connection-fields","title":"Edit Connection Fields","text":"<ul> <li>Name: A unique name for your connection (min. 3 characters).</li> <li>Arr Type: Select either Radarr or Sonarr.</li> <li>Monitor Type: Choose how trailers are monitored/downloaded (see below).</li> <li>Server URL: The full URL to your Radarr/Sonarr server (e.g., http://192.168.0.15:7878).</li> <li>API Key: The API key from your Radarr/Sonarr server settings.</li> <li>Path Mappings: Map Radarr/Sonarr internal paths to Trailarr paths for correct file access.</li> </ul>"},{"location":"user-guide/settings/connections/#monitor-types","title":"Monitor Types","text":""},{"location":"user-guide/settings/connections/#missing","title":"<code>Missing</code>","text":"<p>Monitors and downloads trailers for movies/series without a trailer.</p>"},{"location":"user-guide/settings/connections/#new","title":"<code>New</code>","text":"<p>Only Monitors and download trailers for movies/series that gets added after the change.</p>"},{"location":"user-guide/settings/connections/#sync","title":"<code>Sync</code>","text":"<p>Monitors and downloads trailers for movie/series that are monitored in Radarr/Sonarr.</p>"},{"location":"user-guide/settings/connections/#none","title":"<code>None</code>","text":"<p>Turns off monitoring for the connection and does not download any trailers.</p> <p>Tip</p> <p>If you have a huge library and don't want to download trailers for all of them, set the monitor type to <code>None</code> when adding a Radarr/Sonarr Connection. Wait for an hour or so to let the app sync all media from that connection, and change it to <code>New</code> to download trailers for new media. You can always manually set the monitor type for the movies/series you want to download trailers for.</p>"},{"location":"user-guide/settings/general-settings/","title":"Trailarr Settings","text":"<p>There are several settings that you can use to customize the behavior of Trailarr app. These settings can be set by opening the app in browser http://localhost:7889/settings and navigating to <code>Settings &gt; General</code> page.</p>"},{"location":"user-guide/settings/general-settings/#general-settings","title":"General Settings","text":""},{"location":"user-guide/settings/general-settings/#monitor-trailers","title":"Monitor Trailers","text":"<ul> <li>Default is <code>true</code></li> </ul> <p>Enable this setting to monitor trailers for connections. When enabled, the app will automatically download trailers for media in Radarr and Sonarr.</p> <p>Note</p> <p>Disabling this will disable monitoring of media for all connections.</p>"},{"location":"user-guide/settings/general-settings/#monitor-interval","title":"Monitor Interval","text":"<ul> <li>Default is <code>60</code> minutes. Minimum is <code>10</code> minutes`. </li> </ul> <p>Frequency (in minutes) to check for new media in Radarr/Sonarr.</p> <p>Info</p> <p>Changing this setting will require a restart of the app (container) to take effect.</p>"},{"location":"user-guide/settings/general-settings/#file-settings","title":"File Settings","text":""},{"location":"user-guide/settings/general-settings/#wait-for-media","title":"Wait For Media","text":"<ul> <li>Default is <code>false</code></li> </ul> <p>Enable this setting to wait for media to be downloaded before downloading trailers.</p>"},{"location":"user-guide/settings/general-settings/#advanced-settings","title":"Advanced Settings","text":"<p>These are advanced settings, if you don't know what they do, do not modify them!</p>"},{"location":"user-guide/settings/general-settings/#log-level","title":"Log Level","text":"<ul> <li>Default is <code>Info</code></li> </ul> <p>Select the logging level for the app logs to display in it's console. Available options are <code>Debug</code>, <code>Info</code>, <code>Warning</code>, <code>Error</code>.</p> <p>Console logs only</p> <p>Trailarr logs all logs in it's database (starting from <code>v0.4.3</code>), setting this will change what logs are reported by container to Docker.</p> Info <p>If you are having issues and need to troubleshoot or request help, set the log level to <code>Debug</code> to get more detailed logs.</p>"},{"location":"user-guide/settings/general-settings/#yt-dlp-cookies-path","title":"Yt-dlp Cookies Path","text":"<ul> <li>Default is <code>None</code></li> </ul> <p>If you are having issues downloading trailers due to age restrictions, bot detection, etc., you can set the path to a file containing YouTube cookies. This will allow the app to use the cookies to bypass restrictions.</p> <p>See Export YouTube Cookies.txt file for more info.</p> <p>Tip</p> <p>Use the <code>\ud83d\udcc1</code> (folder) icon to open a dialog that shows the container folders and files. Navigate to your <code>cookies.txt</code> file and confirm.</p> <p>Warning</p> <p>Make sure to save the cookies file in a secure location and map the volume to the container. Set the path to the file in this setting.</p> <p>Do NOT use cookies with New Installations</p> <p>If you are just setting up Trailarr, it is recommended to not use cookies initially for downloading trailers in bulk, as that might lead to your account being flagged for suspicious activity and YouTube placing a ban on your account. Instead, try downloading trailers without cookies first and then setup cookies once the bulk downloads are complete.</p> <p>Alternatively, you can try setting up a new YouTube account and use cookies from that new account.</p>"},{"location":"user-guide/settings/general-settings/#experimental-settings","title":"Experimental Settings","text":"<p>These are experimental options, might not work as expected! You can enable them if you want to try. Please report any issues on Discord (recommended) or Github</p>"},{"location":"user-guide/settings/general-settings/#amd-gpu-acceleration","title":"AMD GPU Acceleration","text":"<ul> <li>Default is <code>true</code></li> </ul> <p>Enable this setting to use hardware acceleration for the conversion process by using the AMD GPU for encoding and decoding.</p> <p>Note</p> <p>This setting is available only if an AMD GPU is detected on the host system. For setup instructions, see Hardware Acceleration.</p>"},{"location":"user-guide/settings/general-settings/#intel-gpu-acceleration","title":"Intel GPU Acceleration","text":"<ul> <li>Default is <code>true</code></li> </ul> <p>Enable this setting to use hardware acceleration for the conversion process by using the Intel GPU for encoding and decoding.</p> <p>Note</p> <p>This setting is available only if an Intel GPU is detected on the host system. For setup instructions, see Hardware Acceleration.</p>"},{"location":"user-guide/settings/general-settings/#nvidia-gpu-acceleration","title":"NVIDIA GPU Acceleration","text":"<ul> <li>Default is <code>true</code></li> </ul> <p>Enable this setting to use hardware acceleration for the conversion process by using the NVIDIA GPU for encoding and decoding.</p> <p>Note</p> <p>This setting is available only if an NVIDIA GPU is detected on the host system. For setup instructions, see Hardware Acceleration.</p>"},{"location":"user-guide/settings/general-settings/#update-yt-dlp","title":"Update Yt-dlp","text":"<ul> <li>Default is <code>false</code></li> </ul> <p>Enable this setting to update <code>yt-dlp</code> to the latest version on every app start. This will ensure that the app uses the latest features and bug fixes.</p>"},{"location":"user-guide/settings/general-settings/#url-base","title":"URL Base","text":"<ul> <li>Default is  <code>(empty)</code></li> </ul> <p>Enter the base URL of the app for use with reverse proxies. This will allow the app to generate correct URLs when behind a reverse proxy.</p>"},{"location":"user-guide/settings/profiles/","title":"Profiles","text":"<p>Profiles allow you to define how and when trailers should be downloaded and processed in Trailarr.</p> <p>Profiles are made up of two things:</p> <ul> <li>Settings: Audio, Video, File and Search settings</li> <li>Filters: Conditions that determine when the profile should be applied to a media item.</li> </ul> <p>This might probably be too much information, you can skip to the Usage section to understand how profiles are used in Trailarr or directly to the Examples page.</p> <p>You can create different profiles for different types of media or situations. </p> <p>For example, you can create a profile for <code>movies</code> with high-quality trailers, another for <code>series</code> with specific audio settings, or a profile that only applies to <code>media</code> in a certain <code>language</code>.</p> <p>Profiles are located in the <code>Settings &gt; Profiles</code> page of the Trailarr app http://localhost:7889/settings/profiles.</p> <p>Tip</p> <p>The next sections will explain what each of the settings and filters do, how to create a profile, and how to use profiles in Trailarr.</p>"},{"location":"user-guide/settings/profiles/#view-profiles","title":"View Profiles","text":"<p>A list of existing profiles can be viewed in the <code>Profiles</code> page.</p> <p>Click on any of the profiles to view its details.</p>"},{"location":"user-guide/settings/profiles/#create-profile","title":"Create Profile","text":"<p>Clicking on the <code>Add New</code> button on the <code>Profiles</code> page will allow you to create a new profile.</p> <ul> <li>A dialog will open where you can set the profile name, filters, and settings for the profile. Don't worry, you can change these settings later.</li> <li>Once you are done, click on the <code>Create</code> button to create the profile.</li> <li>This will take you to the profile settings page where you can edit the settings for the profile.</li> </ul> <p>Not saved until you click Create</p> <p>The profile is not saved until you click the <code>Create</code> button. </p> <ul> <li>If you are trying to figure out what Filters to use, just add a Filter like <code>ID &gt; 999999</code> and then click <code>Create</code>. </li> <li>This will create a profile with just one filter which you know will never match any media, which you can then edit later.</li> </ul>"},{"location":"user-guide/settings/profiles/#edit-profiles","title":"Edit Profiles","text":"<p>To edit an existing profile, click on the relevant profile in the <code>Profiles</code> page.</p> <p>Edit Profile Name</p> <p>To edit a profile name, click on the <code>\u270f\ufe0f</code> (pencil) icon next to the profile name on the profile details page.</p> <p>Edit the JSON directly</p> <p>You can also edit the profile JSON directly by clicking on the <code>Edit JSON</code> button at the very end of the profile details page. This is useful for advanced users who want to edit the profile settings directly.</p> <p>Duplicate Profile</p> <p>You can duplicate a profile by clicking on the <code>Duplicate</code> button at the top right corner of the profile details page. This will open the Create Profile dialog, edit the name and click <code>Create</code> to create a new profile with the same settings as the original profile, which you can then edit as needed.</p>"},{"location":"user-guide/settings/profiles/#delete-profiles","title":"Delete Profiles","text":"<p>To delete a profile, open the Profile edit page and click on the <code>Delete</code> button at the top right corner.</p>"},{"location":"user-guide/settings/profiles/#usage","title":"Usage","text":"<p>Trailarr uses profiles as follows:</p> <ul> <li>When downloading a trailer from the UI. A dialog will appear allowing you to select a profile from existing profiles. Filters will not be applied in this case.</li> <li>When running the <code>Download Missing Trailers</code> task (which runs periodically). <ul> <li>If no profiles are available, the task will not run.</li> <li>Profiles with high priority will be used first.</li> <li>The task will use the first profile that matches all the filters for each media item.</li> <li>Media items that does not match any profiles will not be processed.</li> <li>Media items that matches a profile but does not have a valid Media folder or <code>monitor</code> set to <code>false</code> will not be processed.</li> </ul> </li> </ul> <p>The next sections will explain the settings and filters available in profiles. You can instead skip to the Examples page to see some examples of profiles and how they can be used.</p> <p>Trailarr is evolving</p> <p>Trailarr is still evolving and the profiles feature is still being developed. If you have any suggestions or feedback, please join our Discord server and join the discussion.</p> <p>Things that are planned for the future:</p> <ul> <li>Improve Profiles to make downloading Season specific trailers easier.</li> <li>Maybe (maybe, no promises!) let the user download Featurettes, Clips, etc. as well.</li> </ul>"},{"location":"user-guide/settings/profiles/examples/","title":"Examples","text":"<p>Trailarr automatically adds 2 Profiles when you first install it:</p> <ul> <li>Movie Trailers</li> <li>Series Trailers</li> </ul> <p>These profiles are created with the default settings and filters, and can be edited or deleted as needed. You can also create your own profiles from scratch or duplicate these profiles to create new ones.</p> <p>Let's go over these to understand how they work and also explain the Filters.</p>"},{"location":"user-guide/settings/profiles/examples/#example-1-movie-trailers-profile","title":"Example 1: Movie Trailers Profile","text":"<p>The Movie Trailers profile is used to download trailers for movies. It comes with all the default settings as defined in the Settings section, and the following filters:</p> ID Filter By Condition Filter Value 1 Is Movie Equals true 2 Trailer Exists Equals false <p>Ignore the <code>ID</code> column, it is just for reference.</p>"},{"location":"user-guide/settings/profiles/examples/#filter-1","title":"Filter 1","text":"<p>This filter checks if the media item is a movie. If the media item is a movie, the filter will match and the profile will be applied.</p>"},{"location":"user-guide/settings/profiles/examples/#filter-2","title":"Filter 2","text":"<p>This filter checks if a trailer already exists for the media item. If a trailer does not exist, the filter will match and the profile will be applied.</p>"},{"location":"user-guide/settings/profiles/examples/#result","title":"Result","text":"<p>With these filters, the Movie Trailers profile will only apply to movies that do not already have a trailer downloaded. This means that when the <code>Download Missing Trailers</code> task runs, it will only download trailers for movies that do not have a trailer already available in Trailarr.</p>"},{"location":"user-guide/settings/profiles/examples/#example-2-series-trailers-profile","title":"Example 2: Series Trailers Profile","text":"<p>The Series Trailers profile is used to download trailers for TV series. It comes with all the default settings as defined in the Settings section, and the following filters:</p> ID Filter By Condition Filter Value 1 Is Movie Equals false 2 Trailer Exists Equals false <p>Ignore the <code>ID</code> column, it is just for reference.</p> <p>One Setting that is different from the Movie Trailers profile is that the Series Trailers profile has <code>Folder Enabled</code> set to <code>true</code>. So that Series trailers are saved in a <code>Trailers</code> folder inside the Series folder.</p>"},{"location":"user-guide/settings/profiles/examples/#filter-1_1","title":"Filter 1","text":"<p>This filter checks if the media item is a series. If the media item is a series, the filter will match and the profile will be applied.</p>"},{"location":"user-guide/settings/profiles/examples/#filter-2_1","title":"Filter 2","text":"<p>This filter checks if a trailer already exists for the media item. If a trailer does not exist, the filter will match and the profile will be applied.</p>"},{"location":"user-guide/settings/profiles/examples/#result_1","title":"Result","text":"<p>With these filters, the Series Trailers profile will only apply to TV series that do not already have a trailer downloaded. This means that when the <code>Download Missing Trailers</code> task runs, it will only download trailers for TV series that do not have a trailer already available in Trailarr.</p>"},{"location":"user-guide/settings/profiles/examples/#example-3-spanish-movie-trailers-profile","title":"Example 3: Spanish Movie Trailers Profile","text":"<ul> <li>Create a profile by clicking on the <code>Add New</code> button in the <code>Profiles</code> page.</li> <li>Name the profile <code>Spanish Movie Trailers</code>.</li> <li> <p>Set the below <code>Filter</code>s:</p> ID Filter By Condition Filter Value 1 Is Movie Equals true 2 Trailer Exists Equals false 3 Language Equals Spanish </li> <li> <p>Click <code>Create</code> to create the profile.</p> </li> <li> <p>Change the following <code>Settings</code>:</p> <ul> <li>Set <code>Priority</code> to <code>1</code> which is higher than the Movie Trailers profile, so that this profile is used first for matching movies.</li> <li>Set <code>Include Words in Title</code> to <code>Espa\u00f1ol</code>.</li> <li>Set <code>Search Query</code> to <code>{title} {year} {is_movie} Tr\u00e1iler en espa\u00f1ol</code>.</li> <li>Set <code>Always Search</code> to <code>true</code>.</li> </ul> </li> </ul> <p>Make sure to save the <code>Include Words in Title</code> and <code>Search Query</code> settings by clicking the <code>\u2714</code> (tick) icon next to the settings.</p> <p>NOT a foolproof solution</p> <p>This profile is not a foolproof solution to download only Spanish trailers, as it relies on:</p> <ul> <li><code>Language</code> field in Radarr/Sonarr to be set correctly. If the language is not set to Spanish, this profile will not match.</li> <li>The <code>Include Words in Title</code> setting to match the title of the trailer. If the trailer does not have the word <code>Espa\u00f1ol</code> in its title, it will not be downloaded.</li> <li>The <code>Search Query</code> setting to return Spanish trailers. If search results does not contain any Spanish trailers, OR if there are no Spanish trailers available, this profile will not download any trailers.</li> </ul>"},{"location":"user-guide/settings/profiles/filters/","title":"Filters","text":"<p>Filters are the conditions that determine when a profile should be applied to a media item.</p> <p>Each Filter consists of 3 things:</p> <ul> <li>Filter By: The property of the media item to filter on.</li> <li>Condition: The condition to apply to the property.</li> <li>Value: The value to compare against.</li> </ul> <p>You can add multiple filters to a profile, and all filters must match for the profile to be applied to a media item.</p>"},{"location":"user-guide/settings/profiles/filters/#filter-by","title":"Filter By","text":"<p>There are 4 main categories of filters you can use:</p> <ul> <li>Boolean</li> <li>Integer</li> <li>String</li> <li>Date</li> </ul> <p>See below for the available filters in each category.</p>"},{"location":"user-guide/settings/profiles/filters/#boolean-filters","title":"Boolean Filters","text":"<p>Here are the available boolean filters:</p> Filter By Description <code>Is Movie</code> <code>true</code> if the media item is a movie, <code>false</code> for series. <code>Media Exists</code> <code>true</code> if the media (movie/series) is downloaded for the item. <code>Trailer Exists</code> <code>true</code> if a trailer already exists for the media item. <code>Monitor</code> <code>true</code> if the media item is monitored in Trailarr. <code>ARR Monitored</code> <code>true</code> if the media item is monitored in the ARR application (e.g., Radarr, Sonarr)."},{"location":"user-guide/settings/profiles/filters/#integer-filters","title":"Integer Filters","text":"<p>Here are the available integer filters:</p> Filter By Description <code>ID</code> ID of the media item in Trailarr. <code>ARR ID</code> ID of the media item in the ARR application (e.g., Radarr, Sonarr). <code>Connection ID</code> ID of the connection used for the media item in Trailarr. <code>Year</code> Year the media item was released. <code>Runtime</code> Runtime of the media item in minutes. <code>Season Count</code> Number of seasons for the series. If the media item is a movie, this will be <code>0</code>."},{"location":"user-guide/settings/profiles/filters/#string-filters","title":"String Filters","text":"<p>Here are the available string filters:</p> Filter By Description <code>Title</code> Title of the media. Eg: 'The Matrix' <code>Clean Title</code> Cleaned title of the media. Eg: 'thematrix' <code>Language</code> Language of the media in Radarr/Sonarr. Eg: 'English' <code>Studio</code> Studio of the media. Eg: 'Village Roadshow Pictures' <code>Media Filename</code> Filename of the media. Eg: 'the.matrix.1999.1080p.mkv' <code>YouTube Trailer ID</code> YouTube trailer ID of the media. Eg: 'dQw4w9WgXcQ' <code>Folder Path</code> Folder path of the media. Eg: '/movies/the.matrix' <code>IMDB ID</code> IMDB ID of the media. Eg: 'tt0133093' <code>TXDB ID</code> TMDB ID for Movies, TVDB ID for Series. Eg: '603' (movie) 'i-am-groot' (series) <code>Title Slug</code> Title slug of the media. Eg: 'the-matrix' <code>Status</code> Status of the media. One of [downloaded, downloading, missing, monitored]"},{"location":"user-guide/settings/profiles/filters/#date-filters","title":"Date Filters","text":"<p>Here are the available date filters:</p> Filter By Description <code>Added At</code> Date the media item was added to Trailarr. <code>Updated At</code> Date the media item was last updated in Trailarr. <code>Downloaded At</code> Date when trailer was downloaded for media item."},{"location":"user-guide/settings/profiles/filters/#conditions","title":"Conditions","text":"<p>The conditions determine how the value is compared against the property. The available conditions depend on the type of filter:</p>"},{"location":"user-guide/settings/profiles/filters/#boolean-conditions","title":"Boolean Conditions","text":"Condition Description <code>EQUALS</code> The property must equal the specified value."},{"location":"user-guide/settings/profiles/filters/#integer-conditions","title":"Integer Conditions","text":"Condition Description <code>EQUALS</code> The property must equal the specified value. <code>NOT EQUALS</code> The property must not equal the specified value. <code>GREATER THAN</code> The property must be greater than the specified value. <code>GREATER THAN EQUAL</code> The property must be greater than or equal to the specified value. <code>LESS THAN</code> The property must be less than the specified value. <code>LESS THAN EQUAL</code> The property must be less than or equal to the specified value."},{"location":"user-guide/settings/profiles/filters/#string-conditions","title":"String Conditions","text":"Condition Description <code>EQUALS</code> The property must equal the specified value. <code>NOT EQUALS</code> The property must not equal the specified value. <code>CONTAINS</code> The property must contain the specified value. <code>NOT CONTAINS</code> The property must not contain the specified value. <code>STARTS WITH</code> The property must start with the specified value. <code>NOT STARTS WITH</code> The property must not start with the specified value. <code>ENDS WITH</code> The property must end with the specified value. <code>NOT ENDS WITH</code> The property must not end with the specified value. <code>IS EMPTY</code> The property must be empty. <code>IS NOT EMPTY</code> The property must not be empty."},{"location":"user-guide/settings/profiles/filters/#date-conditions","title":"Date Conditions","text":"Condition Description <code>EQUALS</code> The property must equal the specified date. <code>NOT EQUALS</code> The property must not equal the specified date. <code>IS AFTER</code> The property must be after the specified date. <code>IS BEFORE</code> The property must be before the specified date. <code>IN THE LAST</code> The property must be within the last specified time period. <code>NOT IN THE LAST</code> The property must not be within the last specified time period."},{"location":"user-guide/settings/profiles/filters/#filter-values","title":"Filter Values","text":"<p>The value is the value to compare against the property. The available values depend on the type of filter:</p> <ul> <li>Boolean Values: <code>true</code> or <code>false</code>.</li> <li>Integer Values: Any integer value.</li> <li>String Values: Any string value.</li> <li>Date Values: A date in the format <code>YYYY-MM-DD</code> or a number of days (e.g., <code>7</code> for the last 7 days).</li> </ul>"},{"location":"user-guide/settings/profiles/settings/audio/","title":"Audio","text":""},{"location":"user-guide/settings/profiles/settings/audio/#audio-format","title":"Audio Format","text":"Type Required Default Valid Values String Yes opus aac, ac3, eac3, flac, opus, copy <p>Select the audio format/codec of the trailers to download.</p> <p>Trailarr will try to download trailer in the selected codec if available, else it will download in available codec and then convert it to the selected codec using Ffmpeg.</p> <p>Note</p> <p>If you select <code>copy</code>, Trailarr will not convert the audio codec and will download the trailer in the best format available. Use with <code>File Format</code> as <code>mkv</code> as other formats do not support all audio codecs.</p>"},{"location":"user-guide/settings/profiles/settings/audio/#audio-volume-level","title":"Audio Volume Level","text":"Type Required Default Valid Values Integer Yes 100 1 to 200 <p>This setting allows you to set the audio volume level of the trailer files. The value is a percentage of the original volume, where 100 is the original volume, 200 is double the volume, and 50 is half the volume.</p> <p>Note</p> <p>If <code>Audio Format</code> is set to <code>copy</code>, Trailarr will try to change audio volume using downloaded audio format, might fallback to <code>opus</code>.</p>"},{"location":"user-guide/settings/profiles/settings/file/","title":"File","text":""},{"location":"user-guide/settings/profiles/settings/file/#file-format","title":"File Format","text":"Type Required Default Valid Values String Yes mkv mkv, mp4, webm <p>Desired file format of the trailer file. Available options are <code>mkv</code>, <code>mp4</code>, <code>webm</code>.</p> <p>Not all file formats support all video and audio codecs. The following tables shows the supported formats:</p> <p>Video Codecs:</p> Format h264 h265 vp8 vp9 av1 mkv mp4 webm <p>Audio Codecs:</p> Format aac ac3 eac3 flac opus mkv mp4 webm <p>Please make sure to select a file format that supports the video and audio codecs you want to use.</p> <p>Info</p> <p>App will download trailer in the available format and then convert it to the selected format using Ffmpeg.</p>"},{"location":"user-guide/settings/profiles/settings/file/#file-name","title":"File Name","text":"Type Required Default Valid Values String Yes {title} ({year})-trailer.{ext} Any string (Max length: 150 characters) <p>File name format for the trailers. </p> <p>Wrap a supported variable in <code>{}</code> like <code>{title}</code> and it will be replaced in the actual file name. Supports Python string formatting options. </p> <p>You can use the following placeholders in the file name:</p> Placeholder Description clean_title Cleaned title of the media. Eg: 'thematrix' imdb_id IMDB ID of the media. Eg: 'tt0133093' is_movie 'movie' if the media is a movie, 'series' if the media is a series. language Language of the media in Radarr/Sonarr. Eg: 'English' media_filename Filename of the media, Movies only, Series will empty. Eg: 'The.Matrix.1999.1080p.BluRay.x264.DTS-FGT' studio Studio of the media. Eg: 'Village Roadshow Pictures' title Title of the media. Eg: 'The Matrix' title_slug TMDB ID for Movies and a hash seperated title for Series. Eg: '603' (movie) or 'the-big-bang-theory' (series) txdb_id TMDB ID for Movies, TVDB ID for Series. Eg: '603' year Year of the media. Eg: '1999' acodec Audio codec of the media. Eg: 'aac' resolution Resolution of the media. Eg: '1080p' vcodec Video codec of the media. Eg: 'h264' youtube_id YouTube ID of the trailer. Eg: 'KbWtUJjMj3Y' <p>Info</p> <p>Filename will be cleaned to remove restricted characters <code>&lt;&gt;:\"/\\\\|?*\\x00-\\x1F</code> to ensure compatibility with filesystems.</p>"},{"location":"user-guide/settings/profiles/settings/file/#folder-enabled","title":"Folder Enabled","text":"Type Required Default Valid Values Boolean Yes false true or false <p>This setting allows you to enable or disable the folder creation for the trailers. </p> <ul> <li>If enabled, a folder will be created for the trailer files in the media folder. </li> <li>If disabled, the trailer files will be saved directly in the media folder.</li> </ul> <p>Note</p> <p>It is recommended to enable this setting for Series trailers.</p>"},{"location":"user-guide/settings/profiles/settings/file/#folder-name","title":"Folder Name","text":"Type Required Default Valid Values String No Trailers Any string (Max length: 50 characters) <p>This setting allows you to specify the name of the folder where the trailer files will be saved. If <code>Folder Enabled</code> is set to <code>false</code>, this setting will be ignored.</p>"},{"location":"user-guide/settings/profiles/settings/file/#embed-metadata","title":"Embed Metadata","text":"Type Required Default Valid Values Boolean Yes true true or false <p>This setting allows you to embed metadata in the trailer files. If enabled, the metadata will be embedded in the trailer files using Ffmpeg.</p>"},{"location":"user-guide/settings/profiles/settings/file/#remove-silence","title":"Remove Silence","text":"Type Required Default Valid Values Boolean Yes false true or false <p>Enable this option to let Trailarr analyse the video file and remove it. This helps remove video end credits usually added to show end credits or other video suggestions on YouTube.</p> <p>Silence is detected using <code>ffmpeg silencedetect</code> and if there is any silence (less than 30dB audio) for more than 3 seconds at the end of video file, video will be trimmed till the starting timestamp of the detected silence.</p>"},{"location":"user-guide/settings/profiles/settings/general/","title":"General","text":""},{"location":"user-guide/settings/profiles/settings/general/#profile-name","title":"Profile Name","text":"Type Required Valid Values String Yes Any string (Max length: 100 characters) <p>This is the name of the profile that will be displayed in the UI. Choose a name that clearly identifies the purpose of the profile or a silly name (it doesn't really matter).</p>"},{"location":"user-guide/settings/profiles/settings/general/#profile-enabled","title":"Profile Enabled","text":"Type Required Default Valid Values Boolean Yes true true or false <p>This setting allows you to enable or disable the profile. Only enabled profiles will be used for downloading and processing trailers.</p> <p>Note</p> <p>Disabled profiles can still be used for manual trailer downloads from the UI, but they will not be applied automatically during the <code>Download Missing Trailers</code> task.</p>"},{"location":"user-guide/settings/profiles/settings/general/#priority","title":"Priority","text":"Type Required Default Valid Values Integer Yes 0 0 to 999 <p>This setting determines the order in which profile is applied when multiple profiles match a media item. Profiles with a higher priority (highest numerical value) will be processed first. </p> <p>Warning</p> <p>If two profiles have the same priority, any one of them can be used, so it is recommended to use unique priorities for each profile.</p>"},{"location":"user-guide/settings/profiles/settings/search/","title":"Search","text":""},{"location":"user-guide/settings/profiles/settings/search/#search-query","title":"Search Query","text":"Type Required Default Valid Values String Yes {title} {year} {is_movie} trailer Any string (Max length: 150 characters) <p>Enter a search query to use when searching for trailers on YouTube. </p> <p>Wrap a supported variable in <code>{}</code> like <code>{title}</code> and it will be replaced in the actual search query. Supports Python string formatting options.</p> <p>You can use the following placeholders in the file name:</p> Placeholder Description clean_title Cleaned title of the media. Eg: 'thematrix' imdb_id IMDB ID of the media. Eg: 'tt0133093' is_movie 'movie' if the media is a movie, 'series' if the media is a series. language Language of the media in Radarr/Sonarr. Eg: 'English' media_filename Filename of the media, Movies only, Series will empty. Eg: 'The.Matrix.1999.1080p.BluRay.x264.DTS-FGT' studio Studio of the media. Eg: 'Village Roadshow Pictures' title Title of the media. Eg: 'The Matrix' title_slug TMDB ID for Movies and a hash seperated title for Series. Eg: '603' (movie) or 'the-big-bang-theory' (series) txdb_id TMDB ID for Movies, TVDB ID for Series. Eg: '603' year Year of the media. Eg: '1999'"},{"location":"user-guide/settings/profiles/settings/search/#minimum-duration","title":"Minimum Duration","text":"Type Required Default Valid Values Integer Yes 30 30 - 540 <p>Select the minimum duration of the trailers to download. Trailers with a duration less than this value will be skipped.</p>"},{"location":"user-guide/settings/profiles/settings/search/#maximum-duration","title":"Maximum Duration","text":"Type Required Default Valid Values Integer Yes 600 90 - 600 <p>Select the maximum duration of the trailers to download. Trailers with a duration greater than this value will be skipped.</p> <p>Info</p> <p>If you want to download trailers with a duration of 2 minutes to 5 minutes, set <code>Trailer Minimum Duration</code> to <code>120</code> seconds and <code>Trailer Maximum Duration</code> to <code>300</code> seconds.</p> <p>60 Seconds Gap Required</p> <p>There should be a gap of at least 60 seconds between <code>Trailer Minimum Duration</code> and <code>Trailer Maximum Duration</code>. For example, if <code>Trailer Minimum Duration</code> is set to <code>120</code> seconds, then <code>Trailer Maximum Duration</code> should be set to at least <code>180</code> seconds.</p>"},{"location":"user-guide/settings/profiles/settings/search/#always-search","title":"Always Search","text":"Type Required Default Valid Values Boolean Yes false true or false <p>Enable this setting to always search YouTube for trailers. If disabled, the app will only search YouTube if it cannot find a trailer in Radarr, Sonarr doesn't provide youtube trailer ids.</p>"},{"location":"user-guide/settings/profiles/settings/search/#include-words-in-title","title":"Include Words in Title","text":"Type Required Default Valid Values String No (empty) Comma-separated list of words <p>Enter a comma separated list of words that should be included in the title when searching for trailers. This can be useful for finding specific versions or edits of trailers.</p> <p>All Words Must Be Present</p> <p>A video is considered a match only if all the words in the list are present in the title of the trailer. If any word is missing, the trailer will be skipped. For example, <code>official,teaser</code> will be matched if title is <code>The Matrix (1999) - Official Trailer</code>.</p>"},{"location":"user-guide/settings/profiles/settings/search/#exclude-words-in-title","title":"Exclude Words in Title","text":"Type Required Default Valid Values String No (empty) Comma-separated list of words <p>Enter a comma separated list of words to exclude from the title of the trailers. If the title of the trailer contains any of the words in the list, the trailer will be skipped. For example, <code>teaser,clip,featurette</code>.</p> <p>All Words Must Be Absent</p> <p>Unlike <code>Include Words in Title</code>, if any of the words in this list are present in the title of the trailer, it will be skipped.</p>"},{"location":"user-guide/settings/profiles/settings/search/#yt-dlp-extra-options","title":"Yt-dlp Extra Options","text":"Type Required Default Valid Values String No (empty) Any valid yt-dlp options <p>Enter any additional options you want to pass to <code>yt-dlp</code> when downloading the trailer. This can be useful for advanced users who want to customize the download process.</p> <p>Please refer to the yt-dlp documentation for a list of all available options.</p> <p>Use with Caution</p> <p>This setting is for advanced users only and should be used with caution. It allows you to pass any valid <code>yt-dlp</code> options to the download command. Incorrect options can cause the download to fail.</p>"},{"location":"user-guide/settings/profiles/settings/subtitle/","title":"Subtitle","text":""},{"location":"user-guide/settings/profiles/settings/subtitle/#subtitles-enabled","title":"Subtitles Enabled","text":"Type Required Default Valid Values Boolean Yes true true or false <p>Enable this setting to download subtitles for trailers, if available.</p>"},{"location":"user-guide/settings/profiles/settings/subtitle/#subtitles-format","title":"Subtitles Format","text":"Type Required Default Valid Values String Yes srt srt, vtt <p>Select the format of the subtitles to download. Available options are <code>srt</code>, <code>vtt</code>.</p> <p>Info</p> <p>App will download subtitles in the available format and then convert it to the selected format using Ffmpeg.</p>"},{"location":"user-guide/settings/profiles/settings/subtitle/#subtitles-language","title":"Subtitles Language","text":"Type Required Default Valid Values String Yes en valid ISO 639-1 language code(s) <p>Select the language of the subtitles to download. </p> <p>A valid ISO 639-1 language code is required. See ISO 639-1 language codes for more information.</p> <p>Info</p> <p>Multiple languages can be set with a comma separated list. For example, <code>en,es,fr</code>.</p>"},{"location":"user-guide/settings/profiles/settings/video/","title":"Video","text":""},{"location":"user-guide/settings/profiles/settings/video/#video-format","title":"Video Format","text":"Type Required Default Valid Values String Yes vp9 h264, h265, vp8, vp9, av1, copy <p>Select the video format/codec of the trailers to download.</p> <p>Trailarr will try to download trailer in the selected codec if available, else it will download in best format available and then convert it to the selected codec using Ffmpeg.</p> <p>Note</p> <p>If you select <code>copy</code>, Trailarr will not convert the video codec and will download the trailer in the best available format. Use with <code>File Format</code> as <code>mkv</code> as other formats do not support all video codecs.</p> <p>Warning</p> <p>If <code>av1</code> is selected, app will try to download trailer in <code>av1</code> format. If not available, it will fallback to <code>vp9</code>. App will not convert the downloaded trailer to <code>av1</code> format.</p>"},{"location":"user-guide/settings/profiles/settings/video/#video-resolution","title":"Video Resolution","text":"Type Required Default Valid Values Integer Yes 1080 360, 480, 720, 1080, 1440, 2160 <p>Select the video resolution of the trailers to download.</p> <p>Trailarr will try to download trailer in the selected resolution if available, else it will download in next best resolution available.</p>"},{"location":"user-guide/tasks/","title":"Tasks","text":"<p>The Tasks page shows all background jobs that keep Trailarr running smoothly. You can view scheduled jobs, see their status, and run them manually if needed.</p>"},{"location":"user-guide/tasks/#scheduled-tasks","title":"Scheduled Tasks","text":""},{"location":"user-guide/tasks/#arr-data-refresh","title":"Arr Data Refresh","text":"<ul> <li>Runs every 60 minutes (first run starts 30 seconds after app launch) (configurable in Settings &gt; General &gt; Monitor Interval).</li> <li>Connects to all Radarr and Sonarr connections to sync media items and their status in Trailarr.</li> <li>Applies <code>Monitor</code> and <code>Status</code> values, and scans for trailers for new items.</li> <li>Runs as a background job; first run starts 30 seconds after app launch.</li> <li>If the task is already running, a new instance will not start until the previous one finishes.</li> </ul>"},{"location":"user-guide/tasks/#docker-update-check","title":"Docker Update Check","text":"<ul> <li>Runs once a day (first run starts 4 minutes after app launch).</li> <li>Checks if a new Docker image is available for Trailarr and notifies in the UI/logs.</li> <li>Does not auto-update; you must update the container manually.</li> </ul>"},{"location":"user-guide/tasks/#scan-disk-for-trailers","title":"Scan Disk for Trailers","text":"<ul> <li>Runs every 60 minutes (same as Arr Data Refresh; first run starts 8 minutes after app launch).</li> <li>Scans your media folders for trailers and updates the database with found trailers.</li> <li>Useful if you add/delete trailers manually or outside of Trailarr.</li> </ul>"},{"location":"user-guide/tasks/#download-missing-trailers","title":"Download Missing Trailers","text":"<ul> <li>Runs every 60 minutes (same as Arr Data Refresh; first run starts 15 minutes after app launch).</li> <li>Downloads trailers for media that are missing them, based on your profiles and filters.</li> <li>Uses yt-dlp and ffmpeg for downloading and conversion.</li> <li> <p>There is a delay between consecutive trailer downloads. The delays are as follows:</p> Download No Delay 1 - 9 2 mins 10 - 49 4 mins 50 - 99 6 mins 100 - 199 7 mins 200 - 499 9 mins 1000+ 10 mins <p>All delays also includes an extra random time between <code>0 - 60</code> seconds.</p> </li> </ul>"},{"location":"user-guide/tasks/#image-refresh","title":"Image Refresh","text":"<ul> <li>Runs every 6 hours (first run starts 12 minutes after app launch).</li> <li>Updates artwork and images for your media library.</li> <li>Ensures posters, backgrounds, and other images are up to date.</li> </ul>"},{"location":"user-guide/tasks/#trailer-cleanup","title":"Trailer Cleanup","text":"<ul> <li>Runs once a day (first run starts 4 hours after app launch).</li> <li>Cleans up broken, incomplete, or audio-less trailers from your library.</li> <li>Helps keep your storage clean and avoids playback issues.</li> </ul>"},{"location":"user-guide/tasks/#queued-tasks","title":"Queued Tasks","text":"<p>You can see queued/running jobs and their progress in real time.</p> <p>Tip</p> <p>You might sometimes see an error in logs like below and it's normal behaviour. All the tasks are setup such that if that task is already running, it won't start a new one!</p> <pre><code>WARNING: Tasks: Execution of job \"Download Missing Trailers (trigger: interval[1:00:00], next run at: 2025-06-20 11:30:10 CDT)\" skipped: maximum number of running instances reached (1)\n</code></pre>"}]}